{"version":3,"sources":["./node_modules/ng-otp-input/__ivy_ngcc__/fesm2015/ng-otp-input.js","./src/app/_validators/must-match.validator.ts","./src/app/authentication/404/not-found.component.ts","./src/app/authentication/404/not-found.component.html","./src/app/authentication/authentication.module.ts","./src/app/authentication/authentication.routing.ts","./src/app/authentication/lock/changepassword.component.ts","./src/app/authentication/lock/changepassword.component.html","./src/app/authentication/login2/login2.component.ts","./src/app/authentication/login2/login2.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyH;AAC/B;AAC3C;;AAE/C;AACA;AACA,cAAc,wGAAwG;AACtH;AACwC;AACE;AACD;;AAEzC,8DAA8D;AAC9D,gBAAgB,8DAAuB;AACvC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,kGAAkG,CAAC,2DAAoB,MAAM,gBAAgB,2DAAoB,IAAI,iCAAiC,EAAE,+FAA+F,CAAC,2DAAoB,MAAM,wBAAwB,gBAAgB,2DAAoB,IAAI,qCAAqC,EAAE;AAC9b,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA;AACA,mBAAmB,2DAAoB;AACvC,IAAI,oEAA6B;AACjC,IAAI,oEAA6B;AACjC,IAAI,wDAAiB;AACrB,CAAC;AACD,sDAAsD;AACtD,IAAI,4DAAqB;AACzB,IAAI,wDAAiB;AACrB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,oEAA6B;AACjC,IAAI,oEAA6B;AACjC,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB,YAAY,yDAAkB;AACnD,CAAC;AACD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,8CAA8C,8BAA8B;AAC5E,iBAAiB,0DAAmB,EAAE,2CAA2C;AACjF,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,kDAAI;AAClB;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,WAAW,EAqBV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,uBAAuB;AACvB;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,2BAA2B,wDAAS,GAAG;AACvC,2BAA2B,4BAA4B;AACvD,oEAAoE,0DAAW;AAC/E;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,+DAA+D,kBAAkB;AACjF;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,IAAI;AAC3B;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,kDAAkD,aAAa;AAC/D,mBAAmB,EAAE;AACrB,kDAAkD,aAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,GAAG,GAAG,kBAAkB;AAC1C;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AACh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","file":"authentication-authentication-module-es2015.js","sourcesContent":["import { Pipe, EventEmitter, Component, Input, Output, Directive, ElementRef, Renderer2, NgModule } from '@angular/core';\nimport { FormGroup, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/forms';\n\nfunction NgOtpInputComponent_div_0_input_1_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 3);\n    ɵngcc0.ɵɵlistener(\"keydown\", function NgOtpInputComponent_div_0_input_1_Template_input_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ctx_r4.onKeyDown($event); })(\"keyup\", function NgOtpInputComponent_div_0_input_1_Template_input_keyup_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const i_r3 = ctx.index; const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.onKeyUp($event, i_r3); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"otp-input \", ctx_r1.config.inputClass, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate2(\"id\", \"otp_\", i_r3, \"_\", ctx_r1.componentKey, \"\");\n    ɵngcc0.ɵɵproperty(\"pattern\", ctx_r1.config.allowNumbersOnly ? \"\\\\d*\" : \"\")(\"type\", ctx_r1.inputType)(\"placeholder\", (ctx_r1.config == null ? null : ctx_r1.config.placeholder) || \"\")(\"disabledNumberOnly\", !ctx_r1.config.allowNumbersOnly)(\"ngStyle\", ctx_r1.config.inputStyles)(\"formControl\", ctx_r1.otpForm.controls[item_r2]);\n} }\nfunction NgOtpInputComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, NgOtpInputComponent_div_0_input_1_Template, 1, 11, \"input\", 2);\n    ɵngcc0.ɵɵpipe(2, \"keys\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMapInterpolate1(\"wrapper \", ctx_r0.config.containerClass, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"c_\", ctx_r0.componentKey, \"\");\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r0.config.containerStyles);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind1(2, 6, ctx_r0.otpForm == null ? null : ctx_r0.otpForm.controls));\n} }\nclass KeysPipe {\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    transform(value) {\r\n        return Object.keys(value);\r\n    }\r\n}\nKeysPipe.ɵfac = function KeysPipe_Factory(t) { return new (t || KeysPipe)(); };\nKeysPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"keys\", type: KeysPipe, pure: true });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(KeysPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'keys'\n            }]\n    }], null, null); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass Config {\r\n}\r\nif (false) {\r\n    /** @type {?} */\r\n    Config.prototype.inputStyles;\r\n    /** @type {?} */\r\n    Config.prototype.containerStyles;\r\n    /** @type {?} */\r\n    Config.prototype.allowKeyCodes;\r\n    /** @type {?} */\r\n    Config.prototype.length;\r\n    /** @type {?} */\r\n    Config.prototype.allowNumbersOnly;\r\n    /** @type {?} */\r\n    Config.prototype.inputClass;\r\n    /** @type {?} */\r\n    Config.prototype.containerClass;\r\n    /** @type {?} */\r\n    Config.prototype.isPasswordInput;\r\n    /** @type {?} */\r\n    Config.prototype.disableAutoFocus;\r\n    /** @type {?} */\r\n    Config.prototype.placeholder;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgOtpInputComponent {\r\n    /**\r\n     * @param {?} keysPipe\r\n     */\r\n    constructor(keysPipe) {\r\n        this.keysPipe = keysPipe;\r\n        this.config = { length: 4 };\r\n        // tslint:disable-next-line: no-output-on-prefix\r\n        this.onInputChange = new EventEmitter();\r\n        this.inputControls = new Array(this.config.length);\r\n        this.componentKey = Math.random()\r\n            .toString(36)\r\n            .substring(2) + new Date().getTime().toString(36);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        this.otpForm = new FormGroup({});\r\n        for (let index = 0; index < this.config.length; index++) {\r\n            this.otpForm.addControl(this.getControlName(index), new FormControl());\r\n        }\r\n        this.inputType = this.getInputType();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngAfterViewInit() {\r\n        if (!this.config.disableAutoFocus) {\r\n            /** @type {?} */\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            if (containerItem) {\r\n                containerItem.addEventListener('paste', (/**\r\n                 * @param {?} evt\r\n                 * @return {?}\r\n                 */\r\n                (evt) => this.handlePaste(evt)));\r\n                /** @type {?} */\r\n                const ele = containerItem.getElementsByClassName('otp-input')[0];\r\n                if (ele && ele.focus) {\r\n                    ele.focus();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} idx\r\n     * @return {?}\r\n     */\r\n    getControlName(idx) {\r\n        return `ctrl_${idx}`;\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifLeftArrow(event) {\r\n        return this.ifKeyCode(event, 37);\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifRightArrow(event) {\r\n        return this.ifKeyCode(event, 39);\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifBackspaceOrDelete(event) {\r\n        return (event.key === 'Backspace' ||\r\n            event.key === 'Delete' ||\r\n            this.ifKeyCode(event, 8) ||\r\n            this.ifKeyCode(event, 46));\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @param {?} targetCode\r\n     * @return {?}\r\n     */\r\n    ifKeyCode(event, targetCode) {\r\n        /** @type {?} */\r\n        const key = event.keyCode || event.charCode;\r\n        // tslint:disable-next-line: triple-equals\r\n        return key == targetCode ? true : false;\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onKeyDown($event) {\r\n        /** @type {?} */\r\n        var isSpace = this.ifKeyCode($event, 32);\r\n        if (isSpace) { // prevent space\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @param {?} inputIdx\r\n     * @return {?}\r\n     */\r\n    onKeyUp($event, inputIdx) {\r\n        /** @type {?} */\r\n        const nextInputId = this.appendKey(`otp_${inputIdx + 1}`);\r\n        /** @type {?} */\r\n        const prevInputId = this.appendKey(`otp_${inputIdx - 1}`);\r\n        if (this.ifRightArrow($event)) {\r\n            this.setSelected(nextInputId);\r\n            return;\r\n        }\r\n        if (this.ifLeftArrow($event)) {\r\n            this.setSelected(prevInputId);\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        const isBackspace = this.ifBackspaceOrDelete($event);\r\n        if (isBackspace && !$event.target.value) {\r\n            this.setSelected(prevInputId);\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        if (!$event.target.value) {\r\n            return;\r\n        }\r\n        if (this.ifValidEntry($event)) {\r\n            this.setSelected(nextInputId);\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    appendKey(id) {\r\n        return `${id}_${this.componentKey}`;\r\n    }\r\n    /**\r\n     * @param {?} eleId\r\n     * @return {?}\r\n     */\r\n    setSelected(eleId) {\r\n        this.focusTo(eleId);\r\n        /** @type {?} */\r\n        const ele = document.getElementById(eleId);\r\n        if (ele && ele.setSelectionRange) {\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                ele.setSelectionRange(0, 1);\r\n            }), 0);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifValidEntry(event) {\r\n        /** @type {?} */\r\n        const inp = String.fromCharCode(event.keyCode);\r\n        /** @type {?} */\r\n        const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        return (isMobile ||\r\n            /[a-zA-Z0-9-_]/.test(inp) ||\r\n            (this.config.allowKeyCodes &&\r\n                this.config.allowKeyCodes.includes(event.keyCode)) ||\r\n            (event.keyCode >= 96 && event.keyCode <= 105));\r\n    }\r\n    /**\r\n     * @param {?} eleId\r\n     * @return {?}\r\n     */\r\n    focusTo(eleId) {\r\n        /** @type {?} */\r\n        const ele = document.getElementById(eleId);\r\n        if (ele) {\r\n            ele.focus();\r\n        }\r\n    }\r\n    // method to set component value\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    setValue(value) {\r\n        if (this.config.allowNumbersOnly && isNaN(value)) {\r\n            return;\r\n        }\r\n        this.otpForm.reset();\r\n        if (!value) {\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        value = value.toString().replace(/\\s/g, ''); // remove whitespace\r\n        Array.from(value).forEach((/**\r\n         * @param {?} c\r\n         * @param {?} idx\r\n         * @return {?}\r\n         */\r\n        (c, idx) => {\r\n            if (this.otpForm.get(this.getControlName(idx))) {\r\n                this.otpForm.get(this.getControlName(idx)).setValue(c);\r\n            }\r\n        }));\r\n        if (!this.config.disableAutoFocus) {\r\n            /** @type {?} */\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            /** @type {?} */\r\n            var indexOfElementToFocus = value.length < this.config.length ? value.length : (this.config.length - 1);\r\n            /** @type {?} */\r\n            let ele = containerItem.getElementsByClassName('otp-input')[indexOfElementToFocus];\r\n            if (ele && ele.focus) {\r\n                ele.focus();\r\n            }\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    rebuildValue() {\r\n        /** @type {?} */\r\n        let val = '';\r\n        this.keysPipe.transform(this.otpForm.controls).forEach((/**\r\n         * @param {?} k\r\n         * @return {?}\r\n         */\r\n        k => {\r\n            if (this.otpForm.controls[k].value) {\r\n                val += this.otpForm.controls[k].value;\r\n            }\r\n        }));\r\n        this.onInputChange.emit(val);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getInputType() {\r\n        return this.config.isPasswordInput\r\n            ? 'password'\r\n            : this.config.allowNumbersOnly\r\n                ? 'tel'\r\n                : 'text';\r\n    }\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    handlePaste(e) {\r\n        // Get pasted data via clipboard API\r\n        /** @type {?} */\r\n        let clipboardData = e.clipboardData || window['clipboardData'];\r\n        if (clipboardData) {\r\n            /** @type {?} */\r\n            var pastedData = clipboardData.getData('Text');\r\n        }\r\n        // Stop data actually being pasted into div\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        if (!pastedData) {\r\n            return;\r\n        }\r\n        this.setValue(pastedData);\r\n    }\r\n}\nNgOtpInputComponent.ɵfac = function NgOtpInputComponent_Factory(t) { return new (t || NgOtpInputComponent)(ɵngcc0.ɵɵdirectiveInject(KeysPipe)); };\nNgOtpInputComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgOtpInputComponent, selectors: [[\"ng-otp-input\"]], inputs: { config: \"config\" }, outputs: { onInputChange: \"onInputChange\" }, decls: 1, vars: 1, consts: [[3, \"class\", \"id\", \"ngStyle\", 4, \"ngIf\"], [3, \"id\", \"ngStyle\"], [\"numberOnly\", \"\", \"maxlength\", \"1\", \"autocomplete\", \"off\", 3, \"pattern\", \"type\", \"placeholder\", \"disabledNumberOnly\", \"ngStyle\", \"class\", \"formControl\", \"id\", \"keydown\", \"keyup\", 4, \"ngFor\", \"ngForOf\"], [\"numberOnly\", \"\", \"maxlength\", \"1\", \"autocomplete\", \"off\", 3, \"pattern\", \"type\", \"placeholder\", \"disabledNumberOnly\", \"ngStyle\", \"formControl\", \"id\", \"keydown\", \"keyup\"]], template: function NgOtpInputComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgOtpInputComponent_div_0_Template, 3, 8, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.otpForm == null ? null : ctx.otpForm.controls);\n    } }, directives: function () { return [ɵngcc1.NgIf, ɵngcc1.NgStyle, ɵngcc1.NgForOf, ɵngcc2.DefaultValueAccessor, NumberOnlyDirective, ɵngcc2.MaxLengthValidator, ɵngcc2.PatternValidator, ɵngcc2.NgControlStatus, ɵngcc2.FormControlDirective]; }, pipes: function () { return [KeysPipe]; }, styles: [\".otp-input[_ngcontent-%COMP%]{width:50px;height:50px;border-radius:4px;border:1px solid #c5c5c5;text-align:center;font-size:32px}.wrapper[_ngcontent-%COMP%]   .otp-input[_ngcontent-%COMP%]:not(:last-child){margin-right:8px}@media screen and (max-width:767px){.otp-input[_ngcontent-%COMP%]{width:40px;font-size:24px;height:40px}}@media screen and (max-width:420px){.otp-input[_ngcontent-%COMP%]{width:30px;font-size:18px;height:30px}}\"] });\r\n/** @nocollapse */\r\nNgOtpInputComponent.ctorParameters = () => [\r\n    { type: KeysPipe }\r\n];\r\nNgOtpInputComponent.propDecorators = {\r\n    config: [{ type: Input }],\r\n    onInputChange: [{ type: Output }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgOtpInputComponent, [{\n        type: Component,\n        args: [{\n                // tslint:disable-next-line: component-selector\n                selector: 'ng-otp-input',\n                template: \"<div class=\\\"wrapper {{config.containerClass}}\\\" id=\\\"c_{{componentKey}}\\\" *ngIf=\\\"otpForm?.controls\\\"\\r\\n  [ngStyle]=\\\"config.containerStyles\\\">\\r\\n  <input [pattern]=\\\"config.allowNumbersOnly ? '\\\\\\\\d*' : ''\\\" [type]=\\\"inputType\\\" numberOnly [placeholder]=\\\"config?.placeholder || ''\\\"\\r\\n    [disabledNumberOnly]=\\\"!config.allowNumbersOnly\\\" [ngStyle]=\\\"config.inputStyles\\\" maxlength=\\\"1\\\"\\r\\n    class=\\\"otp-input {{config.inputClass}}\\\" autocomplete=\\\"off\\\" *ngFor=\\\"let item of otpForm?.controls | keys;let i=index\\\"\\r\\n    [formControl]=\\\"otpForm.controls[item]\\\" id=\\\"otp_{{i}}_{{componentKey}}\\\" (keydown)=\\\"onKeyDown($event)\\\"\\r\\n    (keyup)=\\\"onKeyUp($event,i)\\\">\\r\\n</div>\",\n                styles: [\".otp-input{width:50px;height:50px;border-radius:4px;border:1px solid #c5c5c5;text-align:center;font-size:32px}.wrapper .otp-input:not(:last-child){margin-right:8px}@media screen and (max-width:767px){.otp-input{width:40px;font-size:24px;height:40px}}@media screen and (max-width:420px){.otp-input{width:30px;font-size:18px;height:30px}}\"]\n            }]\n    }], function () { return [{ type: KeysPipe }]; }, { config: [{\n            type: Input\n        }], onInputChange: [{\n            type: Output\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.config;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.onInputChange;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.otpForm;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.inputControls;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.componentKey;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.inputType;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgOtpInputComponent.prototype.keysPipe;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NumberOnlyDirective {\r\n    /**\r\n     * @param {?} _elRef\r\n     * @param {?} _renderer\r\n     */\r\n    constructor(_elRef, _renderer) {\r\n        this._elRef = _elRef;\r\n        this._renderer = _renderer;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (!this.disabledNumberOnly) {\r\n            this._renderer.setAttribute(this._elRef.nativeElement, 'onkeypress', 'return (event.charCode >= 48 && event.charCode <= 57) || event.charCode == 0');\r\n        }\r\n    }\r\n}\nNumberOnlyDirective.ɵfac = function NumberOnlyDirective_Factory(t) { return new (t || NumberOnlyDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nNumberOnlyDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NumberOnlyDirective, selectors: [[\"\", \"numberOnly\", \"\"]], inputs: { disabledNumberOnly: \"disabledNumberOnly\" } });\r\n/** @nocollapse */\r\nNumberOnlyDirective.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Renderer2 }\r\n];\r\nNumberOnlyDirective.propDecorators = {\r\n    disabledNumberOnly: [{ type: Input }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NumberOnlyDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[numberOnly]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { disabledNumberOnly: [{\n            type: Input\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    NumberOnlyDirective.prototype.disabledNumberOnly;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NumberOnlyDirective.prototype._elRef;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NumberOnlyDirective.prototype._renderer;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgOtpInputModule {\r\n}\nNgOtpInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgOtpInputModule });\nNgOtpInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgOtpInputModule_Factory(t) { return new (t || NgOtpInputModule)(); }, providers: [KeysPipe], imports: [[\n            CommonModule,\n            FormsModule,\n            ReactiveFormsModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgOtpInputModule, { declarations: function () { return [NgOtpInputComponent, KeysPipe, NumberOnlyDirective]; }, imports: function () { return [CommonModule,\n        FormsModule,\n        ReactiveFormsModule]; }, exports: function () { return [NgOtpInputComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgOtpInputModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    ReactiveFormsModule\n                ],\n                declarations: [NgOtpInputComponent, KeysPipe, NumberOnlyDirective],\n                exports: [NgOtpInputComponent],\n                providers: [KeysPipe]\n            }]\n    }], null, null); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { NgOtpInputModule, NgOtpInputComponent as ɵa, KeysPipe as ɵb, NumberOnlyDirective as ɵc };\n\n//# sourceMappingURL=ng-otp-input.js.map","import { FormGroup } from '@angular/forms';\n// custom validator to check that two fields match\nexport function MustMatch(controlName: string, matchingControlName: string) {\n    return (formGroup: FormGroup) => {\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n            // return if another validator has already found an error on the matchingControl\n            return;\n        }\n        // set error on matchingControl if validation fails\n        if (control.value !== matchingControl.value) {\n            matchingControl.setErrors({ mustMatch: true });\n        } else {\n            matchingControl.setErrors(null);\n        }\n    }\n}","import { Component, AfterViewInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html'\n})\nexport class NotfoundComponent implements AfterViewInit {\n  ngAfterViewInit() {}\n}\n","<div class=\"error-box\">\n    <div class=\"error-body text-center\">\n        <h1 class=\"error-title text-danger\">404</h1>\n        <h3 class=\"text-uppercase error-subtitle\">PAGE NOT FOUND !</h3>\n        <p class=\"text-muted m-t-30 m-b-30\">YOU SEEM TO BE TRYING TO FIND HIS WAY HOME</p>\n        <a routerLink=\"/dashboard\" class=\"btn btn-danger btn-rounded waves-effect waves-light m-b-40\">Back to home</a> \n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { NotfoundComponent } from './404/not-found.component';\nimport { changepasswordComponent } from './lock/changepassword.component'; \n// import { LoginComponent } from './login/login.component';\nimport { Login2Component } from './login2/login2.component';\n// import { SignupComponent } from './signup/signup.component';\n// import { Signup2Component } from './signup2/signup2.component';\n\nimport { AuthenticationRoutes } from './authentication.routing';\nimport { NgOtpInputModule } from  'ng-otp-input';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(AuthenticationRoutes),\n    NgbModule,\n    NgOtpInputModule,\n    NgxSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [\n    NotfoundComponent,\n    // LoginComponent,\n    // SignupComponent,\n    changepasswordComponent,\n    Login2Component,\n    // Signup2Component,\n    \n  ]\n})\nexport class AuthenticationModule {}\n","import { Routes } from '@angular/router';\n\nimport { NotfoundComponent } from './404/not-found.component';\nimport { changepasswordComponent } from './lock/changepassword.component';\n// import { LoginComponent } from './login/login.component';\nimport { Login2Component } from './login2/login2.component';\n// import { SignupComponent } from './signup/signup.component';\n// import { Signup2Component } from './signup2/signup2.component';\n\nexport const AuthenticationRoutes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: '404',\n        component: NotfoundComponent\n      },\n      {\n        path: 'changepassword',\n        component: changepasswordComponent\n      },\n      // {\n      //   path: 'login2',\n      //   component: LoginComponent\n      // },\n      {\n        path: 'login',\n        component: Login2Component\n      },\n      // {\n      //   path: 'signup',\n      //   component: SignupComponent\n      // },\n      // {\n      //   path: 'signup2',\n      //   component: Signup2Component\n      // }\n    ]\n  }\n];\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { CommonService } from 'src/app/_services/common.service';\nimport { MustMatch } from 'src/app/_validators/must-match.validator';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-changepassword',\n  templateUrl: './changepassword.component.html',\n  styleUrls: ['./changePass.scss']\n})\nexport class changepasswordComponent implements OnInit{\n  PhoneSignupForm:FormGroup\n  obj:any\n  Reference:any\n  currentUser: any;\n  ChangePasswordToute:any = `user/change-password/`\n  IsToken :boolean = false\n  constructor(private fb:FormBuilder,private router:Router,private service:CommonService,private toaster:ToastrService) {\n   this.currentUser = JSON.parse(sessionStorage.getItem(environment.storageKey));\n  }\nngOnInit(){\nthis.obj = this.service.SaveObj\nif(this.currentUser && this.currentUser.token){\n  this.IsToken = true\n  this.PhoneSignupForm=this.fb.group({\n    \"oldPassword\":[\"\",[Validators.required, Validators.minLength(8), Validators.maxLength(16)]],\n    \"password\":[\"\",[Validators.required, Validators.minLength(8), Validators.maxLength(16)]],\n    \"cnfPassword\":[\"\",[Validators.required]]\n  },{ validators: MustMatch('password', 'cnfPassword') })\n}else{\n  this.PhoneSignupForm=this.fb.group({\n    \"password\":[\"\",[Validators.required, Validators.minLength(8), Validators.maxLength(16)]],\n    \"cnfPassword\":[\"\",[Validators.required]]\n  },{ validators: MustMatch('password', 'cnfPassword') })\n}\n  \n}\nchangepass()\n  {\n  if(this.PhoneSignupForm.valid){\n    this.CallChangePassword()\n}else{\n  this.PhoneSignupForm.markAllAsTouched()\n}\n}\n  BackToDashboard()\n  {\n    window.history.back();\n  }\n  CallChangePassword(){\n    if(this.currentUser && this.currentUser.token){\n      this.ChangePasswordToute = `user/update-password/`\n       this.obj = {\n        current_password:this.PhoneSignupForm.value.oldPassword,\n        new_password:this.PhoneSignupForm.value.password\n        }\n      }else{\n        this.obj = {\n         \"email\":this.obj?.email,\n         \"password\":this.PhoneSignupForm.value.password\n       }\n        }\n      this.service.putApi(this.ChangePasswordToute,this.obj).subscribe((res:any)=>{\n        if([200,201].includes(res.code))\n        {\n         this.toaster.success(\"Password has been changed\",'Success');\n         window.history.back();\n        }\n      })\n  }\n}\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/big/auth-bg.jpg) no-repeat center center;\">\n    <div class=\"auth-box\">\n        <div>\n            <div class=\"logo\">\n                <span class=\"db\"><img alt=\"thumbnail\" class=\"\" width=\"100\" src=\"assets/images/logo2.svg\"></span>\n            </div>\n            <!-- Form -->\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <form class=\"form-horizontal m-t-20\" [formGroup]=\"PhoneSignupForm\">\n                        <div class=\"form-group row\" *ngIf=\"IsToken\">\n                            <div class=\"col-12\">\n                                <input class=\"form-control form-control-lg\" type=\"password\" placeholder=\"Old password\" formControlName=\"oldPassword\">\n                            </div>\n                            <span class=\"error\" *ngIf=\"PhoneSignupForm.get('oldPassword').hasError('required') && PhoneSignupForm.get('oldPassword').touched\">Please enter old password.</span>\n                            <span class=\"error\" *ngIf=\"PhoneSignupForm.get('oldPassword').hasError('minlength')\">Minlength should 8.</span>\n                            <span class=\"error\" *ngIf=\"PhoneSignupForm.get('oldPassword').hasError('maxlength')\">Maxlength should 16.</span>\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-12\">\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\"\" placeholder=\"New password\" formControlName=\"password\">\n                            </div>\n                            <span class=\"error\" *ngIf=\"PhoneSignupForm.get('password').hasError('required') && PhoneSignupForm.get('password').touched\">Please enter new password.</span>\n                            <span class=\"error\" *ngIf=\"PhoneSignupForm.get('password').hasError('minlength')\">Minlength should 8.</span>\n                            <span class=\"error\" *ngIf=\"PhoneSignupForm.get('password').hasError('maxlength')\">Maxlength should 16.</span>\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-12\">\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\"\" placeholder=\"Confirm new password\" formControlName=\"cnfPassword\">\n                            </div>\n                            <span class=\"error\" *ngIf=\"PhoneSignupForm.get('cnfPassword').hasError('required') && PhoneSignupForm.get('cnfPassword').touched\">Please enter confirm new password.</span>\n                         <span class=\"error\" *ngIf=\"PhoneSignupForm.get('cnfPassword').hasError('mustMatch')\">Confirm password does not match with new password.</span> \n                        </div>\n                        <div class=\"form-group text-center\">\n                            <div class=\"col-xs-12 p-b-20\">\n                                <button class=\"btn btn-block btn-lg btn-info\" type=\"submit\" (click)=\"changepass()\">Submit</button>\n                            </div>\n                            <div class=\"col-xs-12 text-center\">\n                                <a  (click)=\"BackToDashboard()\" class=\"btn btn-block btn-lg bg-white text-primary\">Cancel</a>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { CommonService } from 'src/app/_services/common.service';\nimport { environment } from 'src/environments/environment';\ndeclare var $:any\n@Component({\n  selector: 'app-login',\n  templateUrl: './login2.component.html',\n  styleUrls: ['./login2.scss']\n\n})\nexport class Login2Component implements OnInit ,AfterViewInit{\n  LoginByEmailform:FormGroup\n  ForgotPasswordForm:FormGroup\n  optValue: any;\n  constructor(private fb:FormBuilder,private router:Router,private service:CommonService,private toaster:ToastrService,private spinner:NgxSpinnerService) {\n    this.LoginByEmailform = this.fb.group({\n      email:['',[Validators.required,Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,3}))$/)]],\n      password:['',[Validators.required,Validators.minLength(8),Validators.maxLength(16)]],\n      rememberMe:[false]\n    })\n   }\n   @ViewChild('ngOtpInput') ngOtpInputRef:any;\n   ResetOtp(){\n    this.ngOtpInputRef.setValue('');\n  }\n  loginform = true;\n  recoverform = false;\n  loginnumber= false;\n  numberform= true;\n  otpform= false;\n\n  showRecoverForm() {\n    this.loginform = !this.loginform;\n    this.recoverform = !this.recoverform;\n  }\n  Openotp(){\n    this.recoverform = !this.recoverform;\n    this.otpform = true;\n    this.numberform = !this.numberform\n    this.loginnumber = !this.loginnumber\n  }\n  shownumbrForm() {\n    this.loginform = !this.loginform;\n    this.loginnumber = !this.loginnumber;\n  }\n  signotpform() {\n    this.numberform = !this.numberform;\n    this.otpform = !this.otpform;\n  }\n  onOtpChange(e) {\n    console.log(e);\n    this.optValue = e\n  }\n  ngAfterViewInit(){\n    this.RememberMe()\n  }\n  ngOnInit(){\n\n    this.ForgotPasswordForm = this.fb.group({\n      email:['',[Validators.required,Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,3}))$/)]],\n    })\n  }\n  CancelledForgot(){\n   this.showRecoverForm()\n  }\n  CallLoginFunction(){\n    \n   if(this.LoginByEmailform.valid){  \n       let rememberMe=this.LoginByEmailform.controls['rememberMe'].value;\n        let obj = {\n         \"email\":this.LoginByEmailform.value.email,\n         \"password\":this.LoginByEmailform.value.password,\n       }\n        this.onLogin(obj)\n        if (rememberMe) {\n          let userData = this.LoginByEmailform.value;\n          localStorage.setItem('TaraRememberMe', JSON.stringify(userData))\n        } else {\n          localStorage.removeItem('TaraRememberMe')\n        }\n     }else{\n      this.LoginByEmailform.markAllAsTouched()\n    }  \n    }\n    onLogin(obj)\n    {\n  this.service.postApi(`auth/admin/login/`,obj).subscribe((res:any)=>{\n    if([200,201].includes(res.code)){\n      setTimeout(() => {\n        this.service.Showspinner()\n      }, 100);\n   this.router.navigate(['dashboard']);\n   sessionStorage.setItem(environment.storageKey,JSON.stringify(res?.data));\n   this.toaster.success('You logged in successfully','',{\n    timeOut: 2000,\n  })\n    }\n    });\n   }\n  RememberMe(){\n    if(localStorage.getItem('TaraRememberMe')){\n      let userDetails = JSON.parse(localStorage.getItem('TaraRememberMe')); \n      this.LoginByEmailform.controls['email'].setValue(userDetails.email);\n      this.LoginByEmailform.controls['password'].setValue(userDetails.password);\n      this.LoginByEmailform.controls['rememberMe'].setValue(userDetails.rememberMe);\n    }\n  }\n  ResetFor(){\n  if(this.ForgotPasswordForm.valid){\n        let obj = {\"email\":this.ForgotPasswordForm.value.email}\n        this.Forgot(obj)\n      }else {\n        this.ForgotPasswordForm.markAllAsTouched()\n      }\n  }\n  Forgot(obj){\n    this.toaster.clear()\n    this.service.put(`user/forgot-password/`,obj).subscribe((res:any)=>{\n      if([200,201].includes(res.code)){\n      this.toaster.success(res.message,'Success',{timeOut:1000})\n     //   $('#exampleModalCenter').modal({backdrop: 'static', keyboard: false}) \n     this.Openotp()\n\n      }\n    })\n  }\n  ForgotOtp(obj){\n    this.service.put(`user/forgot-verify-otp/`,obj).subscribe((res:any)=>{\n      if([200,201].includes(res.code)){\n      this.service.SaveObj = obj\n       this.toaster.success('Otp verified successfully','',{timeOut:1000})\n   //    $('#exampleModalCenter').modal('hide')\n       this.router.navigate(['/changepassword'])\n      }\n    })\n  }\n  SendOtp(obj){\n    this.service.post(`user/verify-otp/`,obj).subscribe((res:any)=>{\n      if([200,201].includes(res.code)){\n     sessionStorage.setItem(\"OtpDetails\",JSON.stringify(obj));\n     this.toaster.success('Otp verified successfully','',{timeOut:1000})\n   //    $('#exampleModalCenter').modal('hide')\n       this.router.navigate(['/changepassword'])\n      }\n    })\n  }\n  VerifyOtp(){\n    this.toaster.clear()\n    if(this.optValue && this.optValue.length===4){\n      let obj = {\n        \"email\":this.ForgotPasswordForm.value.email,\n        \"otp\":this.optValue\n         }\n         // this.SendOtp(obj)\n         this.ForgotOtp(obj)\n    }else{\n      this.toaster.error('Please enter 4-digit OTP','Error')\n    }\n     \n    }\n  \n  ResendOtp(obj,msg){\n  this.service.post(`user/send-otp-to-old-user/`,obj).subscribe((res:any)=>{\n     if([200,201].includes(res.code)){\n    //  $('#exampleModalCenter').modal({backdrop: 'static', keyboard: false}) \n       this.toaster.success(` Otp sent ${msg}`,'Resend OTP',{timeOut:1000})\n     }\n   })\n  }\n  CallResendOTP(){\n    this.ResetOtp()\n  let obj = {\n    \"email\":this.ForgotPasswordForm.value.email,\n     }\n     this.ResendOtp(obj,'to email id')\n   }\n  }\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/background/login-register.jpg) no-repeat center center;background-size: 100% 100%;\">\n    <div class=\"auth-box on-sidebar\">\n        <div id=\"loginform\" *ngIf=\"loginform\">\n            <div class=\"logo\">\n                <span class=\"db\"><img src=\"assets/images/logo2.svg\" alt=\"logo\"/></span>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <form class=\"form-horizontal m-t-20\" id=\"loginform\" [formGroup]=\"LoginByEmailform\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\" id=\"basic-addon1\"><i class=\"ti-user\"></i></span>\n                                </div>\n                                <input type=\"email\" class=\"form-control form-control-lg\" placeholder=\"Email\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" formControlName=\"email\">\n                            </div>\n                            <span class=\"error\" *ngIf=\"LoginByEmailform.get('email').hasError('required') && LoginByEmailform.get('email').touched\">Please enter email.</span>\n                            <span class=\"error\" *ngIf=\"LoginByEmailform.get('email').hasError('pattern')\">Please enter valid email.</span>\n    \n                        </div>\n                       <div class=\"form-group\">\n                        <div class=\"input-group\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" id=\"basic-addon2\"><i class=\"fa fa-lock\"></i></span>\n                            </div>\n                            <input type=\"password\" class=\"form-control form-control-lg\" placeholder=\"Password\" aria-label=\"Password\" aria-describedby=\"basic-addon1\" formControlName=\"password\">\n                        </div>\n                        <span class=\"error\" *ngIf=\"LoginByEmailform.get('password').hasError('required') && LoginByEmailform.get('password').touched\">Please enter password.</span>\n                            <span class=\"error\" *ngIf=\"LoginByEmailform.get('password').hasError('minlength')\">Minlength should 8.</span>\n                            <span class=\"error\" *ngIf=\"LoginByEmailform.get('password').hasError('maxlength')\">Maxlength should 16.</span>\n                       </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-md-12\">\n                                <div class=\"custom-control custom-checkbox\">\n                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\" formControlName=\"rememberMe\">\n                                    <label class=\"custom-control-label text-white\" for=\"customCheck1\">Remember Me</label>\n                                    <a (click)=\"showRecoverForm()\" href=\"javascript:void(0)\" id=\"to-recover\" class=\"text-white float-right\"><i class=\"fa fa-lock m-r-5\"></i> Forgot password</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group text-center\">\n                            <div class=\"col-xs-12 p-b-20\">\n                                <button class=\"btn btn-block btn-lg theme_btn_drk text-white\" type=\"button\" (click)=\"CallLoginFunction()\">Login</button>\n                            </div>\n                            <!-- <div class=\"col-xs-12 p-b-20\">\n                                <button (click)=\"shownumbrForm()\" href=\"javascript:void(0)\" class=\"btn btn-block btn-lg theme_btn_drk text-white\" type=\"button\">Login with number</button>\n                            </div> -->\n                            <!-- <div class=\"col-12 mt-2 text-white\">Don't have an account?\n                                <a class=\"text-white\" href=\"javascript:void()\" routerLink='/signup2'> <b> Sign up </b> </a>\n                            </div> -->\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n        <div *ngIf=\"recoverform\">\n            <div class=\"logo\">\n                <span class=\"db\"><img src=\"assets/images/logo2.svg\" alt=\"logo\" /></span>\n                <h5 class=\"font-medium my-3\">Recover Password</h5>\n                <span>Enter your Email and instructions will be sent to you!</span>\n            </div>\n            <div class=\"row m-t-20\">\n                <!-- Form -->\n                <form class=\"col-12\" [formGroup]=\"ForgotPasswordForm\">\n                    <!-- email -->\n                    <div class=\"form-group\">\n                        <input class=\"form-control form-control-lg\" type=\"email\" placeholder=\"Email\" formControlName=\"email\">\n                        <span class=\"error\" *ngIf=\"ForgotPasswordForm.get('email').hasError('required') && ForgotPasswordForm.get('email').touched\">Please enter email.</span>\n                        <span class=\"error\" *ngIf=\"ForgotPasswordForm.get('email').hasError('pattern')\">Please enter valid email.</span>\n                       </div>\n                    <!-- pwd -->\n                    <div class=\"row m-t-20\">\n                        <div class=\"col-12\">\n                            <button class=\"btn btn-block btn-lg theme_btn_drk\" type=\"submit\" (click)=\"ResetFor()\" name=\"action\"> Reset </button>\n                        </div>\n                        <div class=\"col-12 mt-2\">\n                            <button class=\"btn btn-block btn-lg theme_btn_drk\" type=\"submit\" name=\"action\" (click)=\"CancelledForgot()\"> Cancel </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n        <div id=\"loginnumber\" *ngIf=\"loginnumber\">\n            <div class=\"logo\">\n                <span class=\"db\"><img src=\"assets/images/logo2.svg\" alt=\"logo\"/></span>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12\" *ngIf=\"numberform\">\n                    <form class=\"form-horizontal m-t-20\" id=\"loginform\" action=\"index.html\">\n                        <div class=\"input-group mb-3\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" id=\"basic-addon1\"><i class=\"ti-user\"></i></span>\n                            </div>\n                            <input type=\"number\" class=\"form-control form-control-lg\" placeholder=\"Phone number\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" required>\n                        </div>\n                        <!-- <div class=\"input-group mb-3\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" id=\"basic-addon2\"><i class=\"fa fa-lock\"></i></span>\n                            </div>\n                            <input type=\"password\" class=\"form-control form-control-lg\" placeholder=\"Password\" aria-label=\"Password\" aria-describedby=\"basic-addon1\" required>\n                        </div> -->\n                        <div class=\"form-group row\">\n                            <div class=\"col-md-12\">\n                                <div class=\"custom-control custom-checkbox\">\n                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\n                                    <label class=\"custom-control-label text-white\" for=\"customCheck1\">Remember Me</label>\n                                    <a (click)=\"showRecoverForm()\" href=\"javascript:void(0)\" id=\"to-recover\" class=\"text-white float-right\"><i class=\"fa fa-lock m-r-5\"></i> Forgot password</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group text-center\">\n                            <div class=\"col-xs-12 p-b-20\">\n                                <button (click)=\"signotpform()\" class=\"btn btn-block btn-lg theme_btn_drk text-white\" type=\"submit\">Login</button>\n                            </div>\n                            <div class=\"col-xs-12 p-b-20\">\n                                <button (click)=\"shownumbrForm()\" href=\"javascript:void(0)\" class=\"btn btn-block btn-lg theme_btn_drk text-white\">Login with email</button>\n                            </div>\n                            <div class=\"col-12 mt-2 text-white\">Don't have an account?\n                                <a class=\"text-white\" href=\"javascript:void()\" routerLink='/signup2'> <b> Sign up </b> </a>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <div class=\"col-12\" *ngIf=\"otpform\">\n                    <form class=\"form-horizontal m-t-20\" action=\"index.html\">\n                      <div class=\"form-group row \">\n                        <div class=\"col-12 text-center\">\n                          <ng-otp-input class=\"otp-box\" (onInputChange)=\"onOtpChange($event)\" [config]=\"{length:4,allowNumbersOnly:true}\">\n                          </ng-otp-input>\n                        </div>\n                      </div>\n                      <div class=\"form-group text-center \">\n                        <div class=\"col-xs-12 p-b-20 \">\n                          <button class=\"btn btn-block btn-lg theme_btn_drk\"\n                            type=\"submit\" (click)=\"VerifyOtp()\"> Verify </button>\n                        </div>\n                      </div>\n                      <div class=\"form-group m-b-0 m-t-10 text-center\"> <a href=\"javascript:void(0)\" \n                          class=\"text-white m-l-5 \" (click)=\"CallResendOTP()\"><b>Resend OTP</b></a></div>\n                    </form>\n                  </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"modal fade\" id=\"exampleModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Otp verification</h5>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n            <div class=\"col-12\">\n                <form class=\"form-horizontal m-t-20\" action=\"index.html\">\n                  <div class=\"form-group row \">\n                    <div class=\"col-12 text-center\">\n                      <ng-otp-input class=\"otp-box\" #ngOtpInput (onInputChange)=\"onOtpChange($event)\" [config]=\"{length:4,allowNumbersOnly:true}\">\n                      </ng-otp-input>\n                    </div>\n                  </div>\n                  \n                </form>\n              </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"CallResendOTP()\">Resend OTP</button>\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"VerifyOtp()\">Verify</button>\n        </div>\n      </div>\n    </div>\n  </div>"],"sourceRoot":"webpack:///"}