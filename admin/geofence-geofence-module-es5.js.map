{"version":3,"sources":["webpack:///src/app/pages/geofence/geofence-routing.module.ts","webpack:///src/app/pages/geofence/geofence.component.ts","webpack:///src/app/pages/geofence/geofence.component.html","webpack:///src/app/pages/geofence/geofence.module.ts","webpack:///src/app/pages/geofence/geofenceadd/geofenceadd.component.ts","webpack:///src/app/pages/geofence/geofenceadd/geofenceadd.component.html","webpack:///src/app/pages/geofence/geofenceedit/geofenceedit.component.ts","webpack:///src/app/pages/geofence/geofenceedit/geofenceedit.component.html","webpack:///src/app/pages/geofence/geofencelist/geofencelist.component.ts","webpack:///src/app/pages/geofence/geofencelist/geofencelist.component.html"],"names":["routes","path","component","children","data","title","urls","url","GeofenceRoutingModule","forChild","imports","exports","GeofenceComponent","selector","templateUrl","styleUrls","GeofenceModule","declarations","GeofenceaddComponent","router","Srvc","toaster","fb","lat","lng","pointList","selectedArea","sendZoom","initDrawingManager","map","self","options","drawingControl","drawingControlOptions","drawingModes","polygonOptions","draggable","editable","drawingMode","google","maps","drawing","OverlayType","POLYGON","drawingManager","DrawingManager","setMap","event","addListener","type","paths","overlay","getPaths","p","getLength","getAt","drag","updatePointList","getPath","selectedShape","MARKER","setDrawingMode","setOptions","addGeofenceForm","group","name","required","maxLength","minLength","setCurrentPosition","Map","console","log","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","onMapReady","len","i","push","toJSON","geometry","spherical","computeArea","e","ref","length","preventDefault","body","controls","value","points","zoom","postApi","subscribe","statusCode","success","navigate","error","avoidBlankSpace","getZoom","addGeoFence","deleteSelectedShape","GeofenceeditComponent","service","toastr","test","editForm","drawPolygonArr","get","geoPoints","coordinates","setValue","constructTriangle","Polygon","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","draggablePolygon","polyArrayLatLng","vertex","vertexLatLng","getPolygonCoordinates","put","updateZoom","updateGeoFence","GeofencelistComponent","modalService","latA","lngA","styles","featureType","stylers","saturation","elementType","hue","visibility","permissions","JSON","parse","sessionStorage","getItem","storageKey","undefined","editPermission","viewPermission","is_add_edit","is_view","content3","open","backdropClass","centered","size","content4"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,qEAFb;AAGEC,gBAAQ,EAAE,CACR;AACEF,cAAI,EAAE,EADR;AAEEC,mBAAS,EAAE,0FAFb;AAGEE,cAAI,EAAE;AACJC,iBAAK,EAAE,eADH;AAEJC,gBAAI,EAAE,CACJ;AAAED,mBAAK,EAAE,WAAT;AAAsBE,iBAAG,EAAE;AAA3B,aADI,EAEJ;AAAEF,mBAAK,EAAE;AAAT,aAFI;AAFF;AAHR,SADQ,EAYR;AACEJ,cAAI,EAAE,KADR;AAEEC,mBAAS,EAAE,uFAFb;AAGEE,cAAI,EAAE;AACJC,iBAAK,EAAE,cADH;AAEJC,gBAAI,EAAE,CACJ;AAAED,mBAAK,EAAE,WAAT;AAAsBE,iBAAG,EAAE;AAA3B,aADI,EAEJ;AAAEF,mBAAK,EAAE;AAAT,aAFI;AAFF;AAHR,SAZQ,EAuBR;AACEJ,cAAI,EAAE,MADR;AAEEC,mBAAS,EAAE,0FAFb;AAGEE,cAAI,EAAE;AACJC,iBAAK,EAAE,eADH;AAEJC,gBAAI,EAAE,CACJ;AAAED,mBAAK,EAAE,WAAT;AAAsBE,iBAAG,EAAE;AAA3B,aADI,EAEJ;AAAEF,mBAAK,EAAE;AAAT,aAFI;AAFF;AAHR,SAvBQ;AAHZ,OADqB,CAAvB;;UA8CaG,qB;;;;;cAAAA;;;;2BAAAA,qB;AAAqB,S;AAAA,kBAHvB,CAAC,6DAAaC,QAAb,CAAsBT,MAAtB,CAAD,CAGuB,EAFtB,4DAEsB;;;;4HAArBQ,qB,EAAqB;AAAA;AAAA,oBAFtB,4DAEsB;AAAA,S;AAFV,O;;;;;wEAEXA,qB,EAAqB;gBAJjC,sDAIiC;iBAJxB;AACRE,mBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBT,MAAtB,CAAD,CADD;AAERW,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAIwB,U;;;;;;;;;;;;;;;;;;ACrDlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,iB;AAEX,qCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,iB;AAAiB,O;;;cAAjBA,iB;AAAiB,qC;AAAA,gB;AAAA,e;AAAA;AAAA;ACP9B;;;;;;;;;wEDOaA,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACTC,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,0BAAD;AAHF,W;AAKmB,U;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,uE,CAOA;;;UAiBaC,c;;;;;cAAAA;;;;2BAAAA,c;AAAc,S;AAAA,kBAThB,CACP,4DADO,EAEP,8EAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,uDALO,CASgB;;;;4HAAdA,c,EAAc;AAAA,yBAVV,0FAUU,EAVa,0FAUb,EAVoC,qEAUpC,EAVsD,uFAUtD;AAV0E,oBAEjG,4DAFiG,EAGjG,8EAHiG,EAIjG,0DAJiG,EAKjG,kEALiG,EAMjG,uDANiG;AAU1E,S;AAJV,O;;;;;wEAIJA,c,EAAc;gBAX1B,sDAW0B;iBAXjB;AACRC,wBAAY,EAAE,CAAC,0FAAD,EAAwB,0FAAxB,EAA+C,qEAA/C,EAAiE,uFAAjE,CADN;AAERP,mBAAO,EAAE,CACP,4DADO,EAEP,8EAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,uDALO;AAFD,W;AAWiB,U;;;;;;;;;;;;;;;;;;ACvB3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACYwB;;AACI;;AACJ;;;;UDFXQ,oB;AAiDX,sCAEUC,MAFV,EAGUC,IAHV,EAIUC,OAJV,EAKUC,EALV,EAKyB;AAAA;;AAAA;;AAHf,eAAAH,MAAA,GAAAA,MAAA;AACA,eAAAC,IAAA,GAAAA,IAAA;AACA,eAAAC,OAAA,GAAAA,OAAA;AACA,eAAAC,EAAA,GAAAA,EAAA,CAAe,CAnDzB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAAC,GAAA,GAAM,OAAN;AACA,eAAAC,GAAA,GAAM,CAAC,OAAP;AACA,eAAAC,SAAA,GAA4C,EAA5C;AAGA,eAAAC,YAAA,GAAe,CAAf;AACA,eAAAC,QAAA,GAAW,EAAX;;AAwBA,eAAAC,kBAAA,GAAqB,UAACC,GAAD,EAAc;AACjC,gBAAMC,IAAI,GAAG,KAAb;AACA,gBAAMC,OAAO,GAAG;AACdC,4BAAc,EAAE,IADF;AAEdC,mCAAqB,EAAE;AACrBC,4BAAY,EAAE,CAAC,SAAD;AADO,eAFT;AAKdC,4BAAc,EAAE;AACdC,yBAAS,EAAE,IADG;AAEdC,wBAAQ,EAAE;AAFI,eALF;AAUdC,yBAAW,EAAEC,MAAM,CAACC,IAAP,CAAYC,OAAZ,CAAoBC,WAApB,CAAgCC;AAV/B,aAAhB;AAYA,iBAAI,CAACC,cAAL,GAAsB,IAAIL,MAAM,CAACC,IAAP,CAAYC,OAAZ,CAAoBI,cAAxB,CAAuCd,OAAvC,CAAtB;;AACA,iBAAI,CAACa,cAAL,CAAoBE,MAApB,CAA2BjB,GAA3B;;AACAU,kBAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,WAAlB,CACE,KAAI,CAACJ,cADP,EAEE,iBAFF,EAGE,UAACG,KAAD,EAAW;AACT,kBAAIA,KAAK,CAACE,IAAN,KAAeV,MAAM,CAACC,IAAP,CAAYC,OAAZ,CAAoBC,WAApB,CAAgCC,OAAnD,EAA4D;AAC1D,oBAAMO,KAAK,GAAGH,KAAK,CAACI,OAAN,CAAcC,QAAd,EAAd;;AACA,qBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,SAAN,EAApB,EAAuCD,CAAC,EAAxC,EAA4C;AAC1Cd,wBAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,WAAlB,CAA8BE,KAAK,CAACK,KAAN,CAAYF,CAAZ,CAA9B,EAA8C,QAA9C,EAAwD,YAAM;AAC5D,wBAAI,CAACN,KAAK,CAACI,OAAN,CAAcK,IAAnB,EAAyB;AACvB1B,0BAAI,CAAC2B,eAAL,CAAqBV,KAAK,CAACI,OAAN,CAAcO,OAAd,EAArB;AACD;AACF,mBAJD;AAKAnB,wBAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,WAAlB,CAA8BE,KAAK,CAACK,KAAN,CAAYF,CAAZ,CAA9B,EAA8C,WAA9C,EAA2D,YAAM;AAC/DvB,wBAAI,CAAC2B,eAAL,CAAqBV,KAAK,CAACI,OAAN,CAAcO,OAAd,EAArB;AACD,mBAFD;AAGAnB,wBAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,WAAlB,CAA8BE,KAAK,CAACK,KAAN,CAAYF,CAAZ,CAA9B,EAA8C,WAA9C,EAA2D,YAAM;AAC/DvB,wBAAI,CAAC2B,eAAL,CAAqBV,KAAK,CAACI,OAAN,CAAcO,OAAd,EAArB;AACD,mBAFD;AAGD;;AACD5B,oBAAI,CAAC2B,eAAL,CAAqBV,KAAK,CAACI,OAAN,CAAcO,OAAd,EAArB;AACA,qBAAI,CAACC,aAAL,GAAqBZ,KAAK,CAACI,OAA3B;AACA,qBAAI,CAACQ,aAAL,CAAmBV,IAAnB,GAA0BF,KAAK,CAACE,IAAhC;AACD;;AACD,kBAAIF,KAAK,CAACE,IAAN,KAAeV,MAAM,CAACC,IAAP,CAAYC,OAAZ,CAAoBC,WAApB,CAAgCkB,MAAnD,EAA2D;AACzD;AACA9B,oBAAI,CAACc,cAAL,CAAoBiB,cAApB,CAAmC,IAAnC,EAFyD,CAGzD;;AACA/B,oBAAI,CAACc,cAAL,CAAoBkB,UAApB,CAA+B;AAC7B9B,gCAAc,EAAE;AADa,iBAA/B;AAGD;AACF,aA/BH;AAiCD,WAjDD;;AAkFA,eAAA+B,eAAA,GAAkB,KAAKzC,EAAL,CAAQ0C,KAAR,CAAc;AAC9BC,gBAAI,EAAE,CAAC,EAAD,EACL,CAAC,0DAAWC,QAAZ,EAAqB,0DAAWC,SAAX,CAAqB,EAArB,CAArB,EAA8C,0DAAWC,SAAX,CAAqB,CAArB,CAA9C,CADK;AADwB,WAAd,CAAlB;AAlGI;;;;qCAEI;AACN,iBAAKC,kBAAL;AACD;;;qCAGUxC,G,EAAK;AACd,iBAAKyC,GAAL,GAAWzC,GAAX;AACA,iBAAKD,kBAAL,CAAwBC,GAAxB;AACD;;;kCAEOkB,K,EAAO;AACbwB,mBAAO,CAACC,GAAR,CAAYzB,KAAZ;AACA,iBAAKpB,QAAL,GAAgBoB,KAAhB;AACD;;;+CAoD4B;AAAA;;AAC3B,gBAAI,iBAAiB0B,SAArB,EAAgC;AAC9BA,uBAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAACC,QAAD,EAAc;AACrD,sBAAI,CAACrD,GAAL,GAAWqD,QAAQ,CAACC,MAAT,CAAgBC,QAA3B;AACA,sBAAI,CAACtD,GAAL,GAAWoD,QAAQ,CAACC,MAAT,CAAgBE,SAA3B;AACD,eAHD;AAID;AACF;;;gDAEqB;AACpB,gBAAI,KAAKpB,aAAT,EAAwB;AACtB,mBAAKA,aAAL,CAAmBb,MAAnB,CAA0B,IAA1B;AACA,mBAAKpB,YAAL,GAAoB,CAApB;AACA,mBAAKD,SAAL,GAAiB,EAAjB,CAHsB,CAItB;;AACA,mBAAKmB,cAAL,CAAoBkB,UAApB,CAA+B;AAC7B9B,8BAAc,EAAE;AADa,eAA/B;AAGA,mBAAKgD,UAAL,CAAgB,KAAKV,GAArB;AACD;AACF;;;0CAEerE,I,EAAM;AACpB,iBAAKwB,SAAL,GAAiB,EAAjB;AACA,gBAAMwD,GAAG,GAAGhF,IAAI,CAACqD,SAAL,EAAZ;;AACA,iBAAK,IAAI4B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAApB,EAAyBC,CAAC,EAA1B,EAA8B;AAC5B,mBAAKzD,SAAL,CAAe0D,IAAf,CAAoBlF,IAAI,CAACsD,KAAL,CAAW2B,CAAX,EAAcE,MAAd,EAApB;AACD;;AACD,iBAAK1D,YAAL,GAAoBa,MAAM,CAACC,IAAP,CAAY6C,QAAZ,CAAqBC,SAArB,CAA+BC,WAA/B,CAA2CtF,IAA3C,CAApB;AACD,W,CAQA;;;;0CACgBuF,C,EAAGC,G,EAAK;AACvB,gBAAI,CAACA,GAAG,CAACC,MAAT,EAAiB;AACfF,eAAC,CAACG,cAAF;AACD;AACF;;;wCAGa;AAAA;;AACZ,gBAAI,KAAKlE,SAAL,CAAeiE,MAAf,IAAyB,CAA7B,EAAgC;AAC9B,kBAAIE,IAAI,GAAG;AACT3B,oBAAI,EAAE,KAAKF,eAAL,CAAqB8B,QAArB,CAA8B,MAA9B,EAAsCC,KADnC;AAETC,sBAAM,EAAE,EAFC;AAGTC,oBAAI,EAAE,KAAKrE;AAHF,eAAX;AAKAiE,kBAAI,CAACG,MAAL,GAAc,KAAKtE,SAAnB;AACA,mBAAKL,IAAL,CAAU6E,OAAV,KAAqBL,IAArB,EAA2BM,SAA3B,CAAqC,UAAC9F,IAAD,EAAe;AAClD,oBAAIA,IAAI,CAAC+F,UAAL,IAAmB,GAAvB,EAA4B;AAC1B,wBAAI,CAAC9E,OAAL,CAAa+E,OAAb,CAAqB,gBAArB;;AACA,wBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,qBAAD,CAArB;AACD,iBAHD,MAGO;AACL,wBAAI,CAAChF,OAAL,CAAaiF,KAAb,CAAmB,wBAAnB;AACD;AACF,eAPD;AAQD,aAfD,MAeO;AACL,mBAAKjF,OAAL,CAAaiF,KAAb,CAAmB,qBAAnB;AACD;AACF;;;;;;;yBA1LUpF,oB,EAAoB,uH,EAAA,8I,EAAA,yH,EAAA,2H;AAAA,O;;;cAApBA,oB;AAAoB,wC;AAAA;AAAA;;;;;;;;;;;;;;;;;ACbjC;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAA6D;;AAAI;;AACrE;;AACJ;;AACA;;AACI;;AACI;;AAAO;;AAAI;;AACX;;AAAY;AAAA;;AAAA;;AAAA,qBAAiB,IAAAqF,eAAA,mBAAjB;AAAmD,aAAnD;;AAAZ;;AACA;;AAGJ;;AACJ;;AACA;;AAA8D;AAAA,qBAAY,IAAAvB,UAAA,QAAZ;AAA8B,aAA9B,EAA+B,YAA/B,EAA+B;AAAA,qBAAe,IAAAwB,OAAA,QAAf;AAA8B,aAA7D;;AAElE;;AACI;;AAAqC;AAAA,qBAAS,IAAAC,WAAA,EAAT;AAAsB,aAAtB;;AAA6D;;AAAI;;AAClG;;AAAwC;AAAA,qBAAS,IAAAC,mBAAA,EAAT;AAA8B,aAA9B;;AAAgC;;AAAK;;AAGrF;;AACJ;;AACJ;;AACF;;;;AAnBoB;;AAAA;;AAIa;;AAAA;;AAKV;;AAAA,0FAAgB,WAAhB,EAAgB,OAAhB,EAAgB,MAAhB,EAAgB,YAAhB;;AAGoD;;AAAA;;;;;;;;;wEDRhExF,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACTL,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKsB,U;;;;;;;;;;;;kBAC9B,uD;mBAAU,M,EAAQ;AAAE,wBAAQ;AAAV,a;;;;;;;;;;;;;;;;;;;;AEbrB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACYwB;;AACI;;AACJ;;;;UDHX4F,qB;AAcX,uCAAoBC,OAApB,EAAkDC,MAAlD,EAA+EvF,EAA/E,EAAsGH,MAAtG,EAAqH;AAAA;;AAAA;;AAAjG,eAAAyF,OAAA,GAAAA,OAAA;AAA8B,eAAAC,MAAA,GAAAA,MAAA;AAA6B,eAAAvF,EAAA,GAAAA,EAAA;AAAuB,eAAAH,MAAA,GAAAA,MAAA;AAZtG,eAAAI,GAAA,GAAM,OAAN;AACA,eAAAC,GAAA,GAAM,OAAN;AACA,eAAAC,SAAA,GAA4C,EAA5C;AAGA,eAAAC,YAAA,GAAe,CAAf;AAKA,eAAAoF,IAAA,GAAK,IAAL;AA6CA,eAAAC,QAAA,GAAS,KAAKzF,EAAL,CAAQ0C,KAAR,CAAc;AACrBC,gBAAI,EAAC,CAAC,EAAD,EAAI,0DAAWC,QAAf;AADgB,WAAd,CAAT;;AAkBA,eAAAtC,kBAAA,GAAqB,UAACC,GAAD,EAAc;AAClC;AACC,gBAAMC,IAAI,GAAG,MAAb;AACA,gBAAMC,OAAO,GAAG;AACdC,4BAAc,EAAE,IADF;AAEdC,mCAAqB,EAAE;AACrBC,4BAAY,EAAE,CAAC,SAAD;AADO,eAFT;AAKdC,4BAAc,EAAE;AACdC,yBAAS,EAAE,IADG;AAEdC,wBAAQ,EAAE;AAFI,eALF;AAUdC,yBAAW,EAAEC,MAAM,CAACC,IAAP,CAAYC,OAAZ,CAAoBC,WAApB,CAAgCC;AAV/B,aAAhB;AAYA,kBAAI,CAACC,cAAL,GAAsB,IAAIL,MAAM,CAACC,IAAP,CAAYC,OAAZ,CAAoBI,cAAxB,CAAuCd,OAAvC,CAAtB;;AACA,kBAAI,CAACa,cAAL,CAAoBE,MAApB,CAA2BjB,GAA3B;;AACAU,kBAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,WAAlB,CACE,MAAI,CAACJ,cADP,EAEE,iBAFF,EAGE,UAACG,KAAD,EAAW;AACT,kBAAIA,KAAK,CAACE,IAAN,KAAeV,MAAM,CAACC,IAAP,CAAYC,OAAZ,CAAoBC,WAApB,CAAgCC,OAAnD,EAA4D;AAC1D,oBAAMO,KAAK,GAAGH,KAAK,CAACI,OAAN,CAAcC,QAAd,EAAd;;AACA,qBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,SAAN,EAApB,EAAuCD,CAAC,EAAxC,EAA4C;AAC1Cd,wBAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,WAAlB,CACEE,KAAK,CAACK,KAAN,CAAYF,CAAZ,CADF,EAEE,QAFF,EAGE,YAAM;AACJ,wBAAI,CAACN,KAAK,CAACI,OAAN,CAAcK,IAAnB,EAAyB;AACvB1B,0BAAI,CAAC2B,eAAL,CAAqBV,KAAK,CAACI,OAAN,CAAcO,OAAd,EAArB;AACD;AACF,mBAPH;AASAnB,wBAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,WAAlB,CACEE,KAAK,CAACK,KAAN,CAAYF,CAAZ,CADF,EAEE,WAFF,EAGE,YAAM;AACJvB,wBAAI,CAAC2B,eAAL,CAAqBV,KAAK,CAACI,OAAN,CAAcO,OAAd,EAArB;AACD,mBALH;AAOAnB,wBAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,WAAlB,CACEE,KAAK,CAACK,KAAN,CAAYF,CAAZ,CADF,EAEE,WAFF,EAGE,YAAM;AACJvB,wBAAI,CAAC2B,eAAL,CAAqBV,KAAK,CAACI,OAAN,CAAcO,OAAd,EAArB;AACD,mBALH;AAOD;;AACD5B,oBAAI,CAAC2B,eAAL,CAAqBV,KAAK,CAACI,OAAN,CAAcO,OAAd,EAArB;AACA,sBAAI,CAACC,aAAL,GAAqBZ,KAAK,CAACI,OAA3B;AACA,sBAAI,CAACQ,aAAL,CAAmBV,IAAnB,GAA0BF,KAAK,CAACE,IAAhC;AACD;;AACD,kBAAIF,KAAK,CAACE,IAAN,KAAeV,MAAM,CAACC,IAAP,CAAYC,OAAZ,CAAoBC,WAApB,CAAgCkB,MAAnD,EAA2D;AACzD;AACA9B,oBAAI,CAACc,cAAL,CAAoBiB,cAApB,CAAmC,IAAnC,EAFyD,CAGzD;;AACA/B,oBAAI,CAACc,cAAL,CAAoBkB,UAApB,CAA+B;AAC7B9B,gCAAc,EAAE;AADa,iBAA/B;AAGD;AACF,aA3CH;AA6CD,WA9DD;;AA3DE,cAAIgF,cAAc,GAAG,EAArB;AAEA,eAAKJ,OAAL,CAAaK,GAAb,KAAqBf,SAArB,CAA+B,UAAC9F,IAAD,EAAY;AACzC,gBAAGA,IAAI,CAAC+F,UAAL,IAAmB,GAAtB,EAA0B;AACxB,oBAAI,CAACK,OAAL,GAAapG,IAAI,CAACA,IAAL,CAAU4F,IAAvB;AACA,oBAAI,CAACxE,GAAL,GAASpB,IAAI,CAACA,IAAL,CAAU8G,SAAV,CAAoBC,WAApB,CAAgC,CAAhC,EAAmC/G,IAAI,CAACA,IAAL,CAAU8G,SAAV,CAAoBC,WAApB,CAAgC,CAAhC,EAAmCzB,MAAnC,GAA0C,CAA7E,EAAgF,CAAhF,CAAT;AACA,oBAAI,CAACnE,GAAL,GAASnB,IAAI,CAACA,IAAL,CAAU8G,SAAV,CAAoBC,WAApB,CAAgC,CAAhC,EAAmC/G,IAAI,CAACA,IAAL,CAAU8G,SAAV,CAAoBC,WAApB,CAAgC,CAAhC,EAAmCzB,MAAnC,GAA0C,CAA7E,EAAgF,CAAhF,CAAT,CAHwB,CAKxB;;AACA,oBAAI,CAACqB,QAAL,CAAclB,QAAd,CAAuB,MAAvB,EAA+BuB,QAA/B,CAAwChH,IAAI,CAACA,IAAL,CAAU6D,IAAlD;;AACA,mBAAI,IAAIiB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC9E,IAAI,CAACA,IAAL,CAAU8G,SAAV,CAAoBC,WAApB,CAAgC,CAAhC,EAAmCzB,MAAjD,EAAwDR,CAAC,EAAzD,EAA4D;AAC1D;AACF8B,8BAAc,CAAC7B,IAAf,CAAoB;AAClB5D,qBAAG,EAAEnB,IAAI,CAACA,IAAL,CAAU8G,SAAV,CAAoBC,WAApB,CAAgC,CAAhC,EAAmCjC,CAAnC,EAAsC,CAAtC,CADa;AAElB1D,qBAAG,EAAEpB,IAAI,CAACA,IAAL,CAAU8G,SAAV,CAAoBC,WAApB,CAAgC,CAAhC,EAAmCjC,CAAnC,EAAsC,CAAtC;AAFa,iBAApB;AAKC;;AACD,oBAAI,CAACmC,iBAAL,GAAyB,IAAI9E,MAAM,CAACC,IAAP,CAAY8E,OAAhB,CAAwB;AAC/CpE,qBAAK,EAAE8D,cADwC;AAE/CO,2BAAW,EAAE,SAFkC;AAG/CC,6BAAa,EAAE,GAHgC;AAI/CC,4BAAY,EAAE,CAJiC;AAK/CC,yBAAS,EAAE,SALoC;AAM/CC,2BAAW,EAAE,IANkC;AAO/CtF,wBAAQ,EAAE,IAPqC;AAQ/CD,yBAAS,EAAE;AARoC,eAAxB,CAAzB;;AAUA,oBAAI,CAACiF,iBAAL,CAAuBvE,MAAvB,CAA8B,IAA9B,EAzBwB,CA0BxB;;;AACJ,oBAAI,CAACuE,iBAAL,CAAuBvE,MAAvB,CAA8B,MAAI,CAACwB,GAAnC,EA3B4B,CA4BzB;;AACA,aA7BD,MA8BI;AACF,oBAAI,CAACnD,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,qBAAD,CAArB;AACD;AACF,WAlCD;AAmCA,eAAKS,IAAL,GAAUE,cAAV;AACD;;;;qCAMU,CAEV;AAEA;;;qCAEUnF,G,EAAK;AAEd,iBAAKyC,GAAL,GAASzC,GAAT,CAFc,CAGd;;AACA,gBAAG,KAAKiF,IAAL,IAAa,IAAhB,EAAqB;AACrB,mBAAKlF,kBAAL,CAAwBC,GAAxB;AACC;AACF;;;+CAiE4B;AAAA;;AAC3B,gBAAI,iBAAiB4C,SAArB,EAAgC;AAC9BA,uBAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAACC,QAAD,EAAc;AACrD,sBAAI,CAACrD,GAAL,GAAWqD,QAAQ,CAACC,MAAT,CAAgBC,QAA3B;AACA,sBAAI,CAACtD,GAAL,GAAWoD,QAAQ,CAACC,MAAT,CAAgBE,SAA3B;AACD,eAHD;AAID;AACF;;;gDAEqB;AACpB,gBAAI,KAAKpB,aAAT,EAAwB;AACtB;AACA,mBAAKA,aAAL,CAAmBb,MAAnB,CAA0B,IAA1B;AACA,mBAAKpB,YAAL,GAAoB,CAApB;AACA,mBAAKD,SAAL,GAAiB,EAAjB,CAJsB,CAOtB;;AACA,mBAAKmB,cAAL,CAAoBkB,UAApB,CAA+B;AAC7B9B,8BAAc,EAAE;AADa,eAA/B;AAGA,mBAAKgD,UAAL,CAAgB,KAAKV,GAArB;AACD,aAZD,MAaI;AACF;AACF,mBAAKwC,IAAL,GAAU,IAAV;AACA,mBAAK9B,UAAL,CAAgB,KAAKV,GAArB,EAHI,CAIJ;;AACA,mBAAK+C,iBAAL,CAAuBvE,MAAvB,CAA8B,IAA9B;AACA,mBAAKuE,iBAAL,GAAuB,IAAvB;AAA6B;AAC9B;;;0CAEepH,I,EAAM;AACpB,iBAAKwB,SAAL,GAAiB,EAAjB;AACA,gBAAMwD,GAAG,GAAGhF,IAAI,CAACqD,SAAL,EAAZ;;AACA,iBAAK,IAAI4B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAApB,EAAyBC,CAAC,EAA1B,EAA8B;AAC5B,mBAAKzD,SAAL,CAAe0D,IAAf,CACElF,IAAI,CAACsD,KAAL,CAAW2B,CAAX,EAAcE,MAAd,EADF;AAGD;;AACD,iBAAK1D,YAAL,GAAoBa,MAAM,CAACC,IAAP,CAAY6C,QAAZ,CAAqBC,SAArB,CAA+BC,WAA/B,CAClBtF,IADkB,CAApB;AAGD;;;gDAEqB2H,gB,EAAkB;AAEtC,gBAAM3C,GAAG,GAAG2C,gBAAgB,CAAClE,OAAjB,GAA2BJ,SAA3B,EAAZ;AACA,gBAAMuE,eAAe,GAAG,EAAxB;;AAEA,iBAAK,IAAI3C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAApB,EAAyBC,CAAC,EAA1B,EAA8B;AAC5B,kBAAM4C,MAAM,GAAGF,gBAAgB,CAAClE,OAAjB,GAA2BH,KAA3B,CAAiC2B,CAAjC,CAAf;AACA,kBAAM6C,YAAY,GAAG;AAAExG,mBAAG,EAAEuG,MAAM,CAACvG,GAAP,EAAP;AAAqBC,mBAAG,EAAEsG,MAAM,CAACtG,GAAP;AAA1B,eAArB;AACAqG,6BAAe,CAAC1C,IAAhB,CAAqB4C,YAArB;AACD;;AACD,iBAAKtG,SAAL,GAAe,IAAf;AACA,iBAAKA,SAAL,GAAeoG,eAAf;AACD;;;qCAGU9E,K,EAAK;AACd,iBAAKyD,OAAL,GAAazD,KAAb;AACD;;;2CAEa;AAAA;;AACb;AACA;AACC,gBAAG,KAAKtB,SAAL,CAAeiE,MAAf,IAAwB,CAAxB,IAA6B,KAAK2B,iBAAL,IAAwB,IAAxD,EAA8D;AAC5D,kBAAG,KAAKP,IAAL,IAAW,IAAd,EAAmB;AACnB,qBAAKkB,qBAAL,CAA2B,KAAKX,iBAAhC;AAAoD;;AACpD,kBAAIzB,IAAJ;AAEAA,kBAAI,GAAC;AACJ,wBAAO,KAAKmB,QAAL,CAAclB,QAAd,CAAuB,MAAvB,EAA+BC,KADlC;AAEJ,0BAAS,EAFL;AAGJ,wBAAO,KAAKU;AAHR,eAAL,CAL4D,CAU9D;;AACHZ,kBAAI,CAACG,MAAL,GAAY,KAAKtE,SAAjB;AAKA,mBAAKmF,OAAL,CAAaqB,GAAb,CAAiBrC,IAAjB,EAAuBM,SAAvB,CAAiC,UAAC9F,IAAD,EAAY;AAC3C,oBAAGA,IAAI,CAAC+F,UAAL,IAAmB,GAAtB,EAA0B;AACxB,wBAAI,CAACU,MAAL,CAAYT,OAAZ,CAAoB,sBAApB;;AACA,wBAAI,CAACjF,MAAL,CAAYkF,QAAZ,CAAqB,CAAC,qBAAD,CAArB;AACD;AACF,eALD;AAOI,aAvBD,MAyBI;AACF,mBAAKQ,MAAL,CAAYP,KAAZ,CAAkB,qBAAlB;AACD;AAEF;;;;;;;yBA1OUK,qB,EAAqB,8I,EAAA,yH,EAAA,2H,EAAA,uH;AAAA,O;;;cAArBA,qB;AAAqB,yC;AAAA;AAAA;;;;;;;;;;;;;;;ACZlC;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAA6D;;AAAI;;AACrE;;AACJ;;AACA;;AACI;;AACI;;AAAO;;AAAI;;AACX;;AACA;;AAGJ;;AACJ;;AAEA;;AAA6D;AAAA,qBAAY,IAAA3B,UAAA,QAAZ;AAA8B,aAA9B,EAA+B,YAA/B,EAA+B;AAAA,qBAAe,IAAAkD,UAAA,QAAf;AAAiC,aAAhE;;AAAmE;;AAEhI;;AAAqC;AAAA,qBAAS,IAAAC,cAAA,EAAT;AAAyB,aAAzB;;AAA0D;;AAAM;;AACrG;;AAAwC;AAAA,qBAAS,IAAAzB,mBAAA,EAAT;AAA8B,aAA9B;;AAAgC;;AAAK;;AAEjF;;AACJ;;AACJ;;AACF;;;;AAlBoB;;AAAA;;AAIa;;AAAA;;AAMV;;AAAA,0FAAgB,WAAhB,EAAgB,OAAhB,EAAgB,MAAhB,EAAgB,WAAhB;;AAEuD;;AAAA;;;;;;;;;wEDTnEC,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACT9F,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKuB,U;;;;;;;;;;;;kBAU/B,uD;mBAAU,Q,EAAU;AAAE,wBAAQ;AAAV,a;;;;;;;;;;;;;;;;;;;;AEtBvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACKgB;;AAAmG;;AAAY;;;;;;AASpE;;AAA6C;;AAA6D;;AAAiC;;AAAI;;AAAyC;;AAA4B;;AAAI;;;;;;AAb/Q;;AACI;;AACI;;AAEI;;AAEJ;;AACA;;AACI;;AACI;;AACI;;AAGI;;AAAmB;;AAAY;;AAA+N;;AAElQ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAmB;;AAAY;;AAAsB;;AAA4D;;AAAiC;;AAAI;;AAAyC;;AAA4B;;AAAI;;AAAO;;AAC1O;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAmB;;AAAY;;AAAsB;;AAA4D;;AAAiC;;AAAI;;AAAyC;;AAA4B;;AAAI;;AAAO;;AAC1O;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAlCwF;;AAAA;;AAS3B;;AAAA;;;;;;AA2BzD;;AAAuE;;AAA8C;;;;;;AAKzH;;AACI;;AAAwB;;AAAY;;AACpC;;AAAuD;AAAA;AAAA,mBAAS,iBAAc,aAAd,CAAT;AAAqC,WAArC;;AAAuC;;AAAyB;;AAAO;;AAAO;;AACzI;;AACA;;AACI;;AACI;;AACI;;AAAO;;AAAI;;AACX;;AACJ;;AACJ;;AACA;;AACA;;AAAoB;;AAAmC;;AAAI;;AAAS;;AACxE;;;;;;AAFa;;AAAA,2FAAgB,WAAhB,EAAgB,UAAhB,EAAgB,MAAhB,EAAgB,WAAhB,EAAgB,QAAhB,EAAgB,aAAhB;;;;;;AAMb;;AACI;;AAAwB;;AAAa;;AACrC;;AAAuD;AAAA;AAAA,mBAAS,kBAAc,aAAd,CAAT;AAAqC,WAArC;;AAC3D;;AAAyB;;AAAO;;AAClC;;AACE;;AACA;;AACI;;AACI;;AACI;;AAAO;;AAAI;;AACX;;AACJ;;AACJ;;AACA;;AACA;;AAAoB;;AAAmC;;AAAI;;AAAS;;AACxE;;;;;;AAFa;;AAAA,2FAAgB,WAAhB,EAAgB,UAAhB,EAAgB,MAAhB,EAAgB,WAAhB,EAAgB,QAAhB,EAAgB,aAAhB;;;;UDnEJqH,qB;AA2CX,uCAAoBC,YAApB,EAA4C;AAAA;;AAAxB,eAAAA,YAAA,GAAAA,YAAA;AAzCpB,eAAA9G,GAAA,GAAM,CAAC,MAAP;AACA,eAAAC,GAAA,GAAM,OAAN;AACA,eAAA8G,IAAA,GAAO,CAAC,SAAR;AACA,eAAAC,IAAA,GAAO,UAAP;AACA,eAAAvC,IAAA,GAAO,CAAP;AAEA,eAAAwC,MAAA,GAAc,CACZ;AACEC,uBAAW,EAAE,KADf;AAEEC,mBAAO,EAAE,CACP;AACEC,wBAAU,EAAE,CAAC;AADf,aADO;AAFX,WADY,EASZ;AACEF,uBAAW,EAAE,eADf;AAEEG,uBAAW,EAAE,UAFf;AAGEF,mBAAO,EAAE,CACP;AACEG,iBAAG,EAAE;AADP,aADO,EAIP;AACEF,wBAAU,EAAE;AADd,aAJO;AAHX,WATY,EAqBZ;AACEF,uBAAW,EAAE,cADf;AAEEG,uBAAW,EAAE,QAFf;AAGEF,mBAAO,EAAE,CACP;AACEI,wBAAU,EAAE;AADd,aADO;AAHX,WArBY,CAAd;AAoCE,eAAKC,WAAL,GAAmBC,IAAI,CAACC,KAAL,CACjBC,cAAc,CAACC,OAAf,CAAuB,yEAAYC,UAAnC,CADiB,EAEjBL,WAFF;;AAGA,cAAI,KAAKA,WAAL,CAAiBrD,MAAjB,IAAyB,CAAzB,IAA8B,KAAKqD,WAAL,IAAoB,IAAlD,IAAyD,KAAKA,WAAL,IAAoBM,SAAjF,EAA4F;AAC1F,iBAAKC,cAAL,GAAsB,IAAtB;AACA,iBAAKC,cAAL,GAAsB,IAAtB;AACD,WAHD,MAGO;AACL,iBAAKD,cAAL,GAAsB,KAAKP,WAAL,CAAiB,EAAjB,EAAqBS,WAA3C;AACA,iBAAKD,cAAL,GAAsB,KAAKR,WAAL,CAAiB,EAAjB,EAAqBU,OAA3C;AACD;AACD;;;;qCAEM,CACP;;;oCACSC,Q,EAAU;AAClB,iBAAKrB,YAAL,CAAkBsB,IAAlB,CAAuBD,QAAvB,EAAiC;AAACE,2BAAa,EAAE,qBAAhB;AAAsCC,sBAAQ,EAAE,IAAhD;AAAqDC,kBAAI,EAAE;AAA3D,aAAjC;AACD;;;qCACUC,Q,EAAU;AACnB,iBAAK1B,YAAL,CAAkBsB,IAAlB,CAAuBI,QAAvB,EAAiC;AAACH,2BAAa,EAAE,qBAAhB;AAAsCC,sBAAQ,EAAE,IAAhD;AAAqDC,kBAAI,EAAE;AAA3D,aAAjC;AACD;;;;;;;yBA/DU1B,qB,EAAqB,oI;AAAA,O;;;cAArBA,qB;AAAqB,yC;AAAA;AAAA;;;;;;;;;;;;;;;ACTlC;;AACI;;AAuCA;;AAGJ;;AAEA;;AAiBA;;;;;;AA7D2B;;AAAA,iGAAwC,UAAxC,EAAwC,GAAxC;;;;;;;;;wEDQdA,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACTvH,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKuB,U;;;;;;kBAC/B,uD;mBAAU,M,EAAQ;AAAE,wBAAQ;AAAV,a","file":"geofence-geofence-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GeofenceComponent } from './geofence.component';\nimport { GeofenceaddComponent } from './geofenceadd/geofenceadd.component';\nimport { GeofenceeditComponent } from './geofenceedit/geofenceedit.component';\nimport { GeofencelistComponent } from './geofencelist/geofencelist.component';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: GeofenceComponent,\n    children: [\n      {\n        path: \"\",\n        component: GeofencelistComponent,\n        data: {\n          title: 'Geofence List',\n          urls: [\n            { title: 'Dashboard', url: '/dashboard' },\n            { title: 'Geofence' }\n          ]\n        }\n      },\n      {\n        path: \"add\",\n        component: GeofenceaddComponent,\n        data: {\n          title: 'Add Geofence',\n          urls: [\n            { title: 'Dashboard', url: '/dashboard' },\n            { title: 'Geofence' }\n          ]\n        }\n      },\n      {\n        path: \"edit\",\n        component: GeofenceeditComponent,\n        data: {\n          title: 'Edit Geofence',\n          urls: [\n            { title: 'Dashboard', url: '/dashboard' },\n            { title: 'Geofence' }\n          ]\n        }\n      },\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GeofenceRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-geofence',\n  templateUrl: './geofence.component.html',\n  styleUrls: ['./geofence.component.css']\n})\nexport class GeofenceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GeofenceComponent } from './geofence.component';\n\nimport { GeofenceRoutingModule } from './geofence-routing.module';\nimport { GeofencelistComponent } from './geofencelist/geofencelist.component';\nimport { GeofenceeditComponent } from './geofenceedit/geofenceedit.component';\n// import { GeofenceaddComponent } from './geofenceadd/geofenceadd.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AgmCoreModule } from '@agm/core';\nimport { GeofenceaddComponent } from './geofenceadd/geofenceadd.component';\n\n\n@NgModule({\n  declarations: [GeofencelistComponent, GeofenceeditComponent, GeofenceComponent,GeofenceaddComponent],\n  imports: [\n    CommonModule,\n    GeofenceRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AgmCoreModule,\n\n  ]\n})\nexport class GeofenceModule { }\n"," import { MapsAPILoader } from '@agm/core';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { CommonService } from 'src/app/_services/common.service';\nimport {Loader, LoaderOptions} from 'google-maps';\ndeclare const google: any;\n@Component({\n  selector: 'app-geofenceadd',\n  templateUrl: './geofenceadd.component.html',\n  styleUrls: ['./geofenceadd.component.css']\n})\nexport class GeofenceaddComponent implements OnInit {\n  @ViewChild(\"map2\", { static: true }) map1;\n\n  // lat = -34.397;\n  // lng = 150.644;\n  // latA = -34.754764;\n  // lngA = 149.736246;\n  // zoom = 8;\n\n  // styles: any = [\n  //   {\n  //     featureType: \"all\",\n  //     stylers: [\n  //       {\n  //         saturation: -80,\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     featureType: \"road.arterial\",\n  //     elementType: \"geometry\",\n  //     stylers: [\n  //       {\n  //         hue: \"#00ffee\",\n  //       },\n  //       {\n  //         saturation: 50,\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     featureType: \"poi.business\",\n  //     elementType: \"labels\",\n  //     stylers: [\n  //       {\n  //         visibility: \"off\",\n  //       },\n  //     ],\n  //   },\n  // ];\n\n  lat = 40.7128;\n  lng = -74.0060;\n  pointList: { lat: number; lng: number }[] = [];\n  drawingManager: any;\n  selectedShape: any;\n  selectedArea = 0;\n  sendZoom = 14;\n\n  constructor(\n    \n    private router: Router,\n    private Srvc: CommonService,\n    private toaster: ToastrService,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.setCurrentPosition();\n  }\n\n  Map: any;\n  onMapReady(map) {\n    this.Map = map;\n    this.initDrawingManager(map);\n  }\n\n  getZoom(event) {\n    console.log(event);\n    this.sendZoom = event;\n  }\n  initDrawingManager = (map: any) => {\n    const self = this;\n    const options = {\n      drawingControl: true,\n      drawingControlOptions: {\n        drawingModes: [\"polygon\"],\n      },\n      polygonOptions: {\n        draggable: true,\n        editable: true,\n      },\n\n      drawingMode: google.maps.drawing.OverlayType.POLYGON,\n    };\n    this.drawingManager = new google.maps.drawing.DrawingManager(options);\n    this.drawingManager.setMap(map);\n    google.maps.event.addListener(\n      this.drawingManager,\n      \"overlaycomplete\",\n      (event) => {\n        if (event.type === google.maps.drawing.OverlayType.POLYGON) {\n          const paths = event.overlay.getPaths();\n          for (let p = 0; p < paths.getLength(); p++) {\n            google.maps.event.addListener(paths.getAt(p), \"set_at\", () => {\n              if (!event.overlay.drag) {\n                self.updatePointList(event.overlay.getPath());\n              }\n            });\n            google.maps.event.addListener(paths.getAt(p), \"insert_at\", () => {\n              self.updatePointList(event.overlay.getPath());\n            });\n            google.maps.event.addListener(paths.getAt(p), \"remove_at\", () => {\n              self.updatePointList(event.overlay.getPath());\n            });\n          }\n          self.updatePointList(event.overlay.getPath());\n          this.selectedShape = event.overlay;\n          this.selectedShape.type = event.type;\n        }\n        if (event.type !== google.maps.drawing.OverlayType.MARKER) {\n          // Switch back to non-drawing mode after drawing a shape.\n          self.drawingManager.setDrawingMode(null);\n          // To hide:\n          self.drawingManager.setOptions({\n            drawingControl: false,\n          });\n        }\n      }\n    );\n  };\n\n  private setCurrentPosition() {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.lat = position.coords.latitude;\n        this.lng = position.coords.longitude;\n      });\n    }\n  }\n\n  deleteSelectedShape() {\n    if (this.selectedShape) {\n      this.selectedShape.setMap(null);\n      this.selectedArea = 0;\n      this.pointList = [];\n      // To show:\n      this.drawingManager.setOptions({\n        drawingControl: true,\n      });\n      this.onMapReady(this.Map);\n    }\n  }\n\n  updatePointList(path) {\n    this.pointList = [];\n    const len = path.getLength();\n    for (let i = 0; i < len; i++) {\n      this.pointList.push(path.getAt(i).toJSON());\n    }\n    this.selectedArea = google.maps.geometry.spherical.computeArea(path);\n  }\n\n  addGeofenceForm = this.fb.group({\n    name: [\"\",\n     [Validators.required,Validators.maxLength(45),Validators.minLength(2)]\n    ],\n  });\n\n   // Avoid empty Blank Space\n   avoidBlankSpace(e, ref) {\n    if (!ref.length) {\n      e.preventDefault();\n    }\n  }\n\n\n  addGeoFence() {\n    if (this.pointList.length != 0) {\n      let body = {\n        name: this.addGeofenceForm.controls[\"name\"].value,\n        points: [],\n        zoom: this.sendZoom,\n      };\n      body.points = this.pointList;\n      this.Srvc.postApi(``,body).subscribe((data: any) => {\n        if (data.statusCode == 200) {\n          this.toaster.success(\"Geofence Added\");\n          this.router.navigate([\"/pages/geofencelist\"]);\n        } else {\n          this.toaster.error(\"Failed to add Geofence\");\n        }\n      });\n    } else {\n      this.toaster.error(\"Please Add geofence\");\n    }\n  }\n}     \n\n  \n\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div class=\"row\">\n                    <div class=\"col-md-12 text-right\">\n                        <button class=\"btn btn-primary\" routerLink=\"/pages/geofence\">Back</button>\n                    </div>\n                </div>\n                <form [formGroup]=\"addGeofenceForm\">\n                    <div class=\"form-group\">\n                        <label>Name</label>\n                        <input #ref (keydown.space)=\"avoidBlankSpace($event ,ref.value)\" type=\"text\" matInput class=\"form-control\" placeholder=\"Add Geofence Name\" formControlName=\"name\">\n                        <mat-error *ngIf=\"addGeofenceForm.controls['name'].touched && addGeofenceForm.controls['name'].invalid\">\n                            *Please enter valid name(Max Limit - 45)\n                        </mat-error>\n                    </div>\n                </form>\n                <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"sendZoom\" (mapReady)=\"onMapReady($event)\" (zoomChange)=\"getZoom($event)\">\n                <!-- <agm-marker [latitude]=\"lat\" [agmFitBounds]=\"true\" [longitude]=\"lng\"></agm-marker> -->\n            </agm-map>\n                <button class=\"btn btn-primary mt-3\" (click)=\"addGeoFence()\" [disabled]=\"addGeofenceForm.invalid\">Save</button>\n                    <button class=\"btn btn-danger mt-3 ml-3\"(click)=\"deleteSelectedShape()\">Clear</button>\n  \n                <!-- <a routerLink=\"/pages/geofenceList\" class=\"btn btn-primary mt-3\">Veiw</a> -->\n            </div>\n        </div>\n    </div>\n  </div>","import { MapsAPILoader } from '@agm/core';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { CommonService } from 'src/app/_services/common.service';\ndeclare const google: any;\n@Component({\n  selector: 'app-geofenceedit',\n  templateUrl: './geofenceedit.component.html',\n  styleUrls: ['./geofenceedit.component.css']\n})\nexport class GeofenceeditComponent implements OnInit {\n\n  lat = 20.5937;\n  lng = 78.9629;\n  pointList: { lng: number; lat: number }[] = [];\n  drawingManager: any;\n  selectedShape: any;\n  selectedArea = 0;\n  locationPoints: any;\n  constructTriangle:any;\n  @ViewChild(\"AgmMap\", { static: true }) Map: any;\n\n  test=null;\n  getZoom;\n  constructor(private service:CommonService,private toastr:ToastrService,private fb:FormBuilder,private router:Router) {\n\n    var drawPolygonArr = [];\n\n    this.service.get(``).subscribe((data:any)=>{\n      if(data.statusCode == 200){\n        this.getZoom=data.data.zoom;\n        this.lng=data.data.geoPoints.coordinates[0][data.data.geoPoints.coordinates[0].length-1][0];\n        this.lat=data.data.geoPoints.coordinates[0][data.data.geoPoints.coordinates[0].length-1][1];\n\n        //console.log(this.lat);\n        this.editForm.controls['name'].setValue(data.data.name);\n        for(let i=0;i<data.data.geoPoints.coordinates[0].length;i++){\n          // drawPolygonArr.push(data.data.geoFence.coordinates[0][i]);\n        drawPolygonArr.push({\n          lat: data.data.geoPoints.coordinates[0][i][1],\n          lng: data.data.geoPoints.coordinates[0][i][0]\n        })\n\n        }\n        this.constructTriangle = new google.maps.Polygon({\n          paths: drawPolygonArr,\n          strokeColor: '#FF0000',\n          strokeOpacity: 0.8,\n          strokeWeight: 3,\n          fillColor: '#FF0000',\n          fillOpacity: 0.35,\n          editable: true,\n          draggable: true\n        })\n        this.constructTriangle.setMap(null);\n        //this.pointList=drawPolygonArr;\n    this.constructTriangle.setMap(this.Map);\n       // console.log(data.data.geoFence.coordinates[0]);\n      }\n      else{\n        this.router.navigate(['/pages/geofencelist']);\n      }\n    })\n    this.test=drawPolygonArr;\n  }\n\n\n  editForm=this.fb.group({\n    name:['',Validators.required]\n  });\n  ngOnInit() {\n\n   // console.log(this.pointList);\n\n  }\n\n  onMapReady(map) {\n\n    this.Map=map;\n    // console.log(\"ooooooooooooooo\",this.test);\n    if(this.test == null){\n    this.initDrawingManager(map);\n    }\n  }\n\n  initDrawingManager = (map: any) => {\n   // debugger\n    const self = this;\n    const options = {\n      drawingControl: true,\n      drawingControlOptions: {\n        drawingModes: ['polygon'],\n      },\n      polygonOptions: {\n        draggable: true,\n        editable: true,\n      },\n\n      drawingMode: google.maps.drawing.OverlayType.POLYGON\n    };\n    this.drawingManager = new google.maps.drawing.DrawingManager(options);\n    this.drawingManager.setMap(map);\n    google.maps.event.addListener(\n      this.drawingManager,\n      'overlaycomplete',\n      (event) => {\n        if (event.type === google.maps.drawing.OverlayType.POLYGON) {\n          const paths = event.overlay.getPaths();\n          for (let p = 0; p < paths.getLength(); p++) {\n            google.maps.event.addListener(\n              paths.getAt(p),\n              'set_at',\n              () => {\n                if (!event.overlay.drag) {\n                  self.updatePointList(event.overlay.getPath());\n                }\n              }\n            );\n            google.maps.event.addListener(\n              paths.getAt(p),\n              'insert_at',\n              () => {\n                self.updatePointList(event.overlay.getPath());\n              }\n            );\n            google.maps.event.addListener(\n              paths.getAt(p),\n              'remove_at',\n              () => {\n                self.updatePointList(event.overlay.getPath());\n              }\n            );\n          }\n          self.updatePointList(event.overlay.getPath());\n          this.selectedShape = event.overlay;\n          this.selectedShape.type = event.type;\n        }\n        if (event.type !== google.maps.drawing.OverlayType.MARKER) {\n          // Switch back to non-drawing mode after drawing a shape.\n          self.drawingManager.setDrawingMode(null);\n          // To hide:\n          self.drawingManager.setOptions({\n            drawingControl: false,\n          });\n        }\n      }\n    );\n  }\n  private setCurrentPosition() {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.lat = position.coords.latitude;\n        this.lng = position.coords.longitude;\n      });\n    }\n  }\n\n  deleteSelectedShape() {\n    if (this.selectedShape) {\n      // console.log(\"hi\");\n      this.selectedShape.setMap(null);\n      this.selectedArea = 0;\n      this.pointList = [];\n\n\n      // To show:\n      this.drawingManager.setOptions({\n        drawingControl: true,\n      });\n      this.onMapReady(this.Map);\n    }\n    else{\n      // console.log(\"bye\");\n    this.test=null;\n    this.onMapReady(this.Map);\n    //this.Map=null;\n    this.constructTriangle.setMap(null);\n    this.constructTriangle=null;}\n  }\n\n  updatePointList(path) {\n    this.pointList = [];\n    const len = path.getLength();\n    for (let i = 0; i < len; i++) {\n      this.pointList.push(\n        path.getAt(i).toJSON()\n      );\n    }\n    this.selectedArea = google.maps.geometry.spherical.computeArea(\n      path\n    );\n  }\n\n  getPolygonCoordinates(draggablePolygon) {\n\n    const len = draggablePolygon.getPath().getLength();\n    const polyArrayLatLng = [];\n\n    for (let i = 0; i < len; i++) {\n      const vertex = draggablePolygon.getPath().getAt(i);\n      const vertexLatLng = { lat: vertex.lat(), lng: vertex.lng() };\n      polyArrayLatLng.push(vertexLatLng);\n    }\n    this.pointList=null;\n    this.pointList=polyArrayLatLng;\n  }\n\n\n  updateZoom(event){\n    this.getZoom=event;\n  }\n\n  updateGeoFence(){\n   // console.log(\"list\",this.pointList);\n   // console.log(\"test,\",this.test);\n    if(this.pointList.length !=0 || this.constructTriangle!=null ){\n      if(this.test!=null){\n      this.getPolygonCoordinates(this.constructTriangle);}\n      let body;\n\n      body={\n       'name':this.editForm.controls['name'].value,\n       'points':[],\n       'zoom':this.getZoom\n     }\n    // console.log(\"data sending\",this.pointList);\n body.points=this.pointList;\n\n\n\n\n this.service.put(body).subscribe((data:any)=>{\n   if(data.statusCode == 200){\n     this.toastr.success(\"Updated successfully\");\n     this.router.navigate(['/pages/geofencelist']);\n   }\n })\n\n    }\n\n    else{\n      this.toastr.error(\"Please Add Geofence\");\n    }\n\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div class=\"row\">\n                    <div class=\"col-md-12 text-right\">\n                        <button class=\"btn btn-primary\" routerLink=\"/pages/geofence\">Back</button>\n                    </div>\n                </div>\n                <form [formGroup]=\"editForm\">\n                    <div class=\"form-group\">\n                        <label>Name</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"name\" placeholder=\"Edit Geofence Name\">\n                        <mat-error *ngIf=\"editForm.controls['name'].touched && editForm.controls['name'].invalid\">\n                            *Please enter name\n                        </mat-error>\n                    </div>\n                </form>\n  \n                <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"getZoom\" (mapReady)=\"onMapReady($event)\" (zoomChange)=\"updateZoom($event)\" ></agm-map>\n  \n                <button class=\"btn btn-primary mt-3\" (click)=\"updateGeoFence()\" [disabled]=\"editForm.invalid \">Update</button>\n                <button class=\"btn btn-danger mt-3 ml-3\"(click)=\"deleteSelectedShape()\">Clear</button>\n  \n            </div>\n        </div>\n    </div>\n  </div>","import { Component, OnInit, ViewChild} from '@angular/core';\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-geofencelist',\n  templateUrl: './geofencelist.component.html',\n  styleUrls: ['./geofencelist.component.css']\n})\nexport class GeofencelistComponent implements OnInit {\n  @ViewChild('map2', { static: true }) map1;\n  lat = -34.397;\n  lng = 150.644;\n  latA = -34.754764;\n  lngA = 149.736246;\n  zoom = 8;\n\n  styles: any = [\n    {\n      featureType: 'all',\n      stylers: [\n        {\n          saturation: -80\n        }\n      ]\n    },\n    {\n      featureType: 'road.arterial',\n      elementType: 'geometry',\n      stylers: [\n        {\n          hue: '#00ffee'\n        },\n        {\n          saturation: 50\n        }\n      ]\n    },\n    {\n      featureType: 'poi.business',\n      elementType: 'labels',\n      stylers: [\n        {\n          visibility: 'off'\n        }\n      ]\n    }\n  ];\n  permissions: any;\n  editPermission: boolean;\n  viewPermission: boolean;\n\n  constructor(private modalService: NgbModal) {\n    this.permissions = JSON.parse(\n      sessionStorage.getItem(environment.storageKey)\n    ).permissions;\n    if (this.permissions.length==0 || this.permissions == null ||this.permissions == undefined) {\n      this.editPermission = true;\n      this.viewPermission = true;\n    } else {\n      this.editPermission = this.permissions[12].is_add_edit;\n      this.viewPermission = this.permissions[12].is_view;\n    }\n   }\n\n  ngOnInit(): void {\n  }\n  addspeech(content3) {\n    this.modalService.open(content3, {backdropClass: 'light-blue-backdrop',centered: true,size: 'lg'});\n  }\n  editspeech(content4) {\n    this.modalService.open(content4, {backdropClass: 'light-blue-backdrop',centered: true,size: 'lg'});\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-body\" *ngIf=\"viewPermission;else noPermission\">\n        <div class=\"row\">\n            <div class=\"col-md-12 text-right\">\n                <!-- <a (click)=\"addspeech(content3)\" class=\"btn btn-primary text-white mb-3\">Add Geofence</a> -->\n                <a routerLink=\"/pages/geofence/add\" class=\"btn btn-primary text-white mb-3\" *ngIf=\"editPermission\">Add Geofence</a>\n            \n            </div>\n            <div class=\"col-md-3\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <ul class=\"mb-0\">\n                           \n                            <!-- <li class=\"d-flex\">Geo Fencing <span class=\"ml-auto\"><a class=\"cursor_pointer\" (click)=\"editspeech(content4)\"><i class=\"fas fa-pencil-alt\"></i></a><a href=\"javascript:void()\" class=\"ml-2\"><i class=\"fas fa-trash\"></i></a></span></li> -->\n                            <li class=\"d-flex\">Geo Fencing <span *ngIf=\"editPermission\" class=\"ml-auto\"><a class=\"cursor_pointer\"  routerLink=\"/pages/geofence/edit\"><i class=\"fas fa-pencil-alt\"></i></a><a href=\"javascript:void()\" class=\"ml-2\"><i class=\"fas fa-trash\"></i></a></span></li>\n                        \n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-3\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <ul class=\"mb-0\">\n                            <li class=\"d-flex\">Geo Fencing <span class=\"ml-auto\"><a class=\"cursor_pointer\" routerLink=\"/pages/geofence/edit\"><i class=\"fas fa-pencil-alt\"></i></a><a href=\"javascript:void()\" class=\"ml-2\"><i class=\"fas fa-trash\"></i></a></span></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-3\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <ul class=\"mb-0\">\n                            <li class=\"d-flex\">Geo Fencing <span class=\"ml-auto\"><a class=\"cursor_pointer\" routerLink=\"/pages/geofence/edit\"><i class=\"fas fa-pencil-alt\"></i></a><a href=\"javascript:void()\" class=\"ml-2\"><i class=\"fas fa-trash\"></i></a></span></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <ng-template #noPermission>\n        <h2 class=\"m-5 d-flex align-items-center justify-content-center w-100\">You don't have Permission to view this section</h2>\n      </ng-template>\n</div>\n\n<ng-template #content3 let-modal>\n    <div class=\"modal-header p-2\">\n        <h4 class=\"modal-title\">Add Geofence</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\"><span aria-hidden=\"true\">&times;</span></button>\n    </div>\n    <div class=\"modal-body\">\n        <form action=\"\">\n            <div class=\"form-group\">\n                <label>Name</label>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Add Geofence Name\">\n            </div>\n        </form>\n        <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\" [styles]=\"styles\" #map2></agm-map>\n        <div class=\"col-12\"><button class=\"btn theme_btn mt-3\">Save</button></div>\n    </div>\n</ng-template>\n\n<ng-template #content4 let-modal>\n    <div class=\"modal-header p-2\">\n        <h4 class=\"modal-title\">Edit Geofence</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n    </div>\n    <div class=\"modal-body\">\n        <form action=\"\">\n            <div class=\"form-group\">\n                <label>Name</label>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Edit Geofence Name\">\n            </div>\n        </form>\n        <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\" [styles]=\"styles\" #map2></agm-map>\n        <div class=\"col-12\"><button class=\"btn theme_btn mt-3\">Save</button></div>\n    </div>\n</ng-template>\n"]}