{"version":3,"sources":["webpack:///node_modules/ng-otp-input/__ivy_ngcc__/fesm2015/ng-otp-input.js","webpack:///src/app/_validators/must-match.validator.ts","webpack:///src/app/authentication/404/not-found.component.ts","webpack:///src/app/authentication/404/not-found.component.html","webpack:///src/app/authentication/authentication.module.ts","webpack:///src/app/authentication/authentication.routing.ts","webpack:///src/app/authentication/lock/changepassword.component.ts","webpack:///src/app/authentication/lock/changepassword.component.html","webpack:///src/app/authentication/login2/login2.component.ts","webpack:///src/app/authentication/login2/login2.component.html"],"names":["NgOtpInputComponent_div_0_input_1_Template","rf","ctx","_r5","NgOtpInputComponent_div_0_input_1_Template_input_keydown_0_listener","$event","ctx_r4","onKeyDown","NgOtpInputComponent_div_0_input_1_Template_input_keyup_0_listener","i_r3","index","ctx_r6","onKeyUp","item_r2","$implicit","ctx_r1","config","inputClass","componentKey","allowNumbersOnly","inputType","placeholder","inputStyles","otpForm","controls","NgOtpInputComponent_div_0_Template","ctx_r0","containerClass","containerStyles","KeysPipe","value","Object","keys","ɵfac","KeysPipe_Factory","t","ɵpipe","name","type","pure","args","Config","NgOtpInputComponent","keysPipe","length","onInputChange","inputControls","Array","Math","random","toString","substring","Date","getTime","addControl","getControlName","getInputType","disableAutoFocus","containerItem","document","getElementById","addEventListener","evt","handlePaste","ele","getElementsByClassName","focus","idx","event","ifKeyCode","key","targetCode","keyCode","charCode","isSpace","inputIdx","nextInputId","appendKey","prevInputId","ifRightArrow","setSelected","ifLeftArrow","isBackspace","ifBackspaceOrDelete","target","rebuildValue","ifValidEntry","id","eleId","focusTo","setSelectionRange","setTimeout","inp","String","fromCharCode","isMobile","test","navigator","userAgent","allowKeyCodes","includes","isNaN","reset","replace","from","forEach","c","get","setValue","indexOfElementToFocus","val","transform","k","emit","isPasswordInput","e","clipboardData","window","pastedData","getData","stopPropagation","preventDefault","NgOtpInputComponent_Factory","ɵcmp","selectors","inputs","outputs","decls","vars","consts","template","NgOtpInputComponent_Template","directives","NumberOnlyDirective","pipes","styles","ctorParameters","propDecorators","selector","_elRef","_renderer","disabledNumberOnly","setAttribute","nativeElement","NumberOnlyDirective_Factory","ɵdir","NgOtpInputModule","ɵmod","ɵinj","factory","NgOtpInputModule_Factory","providers","imports","ngJitMode","declarations","exports","MustMatch","controlName","matchingControlName","formGroup","control","matchingControl","errors","mustMatch","setErrors","NotfoundComponent","templateUrl","AuthenticationModule","forChild","AuthenticationRoutes","path","children","component","changepasswordComponent","fb","router","service","toaster","ChangePasswordToute","IsToken","currentUser","JSON","parse","sessionStorage","getItem","storageKey","obj","SaveObj","token","PhoneSignupForm","group","required","minLength","maxLength","validators","valid","CallChangePassword","markAllAsTouched","history","back","current_password","oldPassword","new_password","password","email","putApi","subscribe","res","code","success","changepass","BackToDashboard","styleUrls","Login2Component","spinner","loginform","recoverform","loginnumber","numberform","otpform","LoginByEmailform","pattern","rememberMe","ngOtpInputRef","console","log","optValue","RememberMe","ForgotPasswordForm","showRecoverForm","onLogin","userData","localStorage","setItem","stringify","removeItem","postApi","Showspinner","navigate","data","timeOut","userDetails","Forgot","clear","put","message","Openotp","post","ForgotOtp","error","msg","ResetOtp","ResendOtp","onOtpChange","CallResendOTP","VerifyOtp"],"mappings":"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","file":"authentication-authentication-module-es5.js","sourcesContent":["import { Pipe, EventEmitter, Component, Input, Output, Directive, ElementRef, Renderer2, NgModule } from '@angular/core';\nimport { FormGroup, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/forms';\n\nfunction NgOtpInputComponent_div_0_input_1_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 3);\n    ɵngcc0.ɵɵlistener(\"keydown\", function NgOtpInputComponent_div_0_input_1_Template_input_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ctx_r4.onKeyDown($event); })(\"keyup\", function NgOtpInputComponent_div_0_input_1_Template_input_keyup_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const i_r3 = ctx.index; const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.onKeyUp($event, i_r3); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"otp-input \", ctx_r1.config.inputClass, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate2(\"id\", \"otp_\", i_r3, \"_\", ctx_r1.componentKey, \"\");\n    ɵngcc0.ɵɵproperty(\"pattern\", ctx_r1.config.allowNumbersOnly ? \"\\\\d*\" : \"\")(\"type\", ctx_r1.inputType)(\"placeholder\", (ctx_r1.config == null ? null : ctx_r1.config.placeholder) || \"\")(\"disabledNumberOnly\", !ctx_r1.config.allowNumbersOnly)(\"ngStyle\", ctx_r1.config.inputStyles)(\"formControl\", ctx_r1.otpForm.controls[item_r2]);\n} }\nfunction NgOtpInputComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, NgOtpInputComponent_div_0_input_1_Template, 1, 11, \"input\", 2);\n    ɵngcc0.ɵɵpipe(2, \"keys\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMapInterpolate1(\"wrapper \", ctx_r0.config.containerClass, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"c_\", ctx_r0.componentKey, \"\");\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r0.config.containerStyles);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind1(2, 6, ctx_r0.otpForm == null ? null : ctx_r0.otpForm.controls));\n} }\nclass KeysPipe {\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    transform(value) {\r\n        return Object.keys(value);\r\n    }\r\n}\nKeysPipe.ɵfac = function KeysPipe_Factory(t) { return new (t || KeysPipe)(); };\nKeysPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"keys\", type: KeysPipe, pure: true });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(KeysPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'keys'\n            }]\n    }], null, null); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass Config {\r\n}\r\nif (false) {\r\n    /** @type {?} */\r\n    Config.prototype.inputStyles;\r\n    /** @type {?} */\r\n    Config.prototype.containerStyles;\r\n    /** @type {?} */\r\n    Config.prototype.allowKeyCodes;\r\n    /** @type {?} */\r\n    Config.prototype.length;\r\n    /** @type {?} */\r\n    Config.prototype.allowNumbersOnly;\r\n    /** @type {?} */\r\n    Config.prototype.inputClass;\r\n    /** @type {?} */\r\n    Config.prototype.containerClass;\r\n    /** @type {?} */\r\n    Config.prototype.isPasswordInput;\r\n    /** @type {?} */\r\n    Config.prototype.disableAutoFocus;\r\n    /** @type {?} */\r\n    Config.prototype.placeholder;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgOtpInputComponent {\r\n    /**\r\n     * @param {?} keysPipe\r\n     */\r\n    constructor(keysPipe) {\r\n        this.keysPipe = keysPipe;\r\n        this.config = { length: 4 };\r\n        // tslint:disable-next-line: no-output-on-prefix\r\n        this.onInputChange = new EventEmitter();\r\n        this.inputControls = new Array(this.config.length);\r\n        this.componentKey = Math.random()\r\n            .toString(36)\r\n            .substring(2) + new Date().getTime().toString(36);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        this.otpForm = new FormGroup({});\r\n        for (let index = 0; index < this.config.length; index++) {\r\n            this.otpForm.addControl(this.getControlName(index), new FormControl());\r\n        }\r\n        this.inputType = this.getInputType();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngAfterViewInit() {\r\n        if (!this.config.disableAutoFocus) {\r\n            /** @type {?} */\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            if (containerItem) {\r\n                containerItem.addEventListener('paste', (/**\r\n                 * @param {?} evt\r\n                 * @return {?}\r\n                 */\r\n                (evt) => this.handlePaste(evt)));\r\n                /** @type {?} */\r\n                const ele = containerItem.getElementsByClassName('otp-input')[0];\r\n                if (ele && ele.focus) {\r\n                    ele.focus();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} idx\r\n     * @return {?}\r\n     */\r\n    getControlName(idx) {\r\n        return `ctrl_${idx}`;\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifLeftArrow(event) {\r\n        return this.ifKeyCode(event, 37);\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifRightArrow(event) {\r\n        return this.ifKeyCode(event, 39);\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifBackspaceOrDelete(event) {\r\n        return (event.key === 'Backspace' ||\r\n            event.key === 'Delete' ||\r\n            this.ifKeyCode(event, 8) ||\r\n            this.ifKeyCode(event, 46));\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @param {?} targetCode\r\n     * @return {?}\r\n     */\r\n    ifKeyCode(event, targetCode) {\r\n        /** @type {?} */\r\n        const key = event.keyCode || event.charCode;\r\n        // tslint:disable-next-line: triple-equals\r\n        return key == targetCode ? true : false;\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onKeyDown($event) {\r\n        /** @type {?} */\r\n        var isSpace = this.ifKeyCode($event, 32);\r\n        if (isSpace) { // prevent space\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @param {?} inputIdx\r\n     * @return {?}\r\n     */\r\n    onKeyUp($event, inputIdx) {\r\n        /** @type {?} */\r\n        const nextInputId = this.appendKey(`otp_${inputIdx + 1}`);\r\n        /** @type {?} */\r\n        const prevInputId = this.appendKey(`otp_${inputIdx - 1}`);\r\n        if (this.ifRightArrow($event)) {\r\n            this.setSelected(nextInputId);\r\n            return;\r\n        }\r\n        if (this.ifLeftArrow($event)) {\r\n            this.setSelected(prevInputId);\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        const isBackspace = this.ifBackspaceOrDelete($event);\r\n        if (isBackspace && !$event.target.value) {\r\n            this.setSelected(prevInputId);\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        if (!$event.target.value) {\r\n            return;\r\n        }\r\n        if (this.ifValidEntry($event)) {\r\n            this.setSelected(nextInputId);\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    appendKey(id) {\r\n        return `${id}_${this.componentKey}`;\r\n    }\r\n    /**\r\n     * @param {?} eleId\r\n     * @return {?}\r\n     */\r\n    setSelected(eleId) {\r\n        this.focusTo(eleId);\r\n        /** @type {?} */\r\n        const ele = document.getElementById(eleId);\r\n        if (ele && ele.setSelectionRange) {\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                ele.setSelectionRange(0, 1);\r\n            }), 0);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifValidEntry(event) {\r\n        /** @type {?} */\r\n        const inp = String.fromCharCode(event.keyCode);\r\n        /** @type {?} */\r\n        const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        return (isMobile ||\r\n            /[a-zA-Z0-9-_]/.test(inp) ||\r\n            (this.config.allowKeyCodes &&\r\n                this.config.allowKeyCodes.includes(event.keyCode)) ||\r\n            (event.keyCode >= 96 && event.keyCode <= 105));\r\n    }\r\n    /**\r\n     * @param {?} eleId\r\n     * @return {?}\r\n     */\r\n    focusTo(eleId) {\r\n        /** @type {?} */\r\n        const ele = document.getElementById(eleId);\r\n        if (ele) {\r\n            ele.focus();\r\n        }\r\n    }\r\n    // method to set component value\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    setValue(value) {\r\n        if (this.config.allowNumbersOnly && isNaN(value)) {\r\n            return;\r\n        }\r\n        this.otpForm.reset();\r\n        if (!value) {\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        value = value.toString().replace(/\\s/g, ''); // remove whitespace\r\n        Array.from(value).forEach((/**\r\n         * @param {?} c\r\n         * @param {?} idx\r\n         * @return {?}\r\n         */\r\n        (c, idx) => {\r\n            if (this.otpForm.get(this.getControlName(idx))) {\r\n                this.otpForm.get(this.getControlName(idx)).setValue(c);\r\n            }\r\n        }));\r\n        if (!this.config.disableAutoFocus) {\r\n            /** @type {?} */\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            /** @type {?} */\r\n            var indexOfElementToFocus = value.length < this.config.length ? value.length : (this.config.length - 1);\r\n            /** @type {?} */\r\n            let ele = containerItem.getElementsByClassName('otp-input')[indexOfElementToFocus];\r\n            if (ele && ele.focus) {\r\n                ele.focus();\r\n            }\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    rebuildValue() {\r\n        /** @type {?} */\r\n        let val = '';\r\n        this.keysPipe.transform(this.otpForm.controls).forEach((/**\r\n         * @param {?} k\r\n         * @return {?}\r\n         */\r\n        k => {\r\n            if (this.otpForm.controls[k].value) {\r\n                val += this.otpForm.controls[k].value;\r\n            }\r\n        }));\r\n        this.onInputChange.emit(val);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getInputType() {\r\n        return this.config.isPasswordInput\r\n            ? 'password'\r\n            : this.config.allowNumbersOnly\r\n                ? 'tel'\r\n                : 'text';\r\n    }\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    handlePaste(e) {\r\n        // Get pasted data via clipboard API\r\n        /** @type {?} */\r\n        let clipboardData = e.clipboardData || window['clipboardData'];\r\n        if (clipboardData) {\r\n            /** @type {?} */\r\n            var pastedData = clipboardData.getData('Text');\r\n        }\r\n        // Stop data actually being pasted into div\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        if (!pastedData) {\r\n            return;\r\n        }\r\n        this.setValue(pastedData);\r\n    }\r\n}\nNgOtpInputComponent.ɵfac = function NgOtpInputComponent_Factory(t) { return new (t || NgOtpInputComponent)(ɵngcc0.ɵɵdirectiveInject(KeysPipe)); };\nNgOtpInputComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgOtpInputComponent, selectors: [[\"ng-otp-input\"]], inputs: { config: \"config\" }, outputs: { onInputChange: \"onInputChange\" }, decls: 1, vars: 1, consts: [[3, \"class\", \"id\", \"ngStyle\", 4, \"ngIf\"], [3, \"id\", \"ngStyle\"], [\"numberOnly\", \"\", \"maxlength\", \"1\", \"autocomplete\", \"off\", 3, \"pattern\", \"type\", \"placeholder\", \"disabledNumberOnly\", \"ngStyle\", \"class\", \"formControl\", \"id\", \"keydown\", \"keyup\", 4, \"ngFor\", \"ngForOf\"], [\"numberOnly\", \"\", \"maxlength\", \"1\", \"autocomplete\", \"off\", 3, \"pattern\", \"type\", \"placeholder\", \"disabledNumberOnly\", \"ngStyle\", \"formControl\", \"id\", \"keydown\", \"keyup\"]], template: function NgOtpInputComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgOtpInputComponent_div_0_Template, 3, 8, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.otpForm == null ? null : ctx.otpForm.controls);\n    } }, directives: function () { return [ɵngcc1.NgIf, ɵngcc1.NgStyle, ɵngcc1.NgForOf, ɵngcc2.DefaultValueAccessor, NumberOnlyDirective, ɵngcc2.MaxLengthValidator, ɵngcc2.PatternValidator, ɵngcc2.NgControlStatus, ɵngcc2.FormControlDirective]; }, pipes: function () { return [KeysPipe]; }, styles: [\".otp-input[_ngcontent-%COMP%]{width:50px;height:50px;border-radius:4px;border:1px solid #c5c5c5;text-align:center;font-size:32px}.wrapper[_ngcontent-%COMP%]   .otp-input[_ngcontent-%COMP%]:not(:last-child){margin-right:8px}@media screen and (max-width:767px){.otp-input[_ngcontent-%COMP%]{width:40px;font-size:24px;height:40px}}@media screen and (max-width:420px){.otp-input[_ngcontent-%COMP%]{width:30px;font-size:18px;height:30px}}\"] });\r\n/** @nocollapse */\r\nNgOtpInputComponent.ctorParameters = () => [\r\n    { type: KeysPipe }\r\n];\r\nNgOtpInputComponent.propDecorators = {\r\n    config: [{ type: Input }],\r\n    onInputChange: [{ type: Output }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgOtpInputComponent, [{\n        type: Component,\n        args: [{\n                // tslint:disable-next-line: component-selector\n                selector: 'ng-otp-input',\n                template: \"<div class=\\\"wrapper {{config.containerClass}}\\\" id=\\\"c_{{componentKey}}\\\" *ngIf=\\\"otpForm?.controls\\\"\\r\\n  [ngStyle]=\\\"config.containerStyles\\\">\\r\\n  <input [pattern]=\\\"config.allowNumbersOnly ? '\\\\\\\\d*' : ''\\\" [type]=\\\"inputType\\\" numberOnly [placeholder]=\\\"config?.placeholder || ''\\\"\\r\\n    [disabledNumberOnly]=\\\"!config.allowNumbersOnly\\\" [ngStyle]=\\\"config.inputStyles\\\" maxlength=\\\"1\\\"\\r\\n    class=\\\"otp-input {{config.inputClass}}\\\" autocomplete=\\\"off\\\" *ngFor=\\\"let item of otpForm?.controls | keys;let i=index\\\"\\r\\n    [formControl]=\\\"otpForm.controls[item]\\\" id=\\\"otp_{{i}}_{{componentKey}}\\\" (keydown)=\\\"onKeyDown($event)\\\"\\r\\n    (keyup)=\\\"onKeyUp($event,i)\\\">\\r\\n</div>\",\n                styles: [\".otp-input{width:50px;height:50px;border-radius:4px;border:1px solid #c5c5c5;text-align:center;font-size:32px}.wrapper .otp-input:not(:last-child){margin-right:8px}@media screen and (max-width:767px){.otp-input{width:40px;font-size:24px;height:40px}}@media screen and (max-width:420px){.otp-input{width:30px;font-size:18px;height:30px}}\"]\n            }]\n    }], function () { return [{ type: KeysPipe }]; }, { config: [{\n            type: Input\n        }], onInputChange: [{\n            type: Output\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.config;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.onInputChange;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.otpForm;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.inputControls;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.componentKey;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.inputType;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgOtpInputComponent.prototype.keysPipe;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NumberOnlyDirective {\r\n    /**\r\n     * @param {?} _elRef\r\n     * @param {?} _renderer\r\n     */\r\n    constructor(_elRef, _renderer) {\r\n        this._elRef = _elRef;\r\n        this._renderer = _renderer;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (!this.disabledNumberOnly) {\r\n            this._renderer.setAttribute(this._elRef.nativeElement, 'onkeypress', 'return (event.charCode >= 48 && event.charCode <= 57) || event.charCode == 0');\r\n        }\r\n    }\r\n}\nNumberOnlyDirective.ɵfac = function NumberOnlyDirective_Factory(t) { return new (t || NumberOnlyDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nNumberOnlyDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NumberOnlyDirective, selectors: [[\"\", \"numberOnly\", \"\"]], inputs: { disabledNumberOnly: \"disabledNumberOnly\" } });\r\n/** @nocollapse */\r\nNumberOnlyDirective.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Renderer2 }\r\n];\r\nNumberOnlyDirective.propDecorators = {\r\n    disabledNumberOnly: [{ type: Input }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NumberOnlyDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[numberOnly]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { disabledNumberOnly: [{\n            type: Input\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    NumberOnlyDirective.prototype.disabledNumberOnly;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NumberOnlyDirective.prototype._elRef;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NumberOnlyDirective.prototype._renderer;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgOtpInputModule {\r\n}\nNgOtpInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgOtpInputModule });\nNgOtpInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgOtpInputModule_Factory(t) { return new (t || NgOtpInputModule)(); }, providers: [KeysPipe], imports: [[\n            CommonModule,\n            FormsModule,\n            ReactiveFormsModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgOtpInputModule, { declarations: function () { return [NgOtpInputComponent, KeysPipe, NumberOnlyDirective]; }, imports: function () { return [CommonModule,\n        FormsModule,\n        ReactiveFormsModule]; }, exports: function () { return [NgOtpInputComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgOtpInputModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    ReactiveFormsModule\n                ],\n                declarations: [NgOtpInputComponent, KeysPipe, NumberOnlyDirective],\n                exports: [NgOtpInputComponent],\n                providers: [KeysPipe]\n            }]\n    }], null, null); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { NgOtpInputModule, NgOtpInputComponent as ɵa, KeysPipe as ɵb, NumberOnlyDirective as ɵc };\n\n//# sourceMappingURL=ng-otp-input.js.map","import { FormGroup } from '@angular/forms';\n// custom validator to check that two fields match\nexport function MustMatch(controlName: string, matchingControlName: string) {\n    return (formGroup: FormGroup) => {\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n            // return if another validator has already found an error on the matchingControl\n            return;\n        }\n        // set error on matchingControl if validation fails\n        if (control.value !== matchingControl.value) {\n            matchingControl.setErrors({ mustMatch: true });\n        } else {\n            matchingControl.setErrors(null);\n        }\n    }\n}","import { Component, AfterViewInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html'\n})\nexport class NotfoundComponent implements AfterViewInit {\n  ngAfterViewInit() {}\n}\n","<div class=\"error-box\">\n    <div class=\"error-body text-center\">\n        <h1 class=\"error-title text-danger\">404</h1>\n        <h3 class=\"text-uppercase error-subtitle\">PAGE NOT FOUND !</h3>\n        <p class=\"text-muted m-t-30 m-b-30\">YOU SEEM TO BE TRYING TO FIND HIS WAY HOME</p>\n        <a routerLink=\"/dashboard\" class=\"btn btn-danger btn-rounded waves-effect waves-light m-b-40\">Back to home</a> \n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { NotfoundComponent } from './404/not-found.component';\nimport { changepasswordComponent } from './lock/changepassword.component'; \n// import { LoginComponent } from './login/login.component';\nimport { Login2Component } from './login2/login2.component';\n// import { SignupComponent } from './signup/signup.component';\n// import { Signup2Component } from './signup2/signup2.component';\n\nimport { AuthenticationRoutes } from './authentication.routing';\nimport { NgOtpInputModule } from  'ng-otp-input';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(AuthenticationRoutes),\n    NgbModule,\n    NgOtpInputModule,\n    NgxSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [\n    NotfoundComponent,\n    // LoginComponent,\n    // SignupComponent,\n    changepasswordComponent,\n    Login2Component,\n    // Signup2Component,\n    \n  ]\n})\nexport class AuthenticationModule {}\n","import { Routes } from '@angular/router';\n\nimport { NotfoundComponent } from './404/not-found.component';\nimport { changepasswordComponent } from './lock/changepassword.component';\n// import { LoginComponent } from './login/login.component';\nimport { Login2Component } from './login2/login2.component';\n// import { SignupComponent } from './signup/signup.component';\n// import { Signup2Component } from './signup2/signup2.component';\n\nexport const AuthenticationRoutes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: '404',\n        component: NotfoundComponent\n      },\n      {\n        path: 'changepassword',\n        component: changepasswordComponent\n      },\n      // {\n      //   path: 'login2',\n      //   component: LoginComponent\n      // },\n      {\n        path: 'login',\n        component: Login2Component\n      },\n      // {\n      //   path: 'signup',\n      //   component: SignupComponent\n      // },\n      // {\n      //   path: 'signup2',\n      //   component: Signup2Component\n      // }\n    ]\n  }\n];\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { CommonService } from 'src/app/_services/common.service';\nimport { MustMatch } from 'src/app/_validators/must-match.validator';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-changepassword',\n  templateUrl: './changepassword.component.html',\n  styleUrls: ['./changePass.scss']\n})\nexport class changepasswordComponent implements OnInit{\n  PhoneSignupForm:FormGroup\n  obj:any\n  Reference:any\n  currentUser: any;\n  ChangePasswordToute:any = `user/change-password/`\n  IsToken :boolean = false\n  constructor(private fb:FormBuilder,private router:Router,private service:CommonService,private toaster:ToastrService) {\n   this.currentUser = JSON.parse(sessionStorage.getItem(environment.storageKey));\n  }\nngOnInit(){\nthis.obj = this.service.SaveObj\nif(this.currentUser && this.currentUser.token){\n  this.IsToken = true\n  this.PhoneSignupForm=this.fb.group({\n    \"oldPassword\":[\"\",[Validators.required, Validators.minLength(8), Validators.maxLength(16)]],\n    \"password\":[\"\",[Validators.required, Validators.minLength(8), Validators.maxLength(16)]],\n    \"cnfPassword\":[\"\",[Validators.required]]\n  },{ validators: MustMatch('password', 'cnfPassword') })\n}else{\n  this.PhoneSignupForm=this.fb.group({\n    \"password\":[\"\",[Validators.required, Validators.minLength(8), Validators.maxLength(16)]],\n    \"cnfPassword\":[\"\",[Validators.required]]\n  },{ validators: MustMatch('password', 'cnfPassword') })\n}\n  \n}\nchangepass()\n  {\n  if(this.PhoneSignupForm.valid){\n    this.CallChangePassword()\n}else{\n  this.PhoneSignupForm.markAllAsTouched()\n}\n}\n  BackToDashboard()\n  {\n    window.history.back();\n  }\n  CallChangePassword(){\n    if(this.currentUser && this.currentUser.token){\n      this.ChangePasswordToute = `user/update-password/`\n       this.obj = {\n        current_password:this.PhoneSignupForm.value.oldPassword,\n        new_password:this.PhoneSignupForm.value.password\n        }\n      }else{\n        this.obj = {\n         \"email\":this.obj?.email,\n         \"password\":this.PhoneSignupForm.value.password\n       }\n        }\n      this.service.putApi(this.ChangePasswordToute,this.obj).subscribe((res:any)=>{\n        if([200,201].includes(res.code))\n        {\n         this.toaster.success(\"Password has been changed\",'Success');\n         window.history.back();\n        }\n      })\n  }\n}\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/big/auth-bg.jpg) no-repeat center center;\">\n    <div class=\"auth-box\">\n        <div>\n            <div class=\"logo\">\n                <span class=\"db\"><img alt=\"thumbnail\" class=\"\" width=\"100\" src=\"assets/images/logo2.svg\"></span>\n            </div>\n            <!-- Form -->\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <form class=\"form-horizontal m-t-20\" [formGroup]=\"PhoneSignupForm\">\n                        <div class=\"form-group row\" *ngIf=\"IsToken\">\n                            <div class=\"col-12\">\n                                <input class=\"form-control form-control-lg\" type=\"password\" placeholder=\"Old password\" formControlName=\"oldPassword\">\n                            </div>\n                            <span class=\"error\" *ngIf=\"PhoneSignupForm.get('oldPassword').hasError('required') && PhoneSignupForm.get('oldPassword').touched\">Please enter old password.</span>\n                            <span class=\"error\" *ngIf=\"PhoneSignupForm.get('oldPassword').hasError('minlength')\">Minlength should 8.</span>\n                            <span class=\"error\" *ngIf=\"PhoneSignupForm.get('oldPassword').hasError('maxlength')\">Maxlength should 16.</span>\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-12\">\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\"\" placeholder=\"New password\" formControlName=\"password\">\n                            </div>\n                            <span class=\"error\" *ngIf=\"PhoneSignupForm.get('password').hasError('required') && PhoneSignupForm.get('password').touched\">Please enter new password.</span>\n                            <span class=\"error\" *ngIf=\"PhoneSignupForm.get('password').hasError('minlength')\">Minlength should 8.</span>\n                            <span class=\"error\" *ngIf=\"PhoneSignupForm.get('password').hasError('maxlength')\">Maxlength should 16.</span>\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-12\">\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\"\" placeholder=\"Confirm new password\" formControlName=\"cnfPassword\">\n                            </div>\n                            <span class=\"error\" *ngIf=\"PhoneSignupForm.get('cnfPassword').hasError('required') && PhoneSignupForm.get('cnfPassword').touched\">Please enter confirm new password.</span>\n                         <span class=\"error\" *ngIf=\"PhoneSignupForm.get('cnfPassword').hasError('mustMatch')\">Confirm password does not match with new password.</span> \n                        </div>\n                        <div class=\"form-group text-center\">\n                            <div class=\"col-xs-12 p-b-20\">\n                                <button class=\"btn btn-block btn-lg btn-info\" type=\"submit\" (click)=\"changepass()\">Submit</button>\n                            </div>\n                            <div class=\"col-xs-12 text-center\">\n                                <a  (click)=\"BackToDashboard()\" class=\"btn btn-block btn-lg bg-white text-primary\">Cancel</a>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { CommonService } from 'src/app/_services/common.service';\nimport { environment } from 'src/environments/environment';\ndeclare var $:any\n@Component({\n  selector: 'app-login',\n  templateUrl: './login2.component.html',\n  styleUrls: ['./login2.scss']\n\n})\nexport class Login2Component implements OnInit ,AfterViewInit{\n  LoginByEmailform:FormGroup\n  ForgotPasswordForm:FormGroup\n  optValue: any;\n  constructor(private fb:FormBuilder,private router:Router,private service:CommonService,private toaster:ToastrService,private spinner:NgxSpinnerService) {\n    this.LoginByEmailform = this.fb.group({\n      email:['',[Validators.required,Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,3}))$/)]],\n      password:['',[Validators.required,Validators.minLength(8),Validators.maxLength(16)]],\n      rememberMe:[false]\n    })\n   }\n   @ViewChild('ngOtpInput') ngOtpInputRef:any;\n   ResetOtp(){\n    this.ngOtpInputRef.setValue('');\n  }\n  loginform = true;\n  recoverform = false;\n  loginnumber= false;\n  numberform= true;\n  otpform= false;\n\n  showRecoverForm() {\n    this.loginform = !this.loginform;\n    this.recoverform = !this.recoverform;\n  }\n  Openotp(){\n    this.recoverform = !this.recoverform;\n    this.otpform = true;\n    this.numberform = !this.numberform\n    this.loginnumber = !this.loginnumber\n  }\n  shownumbrForm() {\n    this.loginform = !this.loginform;\n    this.loginnumber = !this.loginnumber;\n  }\n  signotpform() {\n    this.numberform = !this.numberform;\n    this.otpform = !this.otpform;\n  }\n  onOtpChange(e) {\n    console.log(e);\n    this.optValue = e\n  }\n  ngAfterViewInit(){\n    this.RememberMe()\n  }\n  ngOnInit(){\n\n    this.ForgotPasswordForm = this.fb.group({\n      email:['',[Validators.required,Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,3}))$/)]],\n    })\n  }\n  CancelledForgot(){\n   this.showRecoverForm()\n  }\n  CallLoginFunction(){\n    \n   if(this.LoginByEmailform.valid){  \n       let rememberMe=this.LoginByEmailform.controls['rememberMe'].value;\n        let obj = {\n         \"email\":this.LoginByEmailform.value.email,\n         \"password\":this.LoginByEmailform.value.password,\n       }\n        this.onLogin(obj)\n        if (rememberMe) {\n          let userData = this.LoginByEmailform.value;\n          localStorage.setItem('TaraRememberMe', JSON.stringify(userData))\n        } else {\n          localStorage.removeItem('TaraRememberMe')\n        }\n     }else{\n      this.LoginByEmailform.markAllAsTouched()\n    }  \n    }\n    onLogin(obj)\n    {\n  this.service.postApi(`auth/admin/login/`,obj).subscribe((res:any)=>{\n    if([200,201].includes(res.code)){\n      setTimeout(() => {\n        this.service.Showspinner()\n      }, 100);\n   this.router.navigate(['dashboard']);\n   sessionStorage.setItem(environment.storageKey,JSON.stringify(res?.data));\n   this.toaster.success('You logged in successfully','',{\n    timeOut: 2000,\n  })\n    }\n    });\n   }\n  RememberMe(){\n    if(localStorage.getItem('TaraRememberMe')){\n      let userDetails = JSON.parse(localStorage.getItem('TaraRememberMe')); \n      this.LoginByEmailform.controls['email'].setValue(userDetails.email);\n      this.LoginByEmailform.controls['password'].setValue(userDetails.password);\n      this.LoginByEmailform.controls['rememberMe'].setValue(userDetails.rememberMe);\n    }\n  }\n  ResetFor(){\n  if(this.ForgotPasswordForm.valid){\n        let obj = {\"email\":this.ForgotPasswordForm.value.email}\n        this.Forgot(obj)\n      }else {\n        this.ForgotPasswordForm.markAllAsTouched()\n      }\n  }\n  Forgot(obj){\n    this.toaster.clear()\n    this.service.put(`user/forgot-password/`,obj).subscribe((res:any)=>{\n      if([200,201].includes(res.code)){\n      this.toaster.success(res.message,'Success',{timeOut:1000})\n     //   $('#exampleModalCenter').modal({backdrop: 'static', keyboard: false}) \n     this.Openotp()\n\n      }\n    })\n  }\n  ForgotOtp(obj){\n    this.service.put(`user/forgot-verify-otp/`,obj).subscribe((res:any)=>{\n      if([200,201].includes(res.code)){\n      this.service.SaveObj = obj\n       this.toaster.success('Otp verified successfully','',{timeOut:1000})\n   //    $('#exampleModalCenter').modal('hide')\n       this.router.navigate(['/changepassword'])\n      }\n    })\n  }\n  SendOtp(obj){\n    this.service.post(`user/verify-otp/`,obj).subscribe((res:any)=>{\n      if([200,201].includes(res.code)){\n     sessionStorage.setItem(\"OtpDetails\",JSON.stringify(obj));\n     this.toaster.success('Otp verified successfully','',{timeOut:1000})\n   //    $('#exampleModalCenter').modal('hide')\n       this.router.navigate(['/changepassword'])\n      }\n    })\n  }\n  VerifyOtp(){\n    this.toaster.clear()\n    if(this.optValue && this.optValue.length===4){\n      let obj = {\n        \"email\":this.ForgotPasswordForm.value.email,\n        \"otp\":this.optValue\n         }\n         // this.SendOtp(obj)\n         this.ForgotOtp(obj)\n    }else{\n      this.toaster.error('Please enter 4-digit OTP','Error')\n    }\n     \n    }\n  \n  ResendOtp(obj,msg){\n  this.service.post(`user/send-otp-to-old-user/`,obj).subscribe((res:any)=>{\n     if([200,201].includes(res.code)){\n    //  $('#exampleModalCenter').modal({backdrop: 'static', keyboard: false}) \n       this.toaster.success(` Otp sent ${msg}`,'Resend OTP',{timeOut:1000})\n     }\n   })\n  }\n  CallResendOTP(){\n    this.ResetOtp()\n  let obj = {\n    \"email\":this.ForgotPasswordForm.value.email,\n     }\n     this.ResendOtp(obj,'to email id')\n   }\n  }\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/background/login-register.jpg) no-repeat center center;background-size: 100% 100%;\">\n    <div class=\"auth-box on-sidebar\">\n        <div id=\"loginform\" *ngIf=\"loginform\">\n            <div class=\"logo\">\n                <span class=\"db\"><img src=\"assets/images/logo2.svg\" alt=\"logo\"/></span>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <form class=\"form-horizontal m-t-20\" id=\"loginform\" [formGroup]=\"LoginByEmailform\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\" id=\"basic-addon1\"><i class=\"ti-user\"></i></span>\n                                </div>\n                                <input type=\"email\" class=\"form-control form-control-lg\" placeholder=\"Email\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" formControlName=\"email\">\n                            </div>\n                            <span class=\"error\" *ngIf=\"LoginByEmailform.get('email').hasError('required') && LoginByEmailform.get('email').touched\">Please enter email.</span>\n                            <span class=\"error\" *ngIf=\"LoginByEmailform.get('email').hasError('pattern')\">Please enter valid email.</span>\n    \n                        </div>\n                       <div class=\"form-group\">\n                        <div class=\"input-group\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" id=\"basic-addon2\"><i class=\"fa fa-lock\"></i></span>\n                            </div>\n                            <input type=\"password\" class=\"form-control form-control-lg\" placeholder=\"Password\" aria-label=\"Password\" aria-describedby=\"basic-addon1\" formControlName=\"password\">\n                        </div>\n                        <span class=\"error\" *ngIf=\"LoginByEmailform.get('password').hasError('required') && LoginByEmailform.get('password').touched\">Please enter password.</span>\n                            <span class=\"error\" *ngIf=\"LoginByEmailform.get('password').hasError('minlength')\">Minlength should 8.</span>\n                            <span class=\"error\" *ngIf=\"LoginByEmailform.get('password').hasError('maxlength')\">Maxlength should 16.</span>\n                       </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-md-12\">\n                                <div class=\"custom-control custom-checkbox\">\n                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\" formControlName=\"rememberMe\">\n                                    <label class=\"custom-control-label text-white\" for=\"customCheck1\">Remember Me</label>\n                                    <a (click)=\"showRecoverForm()\" href=\"javascript:void(0)\" id=\"to-recover\" class=\"text-white float-right\"><i class=\"fa fa-lock m-r-5\"></i> Forgot password</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group text-center\">\n                            <div class=\"col-xs-12 p-b-20\">\n                                <button class=\"btn btn-block btn-lg theme_btn_drk text-white\" type=\"button\" (click)=\"CallLoginFunction()\">Login</button>\n                            </div>\n                            <!-- <div class=\"col-xs-12 p-b-20\">\n                                <button (click)=\"shownumbrForm()\" href=\"javascript:void(0)\" class=\"btn btn-block btn-lg theme_btn_drk text-white\" type=\"button\">Login with number</button>\n                            </div> -->\n                            <!-- <div class=\"col-12 mt-2 text-white\">Don't have an account?\n                                <a class=\"text-white\" href=\"javascript:void()\" routerLink='/signup2'> <b> Sign up </b> </a>\n                            </div> -->\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n        <div *ngIf=\"recoverform\">\n            <div class=\"logo\">\n                <span class=\"db\"><img src=\"assets/images/logo2.svg\" alt=\"logo\" /></span>\n                <h5 class=\"font-medium my-3\">Recover Password</h5>\n                <span>Enter your Email and instructions will be sent to you!</span>\n            </div>\n            <div class=\"row m-t-20\">\n                <!-- Form -->\n                <form class=\"col-12\" [formGroup]=\"ForgotPasswordForm\">\n                    <!-- email -->\n                    <div class=\"form-group\">\n                        <input class=\"form-control form-control-lg\" type=\"email\" placeholder=\"Email\" formControlName=\"email\">\n                        <span class=\"error\" *ngIf=\"ForgotPasswordForm.get('email').hasError('required') && ForgotPasswordForm.get('email').touched\">Please enter email.</span>\n                        <span class=\"error\" *ngIf=\"ForgotPasswordForm.get('email').hasError('pattern')\">Please enter valid email.</span>\n                       </div>\n                    <!-- pwd -->\n                    <div class=\"row m-t-20\">\n                        <div class=\"col-12\">\n                            <button class=\"btn btn-block btn-lg theme_btn_drk\" type=\"submit\" (click)=\"ResetFor()\" name=\"action\"> Reset </button>\n                        </div>\n                        <div class=\"col-12 mt-2\">\n                            <button class=\"btn btn-block btn-lg theme_btn_drk\" type=\"submit\" name=\"action\" (click)=\"CancelledForgot()\"> Cancel </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n        <div id=\"loginnumber\" *ngIf=\"loginnumber\">\n            <div class=\"logo\">\n                <span class=\"db\"><img src=\"assets/images/logo2.svg\" alt=\"logo\"/></span>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12\" *ngIf=\"numberform\">\n                    <form class=\"form-horizontal m-t-20\" id=\"loginform\" action=\"index.html\">\n                        <div class=\"input-group mb-3\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" id=\"basic-addon1\"><i class=\"ti-user\"></i></span>\n                            </div>\n                            <input type=\"number\" class=\"form-control form-control-lg\" placeholder=\"Phone number\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" required>\n                        </div>\n                        <!-- <div class=\"input-group mb-3\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" id=\"basic-addon2\"><i class=\"fa fa-lock\"></i></span>\n                            </div>\n                            <input type=\"password\" class=\"form-control form-control-lg\" placeholder=\"Password\" aria-label=\"Password\" aria-describedby=\"basic-addon1\" required>\n                        </div> -->\n                        <div class=\"form-group row\">\n                            <div class=\"col-md-12\">\n                                <div class=\"custom-control custom-checkbox\">\n                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\n                                    <label class=\"custom-control-label text-white\" for=\"customCheck1\">Remember Me</label>\n                                    <a (click)=\"showRecoverForm()\" href=\"javascript:void(0)\" id=\"to-recover\" class=\"text-white float-right\"><i class=\"fa fa-lock m-r-5\"></i> Forgot password</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group text-center\">\n                            <div class=\"col-xs-12 p-b-20\">\n                                <button (click)=\"signotpform()\" class=\"btn btn-block btn-lg theme_btn_drk text-white\" type=\"submit\">Login</button>\n                            </div>\n                            <div class=\"col-xs-12 p-b-20\">\n                                <button (click)=\"shownumbrForm()\" href=\"javascript:void(0)\" class=\"btn btn-block btn-lg theme_btn_drk text-white\">Login with email</button>\n                            </div>\n                            <div class=\"col-12 mt-2 text-white\">Don't have an account?\n                                <a class=\"text-white\" href=\"javascript:void()\" routerLink='/signup2'> <b> Sign up </b> </a>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <div class=\"col-12\" *ngIf=\"otpform\">\n                    <form class=\"form-horizontal m-t-20\" action=\"index.html\">\n                      <div class=\"form-group row \">\n                        <div class=\"col-12 text-center\">\n                          <ng-otp-input class=\"otp-box\" (onInputChange)=\"onOtpChange($event)\" [config]=\"{length:4,allowNumbersOnly:true}\">\n                          </ng-otp-input>\n                        </div>\n                      </div>\n                      <div class=\"form-group text-center \">\n                        <div class=\"col-xs-12 p-b-20 \">\n                          <button class=\"btn btn-block btn-lg theme_btn_drk\"\n                            type=\"submit\" (click)=\"VerifyOtp()\"> Verify </button>\n                        </div>\n                      </div>\n                      <div class=\"form-group m-b-0 m-t-10 text-center\"> <a href=\"javascript:void(0)\" \n                          class=\"text-white m-l-5 \" (click)=\"CallResendOTP()\"><b>Resend OTP</b></a></div>\n                    </form>\n                  </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"modal fade\" id=\"exampleModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Otp verification</h5>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n            <div class=\"col-12\">\n                <form class=\"form-horizontal m-t-20\" action=\"index.html\">\n                  <div class=\"form-group row \">\n                    <div class=\"col-12 text-center\">\n                      <ng-otp-input class=\"otp-box\" #ngOtpInput (onInputChange)=\"onOtpChange($event)\" [config]=\"{length:4,allowNumbersOnly:true}\">\n                      </ng-otp-input>\n                    </div>\n                  </div>\n                  \n                </form>\n              </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"CallResendOTP()\">Resend OTP</button>\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"VerifyOtp()\">Verify</button>\n        </div>\n      </div>\n    </div>\n  </div>"]}