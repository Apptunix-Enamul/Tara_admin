{"version":3,"sources":["./src/app/pages/geofence/geofence-routing.module.ts","./src/app/pages/geofence/geofence.component.ts","./src/app/pages/geofence/geofence.component.html","./src/app/pages/geofence/geofence.module.ts","./src/app/pages/geofence/geofenceadd/geofenceadd.component.ts","./src/app/pages/geofence/geofenceadd/geofenceadd.component.html","./src/app/pages/geofence/geofenceedit/geofenceedit.component.ts","./src/app/pages/geofence/geofenceedit/geofenceedit.component.html","./src/app/pages/geofence/geofencelist/geofencelist.component.ts","./src/app/pages/geofence/geofencelist/geofencelist.component.html"],"names":[],"mappings":"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","file":"geofence-geofence-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GeofenceComponent } from './geofence.component';\nimport { GeofenceaddComponent } from './geofenceadd/geofenceadd.component';\nimport { GeofenceeditComponent } from './geofenceedit/geofenceedit.component';\nimport { GeofencelistComponent } from './geofencelist/geofencelist.component';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: GeofenceComponent,\n    children: [\n      {\n        path: \"\",\n        component: GeofencelistComponent,\n        data: {\n          title: 'Geofence List',\n          urls: [\n            { title: 'Dashboard', url: '/dashboard' },\n            { title: 'Geofence' }\n          ]\n        }\n      },\n      {\n        path: \"add\",\n        component: GeofenceaddComponent,\n        data: {\n          title: 'Add Geofence',\n          urls: [\n            { title: 'Dashboard', url: '/dashboard' },\n            { title: 'Geofence' }\n          ]\n        }\n      },\n      {\n        path: \"edit\",\n        component: GeofenceeditComponent,\n        data: {\n          title: 'Edit Geofence',\n          urls: [\n            { title: 'Dashboard', url: '/dashboard' },\n            { title: 'Geofence' }\n          ]\n        }\n      },\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GeofenceRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-geofence',\n  templateUrl: './geofence.component.html',\n  styleUrls: ['./geofence.component.css']\n})\nexport class GeofenceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GeofenceComponent } from './geofence.component';\n\nimport { GeofenceRoutingModule } from './geofence-routing.module';\nimport { GeofencelistComponent } from './geofencelist/geofencelist.component';\nimport { GeofenceeditComponent } from './geofenceedit/geofenceedit.component';\n// import { GeofenceaddComponent } from './geofenceadd/geofenceadd.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AgmCoreModule } from '@agm/core';\nimport { GeofenceaddComponent } from './geofenceadd/geofenceadd.component';\n\n\n@NgModule({\n  declarations: [GeofencelistComponent, GeofenceeditComponent, GeofenceComponent,GeofenceaddComponent],\n  imports: [\n    CommonModule,\n    GeofenceRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AgmCoreModule,\n\n  ]\n})\nexport class GeofenceModule { }\n"," import { MapsAPILoader } from '@agm/core';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { CommonService } from 'src/app/_services/common.service';\nimport {Loader, LoaderOptions} from 'google-maps';\ndeclare const google: any;\n@Component({\n  selector: 'app-geofenceadd',\n  templateUrl: './geofenceadd.component.html',\n  styleUrls: ['./geofenceadd.component.css']\n})\nexport class GeofenceaddComponent implements OnInit {\n  @ViewChild(\"map2\", { static: true }) map1;\n\n  // lat = -34.397;\n  // lng = 150.644;\n  // latA = -34.754764;\n  // lngA = 149.736246;\n  // zoom = 8;\n\n  // styles: any = [\n  //   {\n  //     featureType: \"all\",\n  //     stylers: [\n  //       {\n  //         saturation: -80,\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     featureType: \"road.arterial\",\n  //     elementType: \"geometry\",\n  //     stylers: [\n  //       {\n  //         hue: \"#00ffee\",\n  //       },\n  //       {\n  //         saturation: 50,\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     featureType: \"poi.business\",\n  //     elementType: \"labels\",\n  //     stylers: [\n  //       {\n  //         visibility: \"off\",\n  //       },\n  //     ],\n  //   },\n  // ];\n\n  lat = 40.7128;\n  lng = -74.0060;\n  pointList: { lat: number; lng: number }[] = [];\n  drawingManager: any;\n  selectedShape: any;\n  selectedArea = 0;\n  sendZoom = 14;\n\n  constructor(\n    \n    private router: Router,\n    private Srvc: CommonService,\n    private toaster: ToastrService,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.setCurrentPosition();\n  }\n\n  Map: any;\n  onMapReady(map) {\n    this.Map = map;\n    this.initDrawingManager(map);\n  }\n\n  getZoom(event) {\n    console.log(event);\n    this.sendZoom = event;\n  }\n  initDrawingManager = (map: any) => {\n    const self = this;\n    const options = {\n      drawingControl: true,\n      drawingControlOptions: {\n        drawingModes: [\"polygon\"],\n      },\n      polygonOptions: {\n        draggable: true,\n        editable: true,\n      },\n\n      drawingMode: google.maps.drawing.OverlayType.POLYGON,\n    };\n    this.drawingManager = new google.maps.drawing.DrawingManager(options);\n    this.drawingManager.setMap(map);\n    google.maps.event.addListener(\n      this.drawingManager,\n      \"overlaycomplete\",\n      (event) => {\n        if (event.type === google.maps.drawing.OverlayType.POLYGON) {\n          const paths = event.overlay.getPaths();\n          for (let p = 0; p < paths.getLength(); p++) {\n            google.maps.event.addListener(paths.getAt(p), \"set_at\", () => {\n              if (!event.overlay.drag) {\n                self.updatePointList(event.overlay.getPath());\n              }\n            });\n            google.maps.event.addListener(paths.getAt(p), \"insert_at\", () => {\n              self.updatePointList(event.overlay.getPath());\n            });\n            google.maps.event.addListener(paths.getAt(p), \"remove_at\", () => {\n              self.updatePointList(event.overlay.getPath());\n            });\n          }\n          self.updatePointList(event.overlay.getPath());\n          this.selectedShape = event.overlay;\n          this.selectedShape.type = event.type;\n        }\n        if (event.type !== google.maps.drawing.OverlayType.MARKER) {\n          // Switch back to non-drawing mode after drawing a shape.\n          self.drawingManager.setDrawingMode(null);\n          // To hide:\n          self.drawingManager.setOptions({\n            drawingControl: false,\n          });\n        }\n      }\n    );\n  };\n\n  private setCurrentPosition() {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.lat = position.coords.latitude;\n        this.lng = position.coords.longitude;\n      });\n    }\n  }\n\n  deleteSelectedShape() {\n    if (this.selectedShape) {\n      this.selectedShape.setMap(null);\n      this.selectedArea = 0;\n      this.pointList = [];\n      // To show:\n      this.drawingManager.setOptions({\n        drawingControl: true,\n      });\n      this.onMapReady(this.Map);\n    }\n  }\n\n  updatePointList(path) {\n    this.pointList = [];\n    const len = path.getLength();\n    for (let i = 0; i < len; i++) {\n      this.pointList.push(path.getAt(i).toJSON());\n    }\n    this.selectedArea = google.maps.geometry.spherical.computeArea(path);\n  }\n\n  addGeofenceForm = this.fb.group({\n    name: [\"\",\n     [Validators.required,Validators.maxLength(45),Validators.minLength(2)]\n    ],\n  });\n\n   // Avoid empty Blank Space\n   avoidBlankSpace(e, ref) {\n    if (!ref.length) {\n      e.preventDefault();\n    }\n  }\n\n\n  addGeoFence() {\n    if (this.pointList.length != 0) {\n      let body = {\n        name: this.addGeofenceForm.controls[\"name\"].value,\n        points: [],\n        zoom: this.sendZoom,\n      };\n      body.points = this.pointList;\n      this.Srvc.postApi(``,body).subscribe((data: any) => {\n        if (data.statusCode == 200) {\n          this.toaster.success(\"Geofence Added\");\n          this.router.navigate([\"/pages/geofencelist\"]);\n        } else {\n          this.toaster.error(\"Failed to add Geofence\");\n        }\n      });\n    } else {\n      this.toaster.error(\"Please Add geofence\");\n    }\n  }\n}     \n\n  \n\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div class=\"row\">\n                    <div class=\"col-md-12 text-right\">\n                        <button class=\"btn btn-primary\" routerLink=\"/pages/geofence\">Back</button>\n                    </div>\n                </div>\n                <form [formGroup]=\"addGeofenceForm\">\n                    <div class=\"form-group\">\n                        <label>Name</label>\n                        <input #ref (keydown.space)=\"avoidBlankSpace($event ,ref.value)\" type=\"text\" matInput class=\"form-control\" placeholder=\"Add Geofence Name\" formControlName=\"name\">\n                        <mat-error *ngIf=\"addGeofenceForm.controls['name'].touched && addGeofenceForm.controls['name'].invalid\">\n                            *Please enter valid name(Max Limit - 45)\n                        </mat-error>\n                    </div>\n                </form>\n                <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"sendZoom\" (mapReady)=\"onMapReady($event)\" (zoomChange)=\"getZoom($event)\">\n                <!-- <agm-marker [latitude]=\"lat\" [agmFitBounds]=\"true\" [longitude]=\"lng\"></agm-marker> -->\n            </agm-map>\n                <button class=\"btn btn-primary mt-3\" (click)=\"addGeoFence()\" [disabled]=\"addGeofenceForm.invalid\">Save</button>\n                    <button class=\"btn btn-danger mt-3 ml-3\"(click)=\"deleteSelectedShape()\">Clear</button>\n  \n                <!-- <a routerLink=\"/pages/geofenceList\" class=\"btn btn-primary mt-3\">Veiw</a> -->\n            </div>\n        </div>\n    </div>\n  </div>","import { MapsAPILoader } from '@agm/core';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { CommonService } from 'src/app/_services/common.service';\ndeclare const google: any;\n@Component({\n  selector: 'app-geofenceedit',\n  templateUrl: './geofenceedit.component.html',\n  styleUrls: ['./geofenceedit.component.css']\n})\nexport class GeofenceeditComponent implements OnInit {\n\n  lat = 20.5937;\n  lng = 78.9629;\n  pointList: { lng: number; lat: number }[] = [];\n  drawingManager: any;\n  selectedShape: any;\n  selectedArea = 0;\n  locationPoints: any;\n  constructTriangle:any;\n  @ViewChild(\"AgmMap\", { static: true }) Map: any;\n\n  test=null;\n  getZoom;\n  constructor(private service:CommonService,private toastr:ToastrService,private fb:FormBuilder,private router:Router) {\n\n    var drawPolygonArr = [];\n\n    this.service.get(``).subscribe((data:any)=>{\n      if(data.statusCode == 200){\n        this.getZoom=data.data.zoom;\n        this.lng=data.data.geoPoints.coordinates[0][data.data.geoPoints.coordinates[0].length-1][0];\n        this.lat=data.data.geoPoints.coordinates[0][data.data.geoPoints.coordinates[0].length-1][1];\n\n        //console.log(this.lat);\n        this.editForm.controls['name'].setValue(data.data.name);\n        for(let i=0;i<data.data.geoPoints.coordinates[0].length;i++){\n          // drawPolygonArr.push(data.data.geoFence.coordinates[0][i]);\n        drawPolygonArr.push({\n          lat: data.data.geoPoints.coordinates[0][i][1],\n          lng: data.data.geoPoints.coordinates[0][i][0]\n        })\n\n        }\n        this.constructTriangle = new google.maps.Polygon({\n          paths: drawPolygonArr,\n          strokeColor: '#FF0000',\n          strokeOpacity: 0.8,\n          strokeWeight: 3,\n          fillColor: '#FF0000',\n          fillOpacity: 0.35,\n          editable: true,\n          draggable: true\n        })\n        this.constructTriangle.setMap(null);\n        //this.pointList=drawPolygonArr;\n    this.constructTriangle.setMap(this.Map);\n       // console.log(data.data.geoFence.coordinates[0]);\n      }\n      else{\n        this.router.navigate(['/pages/geofencelist']);\n      }\n    })\n    this.test=drawPolygonArr;\n  }\n\n\n  editForm=this.fb.group({\n    name:['',Validators.required]\n  });\n  ngOnInit() {\n\n   // console.log(this.pointList);\n\n  }\n\n  onMapReady(map) {\n\n    this.Map=map;\n    // console.log(\"ooooooooooooooo\",this.test);\n    if(this.test == null){\n    this.initDrawingManager(map);\n    }\n  }\n\n  initDrawingManager = (map: any) => {\n   // debugger\n    const self = this;\n    const options = {\n      drawingControl: true,\n      drawingControlOptions: {\n        drawingModes: ['polygon'],\n      },\n      polygonOptions: {\n        draggable: true,\n        editable: true,\n      },\n\n      drawingMode: google.maps.drawing.OverlayType.POLYGON\n    };\n    this.drawingManager = new google.maps.drawing.DrawingManager(options);\n    this.drawingManager.setMap(map);\n    google.maps.event.addListener(\n      this.drawingManager,\n      'overlaycomplete',\n      (event) => {\n        if (event.type === google.maps.drawing.OverlayType.POLYGON) {\n          const paths = event.overlay.getPaths();\n          for (let p = 0; p < paths.getLength(); p++) {\n            google.maps.event.addListener(\n              paths.getAt(p),\n              'set_at',\n              () => {\n                if (!event.overlay.drag) {\n                  self.updatePointList(event.overlay.getPath());\n                }\n              }\n            );\n            google.maps.event.addListener(\n              paths.getAt(p),\n              'insert_at',\n              () => {\n                self.updatePointList(event.overlay.getPath());\n              }\n            );\n            google.maps.event.addListener(\n              paths.getAt(p),\n              'remove_at',\n              () => {\n                self.updatePointList(event.overlay.getPath());\n              }\n            );\n          }\n          self.updatePointList(event.overlay.getPath());\n          this.selectedShape = event.overlay;\n          this.selectedShape.type = event.type;\n        }\n        if (event.type !== google.maps.drawing.OverlayType.MARKER) {\n          // Switch back to non-drawing mode after drawing a shape.\n          self.drawingManager.setDrawingMode(null);\n          // To hide:\n          self.drawingManager.setOptions({\n            drawingControl: false,\n          });\n        }\n      }\n    );\n  }\n  private setCurrentPosition() {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.lat = position.coords.latitude;\n        this.lng = position.coords.longitude;\n      });\n    }\n  }\n\n  deleteSelectedShape() {\n    if (this.selectedShape) {\n      // console.log(\"hi\");\n      this.selectedShape.setMap(null);\n      this.selectedArea = 0;\n      this.pointList = [];\n\n\n      // To show:\n      this.drawingManager.setOptions({\n        drawingControl: true,\n      });\n      this.onMapReady(this.Map);\n    }\n    else{\n      // console.log(\"bye\");\n    this.test=null;\n    this.onMapReady(this.Map);\n    //this.Map=null;\n    this.constructTriangle.setMap(null);\n    this.constructTriangle=null;}\n  }\n\n  updatePointList(path) {\n    this.pointList = [];\n    const len = path.getLength();\n    for (let i = 0; i < len; i++) {\n      this.pointList.push(\n        path.getAt(i).toJSON()\n      );\n    }\n    this.selectedArea = google.maps.geometry.spherical.computeArea(\n      path\n    );\n  }\n\n  getPolygonCoordinates(draggablePolygon) {\n\n    const len = draggablePolygon.getPath().getLength();\n    const polyArrayLatLng = [];\n\n    for (let i = 0; i < len; i++) {\n      const vertex = draggablePolygon.getPath().getAt(i);\n      const vertexLatLng = { lat: vertex.lat(), lng: vertex.lng() };\n      polyArrayLatLng.push(vertexLatLng);\n    }\n    this.pointList=null;\n    this.pointList=polyArrayLatLng;\n  }\n\n\n  updateZoom(event){\n    this.getZoom=event;\n  }\n\n  updateGeoFence(){\n   // console.log(\"list\",this.pointList);\n   // console.log(\"test,\",this.test);\n    if(this.pointList.length !=0 || this.constructTriangle!=null ){\n      if(this.test!=null){\n      this.getPolygonCoordinates(this.constructTriangle);}\n      let body;\n\n      body={\n       'name':this.editForm.controls['name'].value,\n       'points':[],\n       'zoom':this.getZoom\n     }\n    // console.log(\"data sending\",this.pointList);\n body.points=this.pointList;\n\n\n\n\n this.service.put(body).subscribe((data:any)=>{\n   if(data.statusCode == 200){\n     this.toastr.success(\"Updated successfully\");\n     this.router.navigate(['/pages/geofencelist']);\n   }\n })\n\n    }\n\n    else{\n      this.toastr.error(\"Please Add Geofence\");\n    }\n\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div class=\"row\">\n                    <div class=\"col-md-12 text-right\">\n                        <button class=\"btn btn-primary\" routerLink=\"/pages/geofence\">Back</button>\n                    </div>\n                </div>\n                <form [formGroup]=\"editForm\">\n                    <div class=\"form-group\">\n                        <label>Name</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"name\" placeholder=\"Edit Geofence Name\">\n                        <mat-error *ngIf=\"editForm.controls['name'].touched && editForm.controls['name'].invalid\">\n                            *Please enter name\n                        </mat-error>\n                    </div>\n                </form>\n  \n                <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"getZoom\" (mapReady)=\"onMapReady($event)\" (zoomChange)=\"updateZoom($event)\" ></agm-map>\n  \n                <button class=\"btn btn-primary mt-3\" (click)=\"updateGeoFence()\" [disabled]=\"editForm.invalid \">Update</button>\n                <button class=\"btn btn-danger mt-3 ml-3\"(click)=\"deleteSelectedShape()\">Clear</button>\n  \n            </div>\n        </div>\n    </div>\n  </div>","import { Component, OnInit, ViewChild} from '@angular/core';\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-geofencelist',\n  templateUrl: './geofencelist.component.html',\n  styleUrls: ['./geofencelist.component.css']\n})\nexport class GeofencelistComponent implements OnInit {\n  @ViewChild('map2', { static: true }) map1;\n \n\n  lat = -34.397;\n  lng = 150.644;\n  latA = -34.754764;\n  lngA = 149.736246;\n  zoom = 8;\n\n  styles: any = [\n    {\n      featureType: 'all',\n      stylers: [\n        {\n          saturation: -80\n        }\n      ]\n    },\n    {\n      featureType: 'road.arterial',\n      elementType: 'geometry',\n      stylers: [\n        {\n          hue: '#00ffee'\n        },\n        {\n          saturation: 50\n        }\n      ]\n    },\n    {\n      featureType: 'poi.business',\n      elementType: 'labels',\n      stylers: [\n        {\n          visibility: 'off'\n        }\n      ]\n    }\n  ];\n\n  constructor(private modalService: NgbModal) { }\n\n  ngOnInit(): void {\n  }\n  addspeech(content3) {\n    this.modalService.open(content3, {backdropClass: 'light-blue-backdrop',centered: true,size: 'lg'});\n  }\n  editspeech(content4) {\n    this.modalService.open(content4, {backdropClass: 'light-blue-backdrop',centered: true,size: 'lg'});\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-md-12 text-right\">\n                <!-- <a (click)=\"addspeech(content3)\" class=\"btn btn-primary text-white mb-3\">Add Geofence</a> -->\n                <a routerLink=\"/pages/geofence/add\" class=\"btn btn-primary text-white mb-3\">Add Geofence</a>\n            \n            </div>\n            <div class=\"col-md-3\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <ul class=\"mb-0\">\n                           \n                            <!-- <li class=\"d-flex\">Geo Fencing <span class=\"ml-auto\"><a class=\"cursor_pointer\" (click)=\"editspeech(content4)\"><i class=\"fas fa-pencil-alt\"></i></a><a href=\"javascript:void()\" class=\"ml-2\"><i class=\"fas fa-trash\"></i></a></span></li> -->\n                            <li class=\"d-flex\">Geo Fencing <span class=\"ml-auto\"><a class=\"cursor_pointer\"  routerLink=\"/pages/geofence/edit\"><i class=\"fas fa-pencil-alt\"></i></a><a href=\"javascript:void()\" class=\"ml-2\"><i class=\"fas fa-trash\"></i></a></span></li>\n                        \n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-3\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <ul class=\"mb-0\">\n                            <li class=\"d-flex\">Geo Fencing <span class=\"ml-auto\"><a class=\"cursor_pointer\" routerLink=\"/pages/geofence/edit\"><i class=\"fas fa-pencil-alt\"></i></a><a href=\"javascript:void()\" class=\"ml-2\"><i class=\"fas fa-trash\"></i></a></span></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-3\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <ul class=\"mb-0\">\n                            <li class=\"d-flex\">Geo Fencing <span class=\"ml-auto\"><a class=\"cursor_pointer\" routerLink=\"/pages/geofence/edit\"><i class=\"fas fa-pencil-alt\"></i></a><a href=\"javascript:void()\" class=\"ml-2\"><i class=\"fas fa-trash\"></i></a></span></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #content3 let-modal>\n    <div class=\"modal-header p-2\">\n        <h4 class=\"modal-title\">Add Geofence</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\"><span aria-hidden=\"true\">&times;</span></button>\n    </div>\n    <div class=\"modal-body\">\n        <form action=\"\">\n            <div class=\"form-group\">\n                <label>Name</label>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Add Geofence Name\">\n            </div>\n        </form>\n        <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\" [styles]=\"styles\" #map2></agm-map>\n        <div class=\"col-12\"><button class=\"btn theme_btn mt-3\">Save</button></div>\n    </div>\n</ng-template>\n\n<ng-template #content4 let-modal>\n    <div class=\"modal-header p-2\">\n        <h4 class=\"modal-title\">Edit Geofence</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n    </div>\n    <div class=\"modal-body\">\n        <form action=\"\">\n            <div class=\"form-group\">\n                <label>Name</label>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Edit Geofence Name\">\n            </div>\n        </form>\n        <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\" [styles]=\"styles\" #map2></agm-map>\n        <div class=\"col-12\"><button class=\"btn theme_btn mt-3\">Save</button></div>\n    </div>\n</ng-template>\n"],"sourceRoot":"webpack:///"}