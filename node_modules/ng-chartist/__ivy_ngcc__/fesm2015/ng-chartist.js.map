{"version":3,"file":"ng-chartist.js","sources":["ng:/ng-chartist/lib/chartist.component.ts","ng:/ng-chartist/lib/chartist.module.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\n\nimport * as Chartist from 'chartist';\nimport { IChartistBase, IChartOptions } from 'chartist';\n\n/**\n * Possible chart types\n */\nexport type ChartType = 'Pie' | 'Bar' | 'Line';\n\nexport type ChartInterfaces =\n  | Chartist.IChartistPieChart\n  | Chartist.IChartistBarChart\n  | Chartist.IChartistLineChart;\nexport type ChartOptions =\n  | Chartist.IBarChartOptions\n  | Chartist.ILineChartOptions\n  | Chartist.IPieChartOptions;\nexport type ResponsiveOptionTuple = Chartist.IResponsiveOptionTuple<\n  ChartOptions\n>;\nexport type ResponsiveOptions = ResponsiveOptionTuple[];\n\n/**\n * Represents chart events.\n */\nexport interface ChartEvent {\n  [eventName: string]: (data: any) => void;\n}\n\n/**\n * Angular component which renders Chartist chart.\n *\n * See Chartist {@link https://gionkunz.github.io/chartist-js/api-documentation.html API documentation} and\n * {@link https://gionkunz.github.io/chartist-js/examples.html examples} for more information.\n * ### Example\n ```html\n <x-chartist\n   [type]=\"type\"\n   [data]=\"data\"\n   [options]=\"options\"\n   [responsiveOptions]=\"responsiveOptions\"\n   [events]=\"events\"\n ></x-chartist>\n ```\n */\n@Component({\n  selector: 'x-chartist',\n  template: '',\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n    `\n  ]\n})\nexport class ChartistComponent implements OnInit, OnChanges, OnDestroy {\n  /**\n   * The data object that needs to consist of a labels and a series array.\n   */\n  @Input()\n  data: Chartist.IChartistData;\n\n  /**\n   * Chartist chart type.\n   */\n  @Input()\n  type: ChartType;\n\n  /**\n   * The options object which overrides the default options.\n   */\n  @Input()\n  options: Chartist.IChartOptions;\n\n  /**\n   * An array of responsive option arrays which are a media query and options object pair: [[mediaQueryString, optionsObject],[more...]]\n   */\n  @Input()\n  responsiveOptions: ResponsiveOptions;\n\n  /**\n   * Events object where keys are Chartist event names and values are event handler functions.\n   *\n   * Supported events are: draw, optionsChanged, data, animationBegin, animationEnd, created.\n   *\n   * Event handler function will receive a data argument which contains event data.\n   */\n  @Input()\n  events: ChartEvent;\n\n  /**\n   * Event emitted after Chartist chart has been initialized.\n   *\n   * Event handler function will receive chart instance argument.\n   */\n  @Output()\n  initialized = new EventEmitter<ChartInterfaces>();\n\n  /** @ignore */\n  private chart: ChartInterfaces;\n\n  /** @ignore */\n  constructor(private elementRef: ElementRef) {}\n\n  /** @ignore */\n  ngOnInit(): void {\n    if (this.type && this.data) {\n      this.renderChart();\n    }\n  }\n\n  /** @ignore */\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update(changes);\n  }\n\n  /** @ignore */\n  ngOnDestroy(): void {\n    if (this.chart) {\n      this.chart.detach();\n      this.chart = null;\n    }\n  }\n\n  /** @ignore */\n  private renderChart() {\n    const nativeElement = this.elementRef.nativeElement;\n\n    if (!(this.type in Chartist)) {\n      throw new Error(`${this.type} is not a valid chart type`);\n    }\n\n    this.chart = (<any>Chartist)[this.type](\n      nativeElement,\n      this.data,\n      this.options,\n      this.responsiveOptions\n    );\n\n    if (this.events) {\n      this.bindEvents();\n    }\n\n    this.initialized.emit(this.chart);\n  }\n\n  /** @ignore */\n  private update(changes: SimpleChanges): void {\n    if (!this.type || !this.data) {\n      return;\n    }\n\n    if (!this.chart || 'type' in changes) {\n      this.renderChart();\n    } else if (changes.data || changes.options) {\n      (<IChartistBase<IChartOptions>>this.chart).update(\n        this.data,\n        this.options\n      );\n    }\n  }\n\n  /** @ignore */\n  private bindEvents(): void {\n    for (const event of Object.keys(this.events)) {\n      this.chart.on(event, this.events[event]);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ChartistComponent } from './chartist.component';\n\n@NgModule({\n  declarations: [ChartistComponent],\n  imports: [],\n  exports: [ChartistComponent]\n})\nexport class ChartistModule {}\n"]}