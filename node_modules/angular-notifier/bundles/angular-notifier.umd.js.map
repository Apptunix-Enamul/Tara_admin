{"version":3,"file":"angular-notifier.umd.js","sources":["ng:/angular-notifier/lib/models/notifier-notification.model.ts","ng:/angular-notifier/lib/services/notifier-queue.service.ts","ng:/angular-notifier/lib/models/notifier-config.model.ts","ng:/angular-notifier/lib/notifier.tokens.ts","ng:/angular-notifier/lib/services/notifier.service.ts","ng:/angular-notifier/lib/components/notifier-container.component.ts","ng:/angular-notifier/lib/animation-presets/fade.animation-preset.ts","ng:/angular-notifier/lib/animation-presets/slide.animation-preset.ts","ng:/angular-notifier/lib/services/notifier-animation.service.ts","ng:/angular-notifier/lib/services/notifier-timer.service.ts","ng:/angular-notifier/lib/components/notifier-notification.component.ts","ng:/angular-notifier/lib/notifier.module.ts"],"names":["Subject","Injectable","InjectionToken","Inject","Component","ChangeDetectionStrategy","ChangeDetectorRef","EventEmitter","ElementRef","Renderer2","Input","Output","NgModule","CommonModule"],"mappings":"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","sourcesContent":["import { NotifierNotificationComponent } from '../components/notifier-notification.component';\nimport { TemplateRef } from '@angular/core';\n\n/**\n * Notification\n *\n * This class describes the structure of a notifiction, including all information it needs to live, and everyone else needs to work with it.\n */\nexport class NotifierNotification {\n\t/**\n\t * Unique notification ID, can be set manually to control the notification from outside later on\n\t */\n\tpublic id: string;\n\n\t/**\n\t * Notification type, will be used for constructing an appropriate class name\n\t */\n\tpublic type: string;\n\n\t/**\n\t * Notification message\n\t */\n\tpublic message: string;\n\n\t/**\n\t * The template to customize\n\t * the appearance of the notification\n\t */\n\tpublic template?: TemplateRef<any> = null;\n\n\t/**\n\t * Component reference of this notification, created and set during creation time\n\t */\n\tpublic component: NotifierNotificationComponent;\n\n\t/**\n\t * Constructor\n\t *\n\t * @param options Notifier options\n\t */\n\tpublic constructor(options: NotifierNotificationOptions) {\n\t\tObject.assign(this, options);\n\n\t\t// If not set manually, we have to create a unique notification ID by ourselves. The ID generation relies on the current browser\n\t\t// datetime in ms, in praticular the moment this notification gets constructed. Concurrency, and thus two IDs being the exact same,\n\t\t// is not possible due to the action queue concept.\n\t\tif (options.id === undefined) {\n\t\t\tthis.id = `ID_${new Date().getTime()}`;\n\t\t}\n\t}\n}\n\n/**\n * Notifiction options\n *\n * This interface describes which information are needed to create a new notification, or in other words, which information the external API\n * call must provide.\n */\nexport interface NotifierNotificationOptions {\n\t/**\n\t * Notification ID, optional\n\t */\n\tid?: string;\n\n\t/**\n\t * Notification type\n\t */\n\ttype: string;\n\n\t/**\n\t * Notificatin message\n\t */\n\tmessage: string;\n\n\t/**\n\t * The template to customize\n\t * the appearance of the notification\n\t */\n\ttemplate?: TemplateRef<any>;\n}\n","import { Injectable } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { NotifierAction } from '../models/notifier-action.model';\n\n/**\n * Notifier queue service\n *\n * In general, API calls don't get processed right away. Instead, we have to queue them up in order to prevent simultanious API calls\n * interfering with each other. This, at least in theory, is possible at any time. In particular, animations - which potentially overlap -\n * can cause changes in JS classes as well as affect the DOM. Therefore, the queue service takes all actions, puts them in a queue, and\n * processes them at the right time (which is when the previous action has been processed successfully).\n *\n * Technical sidenote:\n * An action looks pretty similar to the ones within the Flux / Redux pattern.\n */\n@Injectable()\nexport class NotifierQueueService {\n\n\t/**\n\t * Stream of actions, subscribable from outside\n\t */\n\tpublic readonly actionStream: Subject<NotifierAction>;\n\n\t/**\n\t * Queue of actions\n\t */\n\tprivate actionQueue: Array<NotifierAction>;\n\n\t/**\n\t * Flag, true if some action is currently in progress\n\t */\n\tprivate isActionInProgress: boolean;\n\n\t/**\n\t * Constructor\n\t */\n\tpublic constructor() {\n\t\tthis.actionStream = new Subject<NotifierAction>();\n\t\tthis.actionQueue = [];\n\t\tthis.isActionInProgress = false;\n\t}\n\n\t/**\n\t * Push a new action to the queue, and try to run it\n\t *\n\t * @param action Action object\n\t */\n\tpublic push( action: NotifierAction ): void {\n\t\tthis.actionQueue.push( action );\n\t\tthis.tryToRunNextAction();\n\t}\n\n\t/**\n\t * Continue with the next action (called when the current action is finished)\n\t */\n\tpublic continue(): void {\n\t\tthis.isActionInProgress = false;\n\t\tthis.tryToRunNextAction();\n\t}\n\n\t/**\n\t * Try to run the next action in the queue; we skip if there already is some action in progress, or if there is no action left\n\t */\n\tprivate tryToRunNextAction(): void {\n\t\tif ( this.isActionInProgress || this.actionQueue.length === 0 ) {\n\t\t\treturn; // Skip (the queue can now go drink a coffee as it has nothing to do anymore)\n\t\t}\n\t\tthis.isActionInProgress = true;\n\t\tthis.actionStream.next( this.actionQueue.shift() ); // Push next action to the stream, and remove the current action from the queue\n\t}\n\n}\n","/**\n * Notifier options\n */\nexport interface NotifierOptions {\n\tanimations?: {\n\t\tenabled?: boolean;\n\t\thide?: {\n\t\t\teasing?: string;\n\t\t\toffset?: number | false;\n\t\t\tpreset?: string;\n\t\t\tspeed?: number;\n\t\t};\n\t\toverlap?: number | false;\n\t\tshift?: {\n\t\t\teasing?: string;\n\t\t\tspeed?: number;\n\t\t};\n\t\tshow?: {\n\t\t\teasing?: string;\n\t\t\tpreset?: string;\n\t\t\tspeed?: number;\n\t\t};\n\t};\n\tbehaviour?: {\n\t\tautoHide?: number | false;\n\t\tonClick?: 'hide' | false;\n\t\tonMouseover?: 'pauseAutoHide' | 'resetAutoHide' | false;\n\t\tshowDismissButton?: boolean;\n\t\tstacking?: number | false;\n\t};\n\tposition?: {\n\t\thorizontal?: {\n\t\t\tdistance?: number;\n\t\t\tposition?: 'left' | 'middle' | 'right';\n\t\t};\n\t\tvertical?: {\n\t\t\tdistance?: number;\n\t\t\tgap?: number;\n\t\t\tposition?: 'top' | 'bottom';\n\t\t};\n\t};\n\ttheme?: string;\n}\n\n/**\n * Notifier configuration\n *\n * The notifier configuration defines what notifications look like, how they behave, and how they get animated. It is a global\n * configuration, which means that it only can be set once (at the beginning), and cannot be changed afterwards. Aligning to the world of\n * Angular, this configuration can be provided in the root app module - alternatively, a meaningful default configuration will be used.\n */\nexport class NotifierConfig implements NotifierOptions {\n\n\t/**\n\t * Customize animations\n\t */\n\tpublic animations: {\n\t\tenabled: boolean;\n\t\thide: {\n\t\t\teasing: string;\n\t\t\toffset: number | false;\n\t\t\tpreset: string;\n\t\t\tspeed: number;\n\t\t};\n\t\toverlap: number | false;\n\t\tshift: {\n\t\t\teasing: string;\n\t\t\tspeed: number;\n\t\t};\n\t\tshow: {\n\t\t\teasing: string;\n\t\t\tpreset: string;\n\t\t\tspeed: number;\n\t\t};\n\t};\n\n\t/**\n\t * Customize behaviour\n\t */\n\tpublic behaviour: {\n\t\tautoHide: number | false;\n\t\tonClick: 'hide' | false;\n\t\tonMouseover: 'pauseAutoHide' | 'resetAutoHide' | false;\n\t\tshowDismissButton: boolean;\n\t\tstacking: number | false;\n\t};\n\n\t/**\n\t * Customize positioning\n\t */\n\tpublic position: {\n\t\thorizontal: {\n\t\t\tdistance: number;\n\t\t\tposition: 'left' | 'middle' | 'right';\n\t\t};\n\t\tvertical: {\n\t\t\tdistance: number;\n\t\t\tgap: number;\n\t\t\tposition: 'top' | 'bottom';\n\t\t};\n\t};\n\n\t/**\n\t * Customize theming\n\t */\n\tpublic theme: string;\n\n\t/**\n\t * Constructor\n\t *\n\t * @param [customOptions={}] Custom notifier options, optional\n\t */\n\tpublic constructor( customOptions: NotifierOptions = {} ) {\n\n\t\t// Set default values\n\t\tthis.animations = {\n\t\t\tenabled: true,\n\t\t\thide: {\n\t\t\t\teasing: 'ease',\n\t\t\t\toffset: 50,\n\t\t\t\tpreset: 'fade',\n\t\t\t\tspeed: 300\n\t\t\t},\n\t\t\toverlap: 150,\n\t\t\tshift: {\n\t\t\t\teasing: 'ease',\n\t\t\t\tspeed: 300\n\t\t\t},\n\t\t\tshow: {\n\t\t\t\teasing: 'ease',\n\t\t\t\tpreset: 'slide',\n\t\t\t\tspeed: 300\n\t\t\t}\n\t\t};\n\t\tthis.behaviour = {\n\t\t\tautoHide: 7000,\n\t\t\tonClick: false,\n\t\t\tonMouseover: 'pauseAutoHide',\n\t\t\tshowDismissButton: true,\n\t\t\tstacking: 4\n\t\t};\n\t\tthis.position = {\n\t\t\thorizontal: {\n\t\t\t\tdistance: 12,\n\t\t\t\tposition: 'left'\n\t\t\t},\n\t\t\tvertical: {\n\t\t\t\tdistance: 12,\n\t\t\t\tgap: 10,\n\t\t\t\tposition: 'bottom'\n\t\t\t}\n\t\t};\n\t\tthis.theme = 'material';\n\n\t\t// The following merges the custom options into the notifier config, respecting the already set default values\n\t\t// This linear, more explicit and code-sizy workflow is preferred here over a recursive one (because we know the object structure)\n\t\t// Technical sidenote: Objects are merged, other types of values simply overwritten / copied\n\t\tif ( customOptions.theme !== undefined ) {\n\t\t\tthis.theme = customOptions.theme;\n\t\t}\n\t\tif ( customOptions.animations !== undefined ) {\n\t\t\tif ( customOptions.animations.enabled !== undefined ) {\n\t\t\t\tthis.animations.enabled = customOptions.animations.enabled;\n\t\t\t}\n\t\t\tif ( customOptions.animations.overlap !== undefined ) {\n\t\t\t\tthis.animations.overlap = customOptions.animations.overlap;\n\t\t\t}\n\t\t\tif ( customOptions.animations.hide !== undefined ) {\n\t\t\t\tObject.assign( this.animations.hide, customOptions.animations.hide );\n\t\t\t}\n\t\t\tif ( customOptions.animations.shift !== undefined ) {\n\t\t\t\tObject.assign( this.animations.shift, customOptions.animations.shift );\n\t\t\t}\n\t\t\tif ( customOptions.animations.show !== undefined ) {\n\t\t\t\tObject.assign( this.animations.show, customOptions.animations.show );\n\t\t\t}\n\t\t}\n\t\tif ( customOptions.behaviour !== undefined ) {\n\t\t\tObject.assign( this.behaviour, customOptions.behaviour );\n\t\t}\n\t\tif ( customOptions.position !== undefined ) {\n\t\t\tif ( customOptions.position.horizontal !== undefined ) {\n\t\t\t\tObject.assign( this.position.horizontal, customOptions.position.horizontal );\n\t\t\t}\n\t\t\tif ( customOptions.position.vertical !== undefined ) {\n\t\t\t\tObject.assign( this.position.vertical, customOptions.position.vertical );\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n","import { NotifierConfig, NotifierOptions } from './models/notifier-config.model';\nimport { InjectionToken } from '@angular/core';\n\n// tslint:disable variable-name\n\n/**\n * Injection Token for notifier options\n */\nexport const NotifierOptionsToken: InjectionToken<NotifierOptions>\n\t= new InjectionToken<NotifierOptions>( '[angular-notifier] Notifier Options' );\n\n/**\n * Injection Token for notifier configuration\n */\nexport const NotifierConfigToken: InjectionToken<NotifierConfig>\n\t= new InjectionToken<NotifierConfig>( '[anuglar-notifier] Notifier Config' );\n\n// tslint:enable variable-name\n","import { Inject, Injectable, forwardRef } from '@angular/core';\n\nimport { NotifierConfig } from '../models/notifier-config.model';\nimport { NotifierNotificationOptions } from '../models/notifier-notification.model';\nimport { NotifierQueueService } from './notifier-queue.service';\nimport { NotifierConfigToken } from '../notifier.tokens';\n\n/**\n * Notifier service\n *\n * This service provides access to the public notifier API. Once injected into a component, directive, pipe, service, or any other building\n * block of an applications, it can be used to show new notifications, and hide existing ones. Internally, it transforms API calls into\n * actions, which then get thrown into the action queue - eventually being processed at the right moment.\n */\n@Injectable()\nexport class NotifierService {\n\n\t/**\n\t * Notifier queue service\n\t */\n\tprivate readonly queueService: NotifierQueueService;\n\n\t/**\n\t * Notifier configuration\n\t */\n\tprivate readonly config: NotifierConfig;\n\n\t/**\n\t * Constructor\n\t *\n\t * @param notifierQueueService Notifier queue service\n\t * @param config               Notifier configuration, optionally injected as a dependency\n\t */\n\tpublic constructor(\n\t\tnotifierQueueService: NotifierQueueService,\n\t\t@Inject(NotifierConfigToken) config: NotifierConfig\n\t) {\n\t\tthis.queueService = notifierQueueService;\n\t\tthis.config = config;\n\t}\n\n\t/**\n\t * Get the notifier configuration\n\t *\n\t * @returns Notifier configuration\n\t */\n\tpublic getConfig(): NotifierConfig {\n\t\treturn this.config;\n\t}\n\n\t/**\n\t * API: Show a new notification\n\t *\n\t * @param notificationOptions Notification options\n\t */\n\tpublic show( notificationOptions: NotifierNotificationOptions ): void {\n\t\tthis.queueService.push( {\n\t\t\tpayload: notificationOptions,\n\t\t\ttype: 'SHOW'\n\t\t} );\n\t}\n\n\t/**\n\t * API: Hide a specific notification, given its ID\n\t *\n\t * @param notificationId ID of the notification to hide\n\t */\n\tpublic hide( notificationId: string ): void {\n\t\tthis.queueService.push( {\n\t\t\tpayload: notificationId,\n\t\t\ttype: 'HIDE'\n\t\t} );\n\t}\n\n\t/**\n\t * API: Hide the newest notification\n\t */\n\tpublic hideNewest(): void {\n\t\tthis.queueService.push( {\n\t\t\ttype: 'HIDE_NEWEST'\n\t\t} );\n\t}\n\n\t/**\n\t * API: Hide the oldest notification\n\t */\n\tpublic hideOldest(): void {\n\t\tthis.queueService.push( {\n\t\t\ttype: 'HIDE_OLDEST'\n\t\t} );\n\t}\n\n\t/**\n\t * API: Hide all notifications at once\n\t */\n\tpublic hideAll(): void {\n\t\tthis.queueService.push( {\n\t\t\ttype: 'HIDE_ALL'\n\t\t} );\n\t}\n\n\t/**\n\t * API: Shortcut for showing a new notification\n\t *\n\t * @param type             Type of the notification\n\t * @param message          Message of the notification\n\t * @param [notificationId] Unique ID for the notification (optional)\n\t */\n\tpublic notify( type: string, message: string, notificationId?: string ): void {\n\t\tlet notificationOptions: NotifierNotificationOptions = {\n\t\t\tmessage,\n\t\t\ttype\n\t\t};\n\t\tif ( notificationId !== undefined ) {\n\t\t\tnotificationOptions.id = notificationId;\n\t\t}\n\t\tthis.show( notificationOptions );\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { NotifierAction } from '../models/notifier-action.model';\nimport { NotifierConfig } from '../models/notifier-config.model';\nimport { NotifierNotification } from '../models/notifier-notification.model';\nimport { NotifierQueueService } from '../services/notifier-queue.service';\nimport { NotifierService } from '../services/notifier.service';\nimport { NotifierNotificationComponent } from './notifier-notification.component';\n\n/**\n * Notifier container component\n * ----------------------------\n * This component acts as a wrapper for all notification components; consequently, it is responsible for creating a new notification\n * component and removing an existing notification component. Being more precicely, it also handles side effects of those actions, such as\n * shifting or even completely removing other notifications as well. Overall, this components handles actions coming from the queue service\n * by subscribing to its action stream.\n *\n * Technical sidenote:\n * This component has to be used somewhere in an application to work; it will not inject and create itself automatically, primarily in order\n * to not break the Angular AoT compilation. Moreover, this component (and also the notification components) set their change detection\n * strategy onPush, which means that we handle change detection manually in order to get the best performance. (#perfmatters)\n */\n@Component( {\n\tchangeDetection: ChangeDetectionStrategy.OnPush, // (#perfmatters)\n\thost: {\n\t\tclass: 'notifier__container'\n\t},\n\tselector: 'notifier-container',\n\ttemplateUrl: './notifier-container.component.html'\n} )\nexport class NotifierContainerComponent implements OnDestroy {\n\n\t/**\n\t * List of currently somewhat active notifications\n\t */\n\tpublic notifications: Array<NotifierNotification>;\n\n\t/**\n\t * Change detector\n\t */\n\tprivate readonly changeDetector: ChangeDetectorRef;\n\n\t/**\n\t * Notifier queue service\n\t */\n\tprivate readonly queueService: NotifierQueueService;\n\n\t/**\n\t * Notifier configuration\n\t */\n\tprivate readonly config: NotifierConfig;\n\n\t/**\n\t * Queue service observable subscription (saved for cleanup)\n\t */\n\tprivate queueServiceSubscription: Subscription;\n\n\t/**\n\t * Promise resolve function reference, temporarily used while the notification child component gets created\n\t */\n\tprivate tempPromiseResolver: () => void;\n\n\t/**\n\t * Constructor\n\t *\n\t * @param changeDetector       Change detector, used for manually triggering change detection runs\n\t * @param notifierQueueService Notifier queue service\n\t * @param notifierService      Notifier service\n\t */\n\tpublic constructor( changeDetector: ChangeDetectorRef, notifierQueueService: NotifierQueueService, notifierService: NotifierService ) {\n\t\tthis.changeDetector = changeDetector;\n\t\tthis.queueService = notifierQueueService;\n\t\tthis.config = notifierService.getConfig();\n\t\tthis.notifications = [];\n\n\t\t// Connects this component up to the action queue, then handle incoming actions\n\t\tthis.queueServiceSubscription = this.queueService.actionStream.subscribe( ( action: NotifierAction ) => {\n\t\t\tthis.handleAction( action ).then( () => {\n\t\t\t\tthis.queueService.continue();\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Component destroyment lifecycle hook, cleans up the observable subsciption\n\t */\n\tpublic ngOnDestroy(): void {\n\t\tif ( this.queueServiceSubscription ) {\n\t\t\tthis.queueServiceSubscription.unsubscribe();\n\t\t}\n\t}\n\n\t/**\n\t * Notification identifier, used as the ngFor trackby function\n\t *\n\t * @param   index        Index\n\t * @param   notification Notifier notification\n\t * @returns Notification ID as the unique identnfier\n\t */\n\tpublic identifyNotification( index: number, notification: NotifierNotification ): string {\n\t\treturn notification.id;\n\t}\n\n\t/**\n\t * Event handler, handles clicks on notification dismiss buttons\n\t *\n\t * @param notificationId ID of the notification to dismiss\n\t */\n\tpublic onNotificationDismiss( notificationId: string ): void {\n\t\tthis.queueService.push( {\n\t\t\tpayload: notificationId,\n\t\t\ttype: 'HIDE'\n\t\t} );\n\t}\n\n\t/**\n\t * Event handler, handles notification ready events\n\t *\n\t * @param notificationComponent Notification component reference\n\t */\n\tpublic onNotificationReady( notificationComponent: NotifierNotificationComponent ): void {\n\t\tlet currentNotification: NotifierNotification = this.notifications[ this.notifications.length - 1 ]; // Get the latest notification\n\t\tcurrentNotification.component = notificationComponent; // Save the new omponent reference\n\t\tthis.continueHandleShowAction( currentNotification ); // Continue with handling the show action\n\t}\n\n\t/**\n\t * Handle incoming actions by mapping action types to methods, and then running them\n\t *\n\t * @param   action Action object\n\t * @returns Promise, resolved when done\n\t */\n\tprivate handleAction( action: NotifierAction ): Promise<undefined> {\n\t\tswitch ( action.type ) { // TODO: Maybe a map (actionType -> class method) is a cleaner solution here?\n\t\t\tcase 'SHOW':\n\t\t\t\treturn this.handleShowAction( action );\n\t\t\tcase 'HIDE':\n\t\t\t\treturn this.handleHideAction( action );\n\t\t\tcase 'HIDE_OLDEST':\n\t\t\t\treturn this.handleHideOldestAction( action );\n\t\t\tcase 'HIDE_NEWEST':\n\t\t\t\treturn this.handleHideNewestAction( action );\n\t\t\tcase 'HIDE_ALL':\n\t\t\t\treturn this.handleHideAllAction( action );\n\t\t\tdefault:\n\t\t\t\treturn new Promise<undefined>( ( resolve: () => void, reject: () => void ) => {\n\t\t\t\t\tresolve(); // Ignore unknown action types\n\t\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Show a new notification\n\t *\n\t * We simply add the notification to the list, and then wait until its properly initialized / created / rendered.\n\t *\n\t * @param   action Action object\n\t * @returns Promise, resolved when done\n\t */\n\tprivate handleShowAction( action: NotifierAction ): Promise<undefined> {\n\t\treturn new Promise<undefined>( ( resolve: () => void, reject: () => void ) => {\n\t\t\tthis.tempPromiseResolver = resolve; // Save the promise resolve function so that it can be called later on by another method\n\t\t\tthis.addNotificationToList( new NotifierNotification( action.payload ) );\n\t\t} );\n\t}\n\n\t/**\n\t * Continue to show a new notification (after the notification components is initialized / created / rendered).\n\t *\n\t * If this is the first (and thus only) notification, we can simply show it. Otherwhise, if stacking is disabled (or a low value), we\n\t * switch out notifications, in particular we hide the existing one, and then show our new one. Yet, if stacking is enabled, we first\n\t * shift all older notifications, and then show our new notification. In addition, if there are too many notification on the screen,\n\t * we hide the oldest one first. Furthermore, if configured, animation overlapping is applied.\n\t *\n\t * @param notification New notification to show\n\t */\n\tprivate continueHandleShowAction( notification: NotifierNotification ): void {\n\n\t\t// First (which means only one) notification in the list?\n\t\tconst numberOfNotifications: number = this.notifications.length;\n\t\tif ( numberOfNotifications === 1 ) {\n\t\t\tnotification.component.show().then( this.tempPromiseResolver ); // Done\n\t\t} else {\n\n\t\t\tconst implicitStackingLimit: number = 2;\n\n\t\t\t// Stacking enabled? (stacking value below 2 means stacking is disabled)\n\t\t\tif ( this.config.behaviour.stacking === false || this.config.behaviour.stacking < implicitStackingLimit ) {\n\t\t\t\tthis.notifications[ 0 ].component.hide().then( () => {\n\t\t\t\t\tthis.removeNotificationFromList( this.notifications[ 0 ] );\n\t\t\t\t\tnotification.component.show().then( this.tempPromiseResolver ); // Done\n\t\t\t\t} );\n\t\t\t} else {\n\n\t\t\t\tconst stepPromises: Array<Promise<undefined>> = [];\n\n\t\t\t\t// Are there now too many notifications?\n\t\t\t\tif ( numberOfNotifications > this.config.behaviour.stacking ) {\n\n\t\t\t\t\tconst oldNotifications: Array<NotifierNotification> = this.notifications.slice( 1, numberOfNotifications - 1 );\n\n\t\t\t\t\t// Are animations enabled?\n\t\t\t\t\tif ( this.config.animations.enabled ) {\n\n\t\t\t\t\t\t// Is animation overlap enabled?\n\t\t\t\t\t\tif ( this.config.animations.overlap !== false && this.config.animations.overlap > 0 ) {\n\t\t\t\t\t\t\tstepPromises.push( this.notifications[ 0 ].component.hide() );\n\t\t\t\t\t\t\tsetTimeout( () => {\n\t\t\t\t\t\t\t\tstepPromises.push( this.shiftNotifications( oldNotifications, notification.component.getHeight(), true ) );\n\t\t\t\t\t\t\t}, this.config.animations.hide.speed - this.config.animations.overlap );\n\t\t\t\t\t\t\tsetTimeout( () => {\n\t\t\t\t\t\t\t\tstepPromises.push( notification.component.show() );\n\t\t\t\t\t\t\t}, this.config.animations.hide.speed + this.config.animations.shift.speed - this.config.animations.overlap );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstepPromises.push( new Promise<undefined>( ( resolve: () => void, reject: () => void ) => {\n\t\t\t\t\t\t\t\tthis.notifications[ 0 ].component.hide().then( () => {\n\t\t\t\t\t\t\t\t\tthis.shiftNotifications( oldNotifications, notification.component.getHeight(), true ).then( () => {\n\t\t\t\t\t\t\t\t\t\tnotification.component.show().then( resolve );\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} ) );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstepPromises.push( this.notifications[ 0 ].component.hide() );\n\t\t\t\t\t\tstepPromises.push( this.shiftNotifications( oldNotifications, notification.component.getHeight(), true ) );\n\t\t\t\t\t\tstepPromises.push( notification.component.show() );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst oldNotifications: Array<NotifierNotification> = this.notifications.slice( 0, numberOfNotifications - 1 );\n\n\t\t\t\t\t// Are animations enabled?\n\t\t\t\t\tif ( this.config.animations.enabled ) {\n\n\t\t\t\t\t\t// Is animation overlap enabled?\n\t\t\t\t\t\tif ( this.config.animations.overlap !== false && this.config.animations.overlap > 0 ) {\n\t\t\t\t\t\t\tstepPromises.push( this.shiftNotifications( oldNotifications, notification.component.getHeight(), true ) );\n\t\t\t\t\t\t\tsetTimeout( () => {\n\t\t\t\t\t\t\t\tstepPromises.push( notification.component.show() );\n\t\t\t\t\t\t\t}, this.config.animations.shift.speed - this.config.animations.overlap );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstepPromises.push( new Promise<undefined>( ( resolve: () => void, reject: () => void ) => {\n\t\t\t\t\t\t\t\tthis.shiftNotifications( oldNotifications, notification.component.getHeight(), true ).then( () => {\n\t\t\t\t\t\t\t\t\tnotification.component.show().then( resolve );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} ) );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstepPromises.push( this.shiftNotifications( oldNotifications, notification.component.getHeight(), true ) );\n\t\t\t\t\t\tstepPromises.push( notification.component.show() );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tPromise.all( stepPromises ).then( () => {\n\t\t\t\t\tif ( numberOfNotifications > this.config.behaviour.stacking ) {\n\t\t\t\t\t\tthis.removeNotificationFromList( this.notifications[ 0 ] );\n\t\t\t\t\t}\n\t\t\t\t\tthis.tempPromiseResolver();\n\t\t\t\t} ); // Done\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Hide an existing notification\n\t *\n\t * Fist, we skip everything if there are no notifications at all, or the given notification does not exist. Then, we hide the given\n\t * notification. If there exist older notifications, we then shift them around to fill the gap. Once both hiding the given notification\n\t * and shifting the older notificaitons is done, the given notification gets finally removed (from the DOM).\n\t *\n\t * @param   action Action object, payload contains the notification ID\n\t * @returns Promise, resolved when done\n\t */\n\tprivate handleHideAction( action: NotifierAction ): Promise<undefined> {\n\t\treturn new Promise<undefined>( ( resolve: () => void, reject: () => void ) => {\n\n\t\t\tconst stepPromises: Array<Promise<undefined>> = [];\n\n\t\t\t// Does the notification exist / are there even any notifications? (let's prevent accidential errors)\n\t\t\tconst notification: NotifierNotification | undefined = this.findNotificationById( action.payload );\n\t\t\tif ( notification === undefined ) {\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get older notifications\n\t\t\tconst notificationIndex: number | undefined = this.findNotificationIndexById( action.payload );\n\t\t\tif ( notificationIndex === undefined ) {\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst oldNotifications: Array<NotifierNotification> = this.notifications.slice( 0, notificationIndex );\n\n\t\t\t// Do older notifications exist, and thus do we need to shift other notifications as a consequence?\n\t\t\tif ( oldNotifications.length > 0 ) {\n\n\t\t\t\t// Are animations enabled?\n\t\t\t\tif ( this.config.animations.enabled && this.config.animations.hide.speed > 0 ) {\n\n\t\t\t\t\t// Is animation overlap enabled?\n\t\t\t\t\tif ( this.config.animations.overlap !== false && this.config.animations.overlap > 0 ) {\n\t\t\t\t\t\tstepPromises.push( notification.component.hide() );\n\t\t\t\t\t\tsetTimeout( () => {\n\t\t\t\t\t\t\tstepPromises.push( this.shiftNotifications( oldNotifications, notification.component.getHeight(), false ) );\n\t\t\t\t\t\t}, this.config.animations.hide.speed - this.config.animations.overlap );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnotification.component.hide().then( () => {\n\t\t\t\t\t\t\tstepPromises.push( this.shiftNotifications( oldNotifications, notification.component.getHeight(), false ) );\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstepPromises.push( notification.component.hide() );\n\t\t\t\t\tstepPromises.push( this.shiftNotifications( oldNotifications, notification.component.getHeight(), false ) );\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstepPromises.push( notification.component.hide() );\n\n\t\t\t}\n\n\t\t\t// Wait until both hiding and shifting is done, then remove the notification from the list\n\t\t\tPromise.all( stepPromises ).then( () => {\n\t\t\t\tthis.removeNotificationFromList( notification );\n\t\t\t\tresolve(); // Done\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Hide the oldest notification (bridge to handleHideAction)\n\t *\n\t * @param   action Action object\n\t * @returns Promise, resolved when done\n\t */\n\tprivate handleHideOldestAction( action: NotifierAction ): Promise<undefined> {\n\n\t\t// Are there any notifications? (prevent accidential errors)\n\t\tif ( this.notifications.length === 0 ) {\n\t\t\treturn new Promise<undefined>( ( resolve: () => void, reject: () => void ) => {\n\t\t\t\tresolve();\n\t\t\t} ); // Done\n\t\t} else {\n\t\t\taction.payload = this.notifications[ 0 ].id;\n\t\t\treturn this.handleHideAction( action );\n\t\t}\n\n\t}\n\n\t/**\n\t * Hide the newest notification (bridge to handleHideAction)\n\t *\n\t * @param   action Action object\n\t * @returns Promise, resolved when done\n\t */\n\tprivate handleHideNewestAction( action: NotifierAction ): Promise<undefined> {\n\n\t\t// Are there any notifications? (prevent accidential errors)\n\t\tif ( this.notifications.length === 0 ) {\n\t\t\treturn new Promise<undefined>( ( resolve: () => void, reject: () => void ) => {\n\t\t\t\tresolve();\n\t\t\t} ); // Done\n\t\t} else {\n\t\t\taction.payload = this.notifications[ this.notifications.length - 1 ].id;\n\t\t\treturn this.handleHideAction( action );\n\t\t}\n\n\t}\n\n\t/**\n\t * Hide all notifications at once\n\t *\n\t * @param   action Action object\n\t * @returns Promise, resolved when done\n\t */\n\tprivate handleHideAllAction( action: NotifierAction ): Promise<undefined> {\n\t\treturn new Promise<undefined>( ( resolve: () => void, reject: () => void ) => {\n\n\t\t\t// Are there any notifications? (prevent accidential errors)\n\t\t\tconst numberOfNotifications: number = this.notifications.length;\n\t\t\tif ( numberOfNotifications === 0 ) {\n\t\t\t\tresolve(); // Done\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Are animations enabled?\n\t\t\tif ( this.config.animations.enabled && this.config.animations.hide.speed > 0 && this.config.animations.hide.offset !== false &&\n\t\t\t\tthis.config.animations.hide.offset > 0 ) {\n\n\t\t\t\tfor ( let i: number = numberOfNotifications - 1; i >= 0; i-- ) {\n\t\t\t\t\tconst animationOffset: number = this.config.position.vertical.position === 'top' ? numberOfNotifications - 1 : i;\n\t\t\t\t\tsetTimeout( () => {\n\t\t\t\t\t\tthis.notifications[ i ].component.hide().then( () => {\n\n\t\t\t\t\t\t\t// Are we done here, was this the last notification to be hidden?\n\t\t\t\t\t\t\tif ( ( this.config.position.vertical.position === 'top' && i === 0 ) ||\n\t\t\t\t\t\t\t\t( this.config.position.vertical.position === 'bottom' && i === numberOfNotifications - 1 ) ) {\n\t\t\t\t\t\t\t\tthis.removeAllNotificationsFromList();\n\t\t\t\t\t\t\t\tresolve(); // Done\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\t\t\t\t\t}, this.config.animations.hide.offset * animationOffset );\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tlet stepPromises: Array<Promise<undefined>> = [];\n\t\t\t\tfor ( let i: number = numberOfNotifications - 1; i >= 0; i-- ) {\n\t\t\t\t\tstepPromises.push( this.notifications[ i ].component.hide() );\n\t\t\t\t}\n\t\t\t\tPromise.all( stepPromises ).then( () => {\n\t\t\t\t\tthis.removeAllNotificationsFromList();\n\t\t\t\t\tresolve(); // Done\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} );\n\t}\n\n\t/**\n\t * Shift multiple notifications at once\n\t *\n\t * @param   notifications List containing the notifications to be shifted\n\t * @param   distance      Distance to shift (in px)\n\t * @param   toMakePlace   Flag, defining in which direciton to shift\n\t * @returns Promise, resolved when done\n\t */\n\tprivate shiftNotifications( notifications: Array<NotifierNotification>, distance: number, toMakePlace: boolean ): Promise<undefined> {\n\t\treturn new Promise<undefined>( ( resolve: () => void, reject: () => void ) => {\n\n\t\t\t// Are there any notifications to shift?\n\t\t\tif ( notifications.length === 0 ) {\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet notificationPromises: Array<Promise<undefined>> = [];\n\t\t\tfor ( let i: number = notifications.length - 1; i >= 0; i-- ) {\n\t\t\t\tnotificationPromises.push( notifications[ i ].component.shift( distance, toMakePlace ) );\n\t\t\t}\n\t\t\tPromise.all( notificationPromises ).then( resolve ); // Done\n\n\t\t} );\n\t}\n\n\t/**\n\t * Add a new notification to the list of notifications (triggers change detection)\n\t *\n\t * @param notification Notification to add to the list of notifications\n\t */\n\tprivate addNotificationToList( notification: NotifierNotification ): void {\n\t\tthis.notifications.push( notification );\n\t\tthis.changeDetector.markForCheck(); // Run change detection because the notification list changed\n\t}\n\n\t/**\n\t * Remove an existing notification from the list of notifications (triggers change detection)\n\t *\n\t * @param notification Notification to be removed from the list of notifications\n\t */\n\tprivate removeNotificationFromList( notification: NotifierNotification ): void {\n\t\tthis.notifications =\n\t\t\tthis.notifications.filter( ( item: NotifierNotification ) => item.component !== notification.component );\n\t\tthis.changeDetector.markForCheck(); // Run change detection because the notification list changed\n\t}\n\n\t/**\n\t * Remove all notifications from the list (triggers change detection)\n\t */\n\tprivate removeAllNotificationsFromList(): void {\n\t\tthis.notifications = [];\n\t\tthis.changeDetector.markForCheck(); // Run change detection because the notification list changed\n\t}\n\n\t/**\n\t * Helper: Find a notification in the notification list by a given notification ID\n\t *\n\t * @param   notificationId Notification ID, used for finding notification\n\t * @returns Notification, undefined if not found\n\t */\n\tprivate findNotificationById( notificationId: string ): NotifierNotification | undefined {\n\t\treturn this.notifications.find( ( currentNotification: NotifierNotification ) => currentNotification.id === notificationId );\n\t}\n\n\t/**\n\t * Helper: Find a notification's index by a given notification ID\n\t *\n\t * @param   notificationId Notification ID, used for finding a notification's index\n\t * @returns Notification index, undefined if not found\n\t */\n\tprivate findNotificationIndexById( notificationId: string ): number | undefined {\n\t\tconst notificationIndex: number =\n\t\t\tthis.notifications.findIndex( ( currentNotification: NotifierNotification ) => currentNotification.id === notificationId );\n\t\treturn ( notificationIndex !== -1 ? notificationIndex : undefined );\n\t}\n\n}\n","import { NotifierAnimationPreset, NotifierAnimationPresetKeyframes } from '../models/notifier-animation.model';\n\n/**\n * Fade animation preset\n */\nexport const fade: NotifierAnimationPreset = {\n\thide: (): NotifierAnimationPresetKeyframes => {\n\t\treturn {\n\t\t\tfrom: {\n\t\t\t\topacity: '1'\n\t\t\t},\n\t\t\tto: {\n\t\t\t\topacity: '0'\n\t\t\t}\n\t\t};\n\t},\n\tshow: (): NotifierAnimationPresetKeyframes => {\n\t\treturn {\n\t\t\tfrom: {\n\t\t\t\topacity: '0'\n\t\t\t},\n\t\t\tto: {\n\t\t\t\topacity: '1'\n\t\t\t}\n\t\t};\n\t}\n};\n","import { NotifierAnimationPreset, NotifierAnimationPresetKeyframes } from '../models/notifier-animation.model';\nimport { NotifierConfig } from '../models/notifier-config.model';\nimport { NotifierNotification } from '../models/notifier-notification.model';\n\n/**\n * Slide animation preset\n */\nexport const slide: NotifierAnimationPreset = {\n\thide: ( notification: NotifierNotification ): NotifierAnimationPresetKeyframes => {\n\n\t\t// Prepare variables\n\t\tconst config: NotifierConfig = notification.component.getConfig();\n\t\tconst shift: number = notification.component.getShift();\n\t\tlet from: {\n\t\t\t[ animatablePropertyName: string ]: string;\n\t\t};\n\t\tlet to: {\n\t\t\t[ animatablePropertyName: string ]: string;\n\t\t};\n\n\t\t// Configure variables, depending on configuration and component\n\t\tif ( config.position.horizontal.position === 'left' ) {\n\t\t\tfrom = {\n\t\t\t\ttransform: `translate3d( 0, ${ shift }px, 0 )`\n\t\t\t};\n\t\t\tto = {\n\t\t\t\ttransform: `translate3d( calc( -100% - ${ config.position.horizontal.distance }px - 10px ), ${ shift }px, 0 )`\n\t\t\t};\n\t\t} else if ( config.position.horizontal.position === 'right' ) {\n\t\t\tfrom = {\n\t\t\t\ttransform: `translate3d( 0, ${ shift }px, 0 )`\n\t\t\t};\n\t\t\tto = {\n\t\t\t\ttransform: `translate3d( calc( 100% + ${ config.position.horizontal.distance }px + 10px ), ${ shift }px, 0 )`\n\t\t\t};\n\t\t} else {\n\t\t\tlet horizontalPosition: string;\n\t\t\tif ( config.position.vertical.position === 'top' ) {\n\t\t\t\thorizontalPosition = `calc( -100% - ${ config.position.horizontal.distance }px - 10px )`;\n\t\t\t} else {\n\t\t\t\thorizontalPosition = `calc( 100% + ${ config.position.horizontal.distance }px + 10px )`;\n\t\t\t}\n\t\t\tfrom = {\n\t\t\t\ttransform: `translate3d( -50%, ${ shift }px, 0 )`\n\t\t\t};\n\t\t\tto = {\n\t\t\t\ttransform: `translate3d( -50%, ${ horizontalPosition }, 0 )`\n\t\t\t};\n\t\t}\n\n\t\t// Done\n\t\treturn {\n\t\t\tfrom,\n\t\t\tto\n\t\t};\n\n\t},\n\tshow: ( notification: NotifierNotification ): NotifierAnimationPresetKeyframes => {\n\n\t\t// Prepare variables\n\t\tconst config: NotifierConfig = notification.component.getConfig();\n\t\tlet from: {\n\t\t\t[ animatablePropertyName: string ]: string;\n\t\t};\n\t\tlet to: {\n\t\t\t[ animatablePropertyName: string ]: string;\n\t\t};\n\n\t\t// Configure variables, depending on configuration and component\n\t\tif ( config.position.horizontal.position === 'left' ) {\n\t\t\tfrom = {\n\t\t\t\ttransform: `translate3d( calc( -100% - ${ config.position.horizontal.distance }px - 10px ), 0, 0 )`\n\t\t\t};\n\t\t\tto = {\n\t\t\t\ttransform: 'translate3d( 0, 0, 0 )'\n\t\t\t};\n\t\t} else if ( config.position.horizontal.position === 'right' ) {\n\t\t\tfrom = {\n\t\t\t\ttransform: `translate3d( calc( 100% + ${ config.position.horizontal.distance }px + 10px ), 0, 0 )`\n\t\t\t};\n\t\t\tto = {\n\t\t\t\ttransform: 'translate3d( 0, 0, 0 )'\n\t\t\t};\n\t\t} else {\n\t\t\tlet horizontalPosition: string;\n\t\t\tif ( config.position.vertical.position === 'top' ) {\n\t\t\t\thorizontalPosition = `calc( -100% - ${ config.position.horizontal.distance }px - 10px )`;\n\t\t\t} else {\n\t\t\t\thorizontalPosition = `calc( 100% + ${ config.position.horizontal.distance }px + 10px )`;\n\t\t\t}\n\t\t\tfrom = {\n\t\t\t\ttransform: `translate3d( -50%, ${ horizontalPosition }, 0 )`\n\t\t\t};\n\t\t\tto = {\n\t\t\t\ttransform: 'translate3d( -50%, 0, 0 )'\n\t\t\t};\n\t\t}\n\n\t\t// Done\n\t\treturn {\n\t\t\tfrom,\n\t\t\tto\n\t\t};\n\n\t}\n};\n","import { Injectable } from '@angular/core';\n\nimport { NotifierAnimationData, NotifierAnimationPreset, NotifierAnimationPresetKeyframes } from '../models/notifier-animation.model';\nimport { NotifierNotification } from '../models/notifier-notification.model';\nimport { fade } from '../animation-presets/fade.animation-preset';\nimport { slide } from '../animation-presets/slide.animation-preset';\n\n/**\n * Notifier animation service\n */\n@Injectable()\nexport class NotifierAnimationService {\n\n\t/**\n\t * List of animation presets (currently static)\n\t */\n\tprivate readonly animationPresets: {\n\t\t[ animationPresetName: string ]: NotifierAnimationPreset\n\t};\n\n\t/**\n\t * Constructor\n\t */\n\tpublic constructor() {\n\t\tthis.animationPresets = {\n\t\t\tfade,\n\t\t\tslide\n\t\t};\n\t}\n\n\t/**\n\t * Get animation data\n\t *\n\t * This method generates all data the Web Animations API needs to animate our notification. The result depends on both the animation\n\t * direction (either in or out) as well as the notifications (and its attributes) itself.\n\t *\n\t * @param   direction    Animation direction, either in or out\n\t * @param   notification Notification the animation data should be generated for\n\t * @returns Animation information\n\t */\n\tpublic getAnimationData( direction: 'show' | 'hide', notification: NotifierNotification ): NotifierAnimationData {\n\n\t\t// Get all necessary animation data\n\t\tlet keyframes: NotifierAnimationPresetKeyframes;\n\t\tlet duration: number;\n\t\tlet easing: string;\n\t\tif ( direction === 'show' ) {\n\t\t\tkeyframes = this.animationPresets[ notification.component.getConfig().animations.show.preset ].show( notification );\n\t\t\tduration = notification.component.getConfig().animations.show.speed;\n\t\t\teasing = notification.component.getConfig().animations.show.easing;\n\t\t} else {\n\t\t\tkeyframes = this.animationPresets[ notification.component.getConfig().animations.hide.preset ].hide( notification );\n\t\t\tduration = notification.component.getConfig().animations.hide.speed;\n\t\t\teasing = notification.component.getConfig().animations.hide.easing;\n\t\t}\n\n\t\t// Build and return animation data\n\t\treturn {\n\t\t\tkeyframes: [\n\t\t\t\tkeyframes.from,\n\t\t\t\tkeyframes.to\n\t\t\t],\n\t\t\toptions: {\n\t\t\t\tduration,\n\t\t\t\teasing,\n\t\t\t\tfill: 'forwards' // Keep the newly painted state after the animation finished\n\t\t\t}\n\t\t};\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Notifier timer service\n *\n * This service acts as a timer, needed due to the still rather limited setTimeout JavaScript API. The timer service can start and stop a\n * timer. Furthermore, it can also pause the timer at any time, and resume later on. The timer API workd promise-based.\n */\n@Injectable()\nexport class NotifierTimerService {\n\n\t/**\n\t * Timestamp (in ms), created in the moment the timer starts\n\t */\n\tprivate now: number;\n\n\t/**\n\t * Remaining time (in ms)\n\t */\n\tprivate remaining: number;\n\n\t/**\n\t * Timeout ID, used for clearing the timeout later on\n\t */\n\tprivate timerId: number;\n\n\t/**\n\t * Promise resolve function, eventually getting called once the timer finishes\n\t */\n\tprivate finishPromiseResolver: () => void;\n\n\t/**\n\t * Constructor\n\t */\n\tpublic constructor() {\n\t\tthis.now = 0;\n\t\tthis.remaining = 0;\n\t}\n\n\t/**\n\t * Start (or resume) the timer\n\t *\n\t * @param   duration Timer duration, in ms\n\t * @returns          Promise, resolved once the timer finishes\n\t */\n\tpublic start( duration: number ): Promise<undefined> {\n\t\treturn new Promise<undefined>( ( resolve: () => void, reject: () => void ) => {\n\n\t\t\t// For the first run ...\n\t\t\tthis.remaining = duration;\n\n\t\t\t// Setup, then start the timer\n\t\t\tthis.finishPromiseResolver = resolve;\n\t\t\tthis.continue();\n\n\t\t} );\n\t}\n\n\t/**\n\t * Pause the timer\n\t */\n\tpublic pause(): void {\n\t\tclearTimeout( this.timerId );\n\t\tthis.remaining -= new Date().getTime() - this.now;\n\t}\n\n\t/**\n\t * Continue the timer\n\t */\n\tpublic continue(): void {\n\t\tthis.now = new Date().getTime();\n\t\tthis.timerId = window.setTimeout( () => {\n\t\t\tthis.finish();\n\t\t}, this.remaining );\n\t}\n\n\t/**\n\t * Stop the timer\n\t */\n\tpublic stop(): void {\n\t\tclearTimeout( this.timerId );\n\t\tthis.remaining = 0;\n\t}\n\n\t/**\n\t * Finish up the timeout by resolving the timer promise\n\t */\n\tprivate finish(): void {\n\t\tthis.finishPromiseResolver();\n\t}\n\n}\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, Renderer2 } from '@angular/core';\n\nimport { NotifierAnimationData } from '../models/notifier-animation.model';\nimport { NotifierAnimationService } from '../services/notifier-animation.service';\nimport { NotifierConfig } from '../models/notifier-config.model';\nimport { NotifierNotification } from '../models/notifier-notification.model';\nimport { NotifierService } from '../services/notifier.service';\nimport { NotifierTimerService } from '../services/notifier-timer.service';\n\n/**\n * Notifier notification component\n * -------------------------------\n * This component is responsible for actually displaying the notification on screen. In addition, it's able to show and hide this\n * notification, in particular to animate this notification in and out, as well as shift (move) this notification vertically around.\n * Furthermore, the notification component handles all interactions the user has with this notification / component, such as clicks and\n * mouse movements.\n */\n@Component( {\n\tchangeDetection: ChangeDetectionStrategy.OnPush, // (#perfmatters)\n\thost: {\n\t\t'(click)': 'onNotificationClick()',\n\t\t'(mouseout)': 'onNotificationMouseout()',\n\t\t'(mouseover)': 'onNotificationMouseover()',\n\t\tclass: 'notifier__notification'\n\t},\n\tproviders: [\n\t\t// We provide the timer to the component's local injector, so that every notification components gets its own\n\t\t// instance of the timer service, thus running their timers independently from each other\n\t\tNotifierTimerService\n\t],\n\tselector: 'notifier-notification',\n\ttemplateUrl: './notifier-notification.component.html'\n} )\nexport class NotifierNotificationComponent implements AfterViewInit {\n\n\t/**\n\t * Input: Notification object, contains all details necessary to construct the notification\n\t */\n\t@Input()\n\tpublic notification: NotifierNotification;\n\n\t/**\n\t * Output: Ready event, handles the initialization success by emitting a reference to this notification component\n\t */\n\t@Output()\n\tpublic ready: EventEmitter<NotifierNotificationComponent>;\n\n\t/**\n\t * Output: Dismiss event, handles the click on the dismiss button by emitting the notification ID of this notification component\n\t */\n\t@Output()\n\tpublic dismiss: EventEmitter<string>;\n\n\t/**\n\t * Notifier configuration\n\t */\n\tpublic readonly config: NotifierConfig;\n\n\t/**\n\t * Notifier timer service\n\t */\n\tprivate readonly timerService: NotifierTimerService;\n\n\t/**\n\t * Notifier animation service\n\t */\n\tprivate readonly animationService: NotifierAnimationService;\n\n\t/**\n\t * Angular renderer, used to preserve the overall DOM abstraction & independence\n\t */\n\tprivate readonly renderer: Renderer2;\n\n\t/**\n\t * Native element reference, used for manipulating DOM properties\n\t */\n\tprivate readonly element: HTMLElement;\n\n\t/**\n\t * Current notification height, calculated and cached here (#perfmatters)\n\t */\n\tprivate elementHeight: number;\n\n\t/**\n\t * Current notification width, calculated and cached here (#perfmatters)\n\t */\n\tprivate elementWidth: number;\n\n\t/**\n\t * Current notification shift, calculated and cached here (#perfmatters)\n\t */\n\tprivate elementShift: number;\n\n\t/**\n\t * Constructor\n\t *\n\t * @param elementRef               Reference to the component's element\n\t * @param renderer                 Angular renderer\n\t * @param notifierService          Notifier service\n\t * @param notifierTimerService     Notifier timer service\n\t * @param notifierAnimationService Notifier animation service\n\t */\n\tpublic constructor( elementRef: ElementRef, renderer: Renderer2, notifierService: NotifierService,\n\t\tnotifierTimerService: NotifierTimerService, notifierAnimationService: NotifierAnimationService ) {\n\t\tthis.config = notifierService.getConfig();\n\t\tthis.ready = new EventEmitter<NotifierNotificationComponent>();\n\t\tthis.dismiss = new EventEmitter<string>();\n\t\tthis.timerService = notifierTimerService;\n\t\tthis.animationService = notifierAnimationService;\n\t\tthis.renderer = renderer;\n\t\tthis.element = elementRef.nativeElement;\n\t\tthis.elementShift = 0;\n\t}\n\n\t/**\n\t * Component after view init lifecycle hook, setts up the component and then emits the ready event\n\t */\n\tpublic ngAfterViewInit(): void {\n\t\tthis.setup();\n\t\tthis.elementHeight = this.element.offsetHeight;\n\t\tthis.elementWidth = this.element.offsetWidth;\n\t\tthis.ready.emit( this );\n\t}\n\n\t/**\n\t * Get the notifier config\n\t *\n\t * @returns Notifier configuration\n\t */\n\tpublic getConfig(): NotifierConfig {\n\t\treturn this.config;\n\t}\n\n\t/**\n\t * Get notification element height (in px)\n\t *\n\t * @returns Notification element height (in px)\n\t */\n\tpublic getHeight(): number {\n\t\treturn this.elementHeight;\n\t}\n\n\t/**\n\t * Get notification element width (in px)\n\t *\n\t * @returns Notification element height (in px)\n\t */\n\tpublic getWidth(): number {\n\t\treturn this.elementWidth;\n\t}\n\n\t/**\n\t * Get notification shift offset (in px)\n\t *\n\t * @returns Notification element shift offset (in px)\n\t */\n\tpublic getShift(): number {\n\t\treturn this.elementShift;\n\t}\n\n\t/**\n\t * Show (animate in) this notification\n\t *\n\t * @returns Promise, resolved when done\n\t */\n\tpublic show(): Promise<undefined> {\n\t\treturn new Promise<undefined>( ( resolve: () => void, reject: () => void ) => {\n\n\t\t\t// Are animations enabled?\n\t\t\tif ( this.config.animations.enabled && this.config.animations.show.speed > 0 ) {\n\n\t\t\t\t// Get animation data\n\t\t\t\tconst animationData: NotifierAnimationData = this.animationService.getAnimationData( 'show', this.notification );\n\n\t\t\t\t// Set initial styles (styles before animation), prevents quick flicker when animation starts\n\t\t\t\tconst animatedProperties: Array<string> = Object.keys( animationData.keyframes[ 0 ] );\n\t\t\t\tfor ( let i: number = animatedProperties.length - 1; i >= 0; i-- ) {\n\t\t\t\t\tthis.renderer.setStyle( this.element, animatedProperties[ i ],\n\t\t\t\t\t\tanimationData.keyframes[ 0 ][ animatedProperties[ i ] ] );\n\t\t\t\t}\n\n\t\t\t\t// Animate notification in\n\t\t\t\tthis.renderer.setStyle( this.element, 'visibility', 'visible' );\n\t\t\t\tconst animation: Animation = this.element.animate( animationData.keyframes, animationData.options );\n\t\t\t\tanimation.onfinish = () => {\n\t\t\t\t\tthis.startAutoHideTimer();\n\t\t\t\t\tresolve(); // Done\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\t// Show notification\n\t\t\t\tthis.renderer.setStyle( this.element, 'visibility', 'visible' );\n\t\t\t\tthis.startAutoHideTimer();\n\t\t\t\tresolve(); // Done\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Hide (animate out) this notification\n\t *\n\t * @returns Promise, resolved when done\n\t */\n\tpublic hide(): Promise<undefined> {\n\t\treturn new Promise<undefined>( ( resolve: () => void, reject: () => void ) => {\n\n\t\t\tthis.stopAutoHideTimer();\n\n\t\t\t// Are animations enabled?\n\t\t\tif ( this.config.animations.enabled && this.config.animations.hide.speed > 0 ) {\n\t\t\t\tconst animationData: NotifierAnimationData = this.animationService.getAnimationData( 'hide', this.notification );\n\t\t\t\tconst animation: Animation = this.element.animate( animationData.keyframes, animationData.options );\n\t\t\t\tanimation.onfinish = () => {\n\t\t\t\t\tresolve(); // Done\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tresolve(); // Done\n\t\t\t}\n\n\t\t} );\n\t}\n\n\t/**\n\t * Shift (move) this notification\n\t *\n\t * @param   distance         Distance to shift (in px)\n\t * @param   shiftToMakePlace Flag, defining in which direction to shift\n\t * @returns Promise, resolved when done\n\t */\n\tpublic shift( distance: number, shiftToMakePlace: boolean ): Promise<undefined> {\n\t\treturn new Promise<undefined>( ( resolve: () => void, reject: () => void ) => {\n\n\t\t\t// Calculate new position (position after the shift)\n\t\t\tlet newElementShift: number;\n\t\t\tif ( ( this.config.position.vertical.position === 'top' && shiftToMakePlace )\n\t\t\t\t|| ( this.config.position.vertical.position === 'bottom' && !shiftToMakePlace ) ) {\n\t\t\t\tnewElementShift = this.elementShift + distance + this.config.position.vertical.gap;\n\t\t\t} else {\n\t\t\t\tnewElementShift = this.elementShift - distance - this.config.position.vertical.gap;\n\t\t\t}\n\t\t\tconst horizontalPosition: string = this.config.position.horizontal.position === 'middle' ? '-50%' : '0';\n\n\t\t\t// Are animations enabled?\n\t\t\tif ( this.config.animations.enabled && this.config.animations.shift.speed > 0 ) {\n\t\t\t\tconst animationData: NotifierAnimationData = { // TODO: Extract into animation service\n\t\t\t\t\tkeyframes: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttransform: `translate3d( ${ horizontalPosition }, ${ this.elementShift }px, 0 )`\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttransform: `translate3d( ${ horizontalPosition }, ${ newElementShift }px, 0 )`\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tduration: this.config.animations.shift.speed,\n\t\t\t\t\t\teasing: this.config.animations.shift.easing,\n\t\t\t\t\t\tfill: 'forwards'\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tthis.elementShift = newElementShift;\n\t\t\t\tconst animation: Animation = this.element.animate( animationData.keyframes, animationData.options );\n\t\t\t\tanimation.onfinish = () => {\n\t\t\t\t\tresolve(); // Done\n\t\t\t\t};\n\n\t\t\t} else {\n\t\t\t\tthis.renderer.setStyle( this.element, 'transform', `translate3d( ${ horizontalPosition }, ${ newElementShift }px, 0 )` );\n\t\t\t\tthis.elementShift = newElementShift;\n\t\t\t\tresolve(); // Done\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Handle click on dismiss button\n\t */\n\tpublic onClickDismiss(): void {\n\t\tthis.dismiss.emit( this.notification.id );\n\t}\n\n\t/**\n\t * Handle mouseover over notification area\n\t */\n\tpublic onNotificationMouseover(): void {\n\t\tif ( this.config.behaviour.onMouseover === 'pauseAutoHide' ) {\n\t\t\tthis.pauseAutoHideTimer();\n\t\t} else if ( this.config.behaviour.onMouseover === 'resetAutoHide' ) {\n\t\t\tthis.stopAutoHideTimer();\n\t\t}\n\t}\n\n\t/**\n\t * Handle mouseout from notification area\n\t */\n\tpublic onNotificationMouseout(): void {\n\t\tif ( this.config.behaviour.onMouseover === 'pauseAutoHide' ) {\n\t\t\tthis.continueAutoHideTimer();\n\t\t} else if ( this.config.behaviour.onMouseover === 'resetAutoHide' ) {\n\t\t\tthis.startAutoHideTimer();\n\t\t}\n\t}\n\n\t/**\n\t * Handle click on notification area\n\t */\n\tpublic onNotificationClick(): void {\n\t\tif ( this.config.behaviour.onClick === 'hide' ) {\n\t\t\tthis.onClickDismiss();\n\t\t}\n\t}\n\n\t/**\n\t * Start the auto hide timer (if enabled)\n\t */\n\tprivate startAutoHideTimer(): void {\n\t\tif ( this.config.behaviour.autoHide !== false && this.config.behaviour.autoHide > 0 ) {\n\t\t\tthis.timerService.start( this.config.behaviour.autoHide ).then( () => {\n\t\t\t\tthis.onClickDismiss();\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Pause the auto hide timer (if enabled)\n\t */\n\tprivate pauseAutoHideTimer(): void {\n\t\tif ( this.config.behaviour.autoHide !== false && this.config.behaviour.autoHide > 0 ) {\n\t\t\tthis.timerService.pause();\n\t\t}\n\t}\n\n\t/**\n\t * Continue the auto hide timer (if enabled)\n\t */\n\tprivate continueAutoHideTimer(): void {\n\t\tif ( this.config.behaviour.autoHide !== false && this.config.behaviour.autoHide > 0 ) {\n\t\t\tthis.timerService.continue();\n\t\t}\n\t}\n\n\t/**\n\t * Stop the auto hide timer (if enabled)\n\t */\n\tprivate stopAutoHideTimer(): void {\n\t\tif ( this.config.behaviour.autoHide !== false && this.config.behaviour.autoHide > 0 ) {\n\t\t\tthis.timerService.stop();\n\t\t}\n\t}\n\n\t/**\n\t * Initial notification setup\n\t */\n\tprivate setup(): void {\n\n\t\t// Set start position (initially the exact same for every new notification)\n\t\tif ( this.config.position.horizontal.position === 'left' ) {\n\t\t\tthis.renderer.setStyle( this.element, 'left', `${ this.config.position.horizontal.distance }px` );\n\t\t} else if ( this.config.position.horizontal.position === 'right' ) {\n\t\t\tthis.renderer.setStyle( this.element, 'right', `${ this.config.position.horizontal.distance }px` );\n\t\t} else {\n\t\t\tthis.renderer.setStyle( this.element, 'left', '50%' );\n\t\t\t// Let's get the GPU handle some work as well (#perfmatters)\n\t\t\tthis.renderer.setStyle( this.element, 'transform', 'translate3d( -50%, 0, 0 )' );\n\t\t}\n\t\tif ( this.config.position.vertical.position === 'top' ) {\n\t\t\tthis.renderer.setStyle( this.element, 'top', `${ this.config.position.vertical.distance }px` );\n\t\t} else {\n\t\t\tthis.renderer.setStyle( this.element, 'bottom', `${ this.config.position.vertical.distance }px` );\n\t\t}\n\n\t\t// Add classes (responsible for visual design)\n\t\tthis.renderer.addClass( this.element, `notifier__notification--${ this.notification.type }` );\n\t\tthis.renderer.addClass( this.element, `notifier__notification--${ this.config.theme }` );\n\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { NotifierContainerComponent } from './components/notifier-container.component';\nimport { NotifierNotificationComponent } from './components/notifier-notification.component';\nimport { NotifierConfig, NotifierOptions } from './models/notifier-config.model';\nimport { NotifierAnimationService } from './services/notifier-animation.service';\nimport { NotifierQueueService } from './services/notifier-queue.service';\nimport { NotifierService } from './services/notifier.service';\nimport { NotifierConfigToken, NotifierOptionsToken } from './notifier.tokens';\n\n/**\n * Factory for a notifier configuration with custom options\n *\n * Sidenote:\n * Required as Angular AoT compilation cannot handle dynamic functions; see <https://github.com/angular/angular/issues/11262>.\n *\n * @param   options - Custom notifier options\n * @returns - Notifier configuration as result\n */\nexport function notifierCustomConfigFactory( options: NotifierOptions ): NotifierConfig {\n\treturn new NotifierConfig( options );\n}\n\n/**\n * Factory for a notifier configuration with default options\n *\n * Sidenote:\n * Required as Angular AoT compilation cannot handle dynamic functions; see <https://github.com/angular/angular/issues/11262>.\n *\n * @returns - Notifier configuration as result\n */\nexport function notifierDefaultConfigFactory(): NotifierConfig {\n\treturn new NotifierConfig( {} );\n}\n\n/**\n * Notifier module\n */\n@NgModule( {\n\tdeclarations: [\n\t\tNotifierContainerComponent,\n\t\tNotifierNotificationComponent\n\t],\n\texports: [\n\t\tNotifierContainerComponent\n\t],\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tNotifierAnimationService,\n\t\tNotifierService,\n\t\tNotifierQueueService,\n\n\t\t// Provide the default notifier configuration if just the module is imported\n\t\t{\n\t\t\tprovide: NotifierConfigToken,\n\t\t\tuseFactory: notifierDefaultConfigFactory\n\t\t}\n\n\t]\n} )\nexport class NotifierModule {\n\n\t/**\n\t * Setup the notifier module with custom providers, in this case with a custom configuration based on the givne options\n\t *\n\t * @param   [options={}] - Custom notifier options\n\t * @returns - Notifier module with custom providers\n\t */\n\tpublic static withConfig( options: NotifierOptions = {} ): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: NotifierModule,\n\t\t\tproviders: [\n\n\t\t\t\t// Provide the options itself upfront (as we need to inject them as dependencies -- see below)\n\t\t\t\t{\n\t\t\t\t\tprovide: NotifierOptionsToken,\n\t\t\t\t\tuseValue: options\n\t\t\t\t},\n\n\t\t\t\t// Provide a custom notifier configuration, based on the given notifier options\n\t\t\t\t{\n\t\t\t\t\tdeps: [\n\t\t\t\t\t\tNotifierOptionsToken\n\t\t\t\t\t],\n\t\t\t\t\tprovide: NotifierConfigToken,\n\t\t\t\t\tuseFactory: notifierCustomConfigFactory\n\t\t\t\t}\n\n\t\t\t]\n\t\t};\n\t}\n\n}\n"]}