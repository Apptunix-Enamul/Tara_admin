{"version":3,"file":"angular-notifier.js","sources":["ng:/angular-notifier/lib/models/notifier-notification.model.ts","ng:/angular-notifier/lib/services/notifier-queue.service.ts","ng:/angular-notifier/lib/models/notifier-config.model.ts","ng:/angular-notifier/lib/notifier.tokens.ts","ng:/angular-notifier/lib/services/notifier.service.ts","ng:/angular-notifier/lib/components/notifier-container.component.ts","ng:/angular-notifier/lib/animation-presets/fade.animation-preset.ts","ng:/angular-notifier/lib/animation-presets/slide.animation-preset.ts","ng:/angular-notifier/lib/services/notifier-animation.service.ts","ng:/angular-notifier/lib/services/notifier-timer.service.ts","ng:/angular-notifier/lib/components/notifier-notification.component.ts","ng:/angular-notifier/lib/notifier.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { NotifierNotificationComponent } from '../components/notifier-notification.component';\nimport { TemplateRef } from '@angular/core';\n\n/**\n * Notification\n *\n * This class describes the structure of a notifiction, including all information it needs to live, and everyone else needs to work with it.\n */\nexport class NotifierNotification {\n\t/**\n\t * Unique notification ID, can be set manually to control the notification from outside later on\n\t */\n\tpublic id: string;\n\n\t/**\n\t * Notification type, will be used for constructing an appropriate class name\n\t */\n\tpublic type: string;\n\n\t/**\n\t * Notification message\n\t */\n\tpublic message: string;\n\n\t/**\n\t * The template to customize\n\t * the appearance of the notification\n\t */\n\tpublic template?: TemplateRef<any> = null;\n\n\t/**\n\t * Component reference of this notification, created and set during creation time\n\t */\n\tpublic component: NotifierNotificationComponent;\n\n\t/**\n\t * Constructor\n\t *\n\t * @param options Notifier options\n\t */\n\tpublic constructor(options: NotifierNotificationOptions) {\n\t\tObject.assign(this, options);\n\n\t\t// If not set manually, we have to create a unique notification ID by ourselves. The ID generation relies on the current browser\n\t\t// datetime in ms, in praticular the moment this notification gets constructed. Concurrency, and thus two IDs being the exact same,\n\t\t// is not possible due to the action queue concept.\n\t\tif (options.id === undefined) {\n\t\t\tthis.id = `ID_${new Date().getTime()}`;\n\t\t}\n\t}\n}\n\n/**\n * Notifiction options\n *\n * This interface describes which information are needed to create a new notification, or in other words, which information the external API\n * call must provide.\n */\nexport interface NotifierNotificationOptions {\n\t/**\n\t * Notification ID, optional\n\t */\n\tid?: string;\n\n\t/**\n\t * Notification type\n\t */\n\ttype: string;\n\n\t/**\n\t * Notificatin message\n\t */\n\tmessage: string;\n\n\t/**\n\t * The template to customize\n\t * the appearance of the notification\n\t */\n\ttemplate?: TemplateRef<any>;\n}\n","import { Injectable } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { NotifierAction } from '../models/notifier-action.model';\n\n/**\n * Notifier queue service\n *\n * In general, API calls don't get processed right away. Instead, we have to queue them up in order to prevent simultanious API calls\n * interfering with each other. This, at least in theory, is possible at any time. In particular, animations - which potentially overlap -\n * can cause changes in JS classes as well as affect the DOM. Therefore, the queue service takes all actions, puts them in a queue, and\n * processes them at the right time (which is when the previous action has been processed successfully).\n *\n * Technical sidenote:\n * An action looks pretty similar to the ones within the Flux / Redux pattern.\n */\n@Injectable()\nexport class NotifierQueueService {\n\n\t/**\n\t * Stream of actions, subscribable from outside\n\t */\n\tpublic readonly actionStream: Subject<NotifierAction>;\n\n\t/**\n\t * Queue of actions\n\t */\n\tprivate actionQueue: Array<NotifierAction>;\n\n\t/**\n\t * Flag, true if some action is currently in progress\n\t */\n\tprivate isActionInProgress: boolean;\n\n\t/**\n\t * Constructor\n\t */\n\tpublic constructor() {\n\t\tthis.actionStream = new Subject<NotifierAction>();\n\t\tthis.actionQueue = [];\n\t\tthis.isActionInProgress = false;\n\t}\n\n\t/**\n\t * Push a new action to the queue, and try to run it\n\t *\n\t * @param action Action object\n\t */\n\tpublic push( action: NotifierAction ): void {\n\t\tthis.actionQueue.push( action );\n\t\tthis.tryToRunNextAction();\n\t}\n\n\t/**\n\t * Continue with the next action (called when the current action is finished)\n\t */\n\tpublic continue(): void {\n\t\tthis.isActionInProgress = false;\n\t\tthis.tryToRunNextAction();\n\t}\n\n\t/**\n\t * Try to run the next action in the queue; we skip if there already is some action in progress, or if there is no action left\n\t */\n\tprivate tryToRunNextAction(): void {\n\t\tif ( this.isActionInProgress || this.actionQueue.length === 0 ) {\n\t\t\treturn; // Skip (the queue can now go drink a coffee as it has nothing to do anymore)\n\t\t}\n\t\tthis.isActionInProgress = true;\n\t\tthis.actionStream.next( this.actionQueue.shift() ); // Push next action to the stream, and remove the current action from the queue\n\t}\n\n}\n","/**\n * Notifier options\n */\nexport interface NotifierOptions {\n\tanimations?: {\n\t\tenabled?: boolean;\n\t\thide?: {\n\t\t\teasing?: string;\n\t\t\toffset?: number | false;\n\t\t\tpreset?: string;\n\t\t\tspeed?: number;\n\t\t};\n\t\toverlap?: number | false;\n\t\tshift?: {\n\t\t\teasing?: string;\n\t\t\tspeed?: number;\n\t\t};\n\t\tshow?: {\n\t\t\teasing?: string;\n\t\t\tpreset?: string;\n\t\t\tspeed?: number;\n\t\t};\n\t};\n\tbehaviour?: {\n\t\tautoHide?: number | false;\n\t\tonClick?: 'hide' | false;\n\t\tonMouseover?: 'pauseAutoHide' | 'resetAutoHide' | false;\n\t\tshowDismissButton?: boolean;\n\t\tstacking?: number | false;\n\t};\n\tposition?: {\n\t\thorizontal?: {\n\t\t\tdistance?: number;\n\t\t\tposition?: 'left' | 'middle' | 'right';\n\t\t};\n\t\tvertical?: {\n\t\t\tdistance?: number;\n\t\t\tgap?: number;\n\t\t\tposition?: 'top' | 'bottom';\n\t\t};\n\t};\n\ttheme?: string;\n}\n\n/**\n * Notifier configuration\n *\n * The notifier configuration defines what notifications look like, how they behave, and how they get animated. It is a global\n * configuration, which means that it only can be set once (at the beginning), and cannot be changed afterwards. Aligning to the world of\n * Angular, this configuration can be provided in the root app module - alternatively, a meaningful default configuration will be used.\n */\nexport class NotifierConfig implements NotifierOptions {\n\n\t/**\n\t * Customize animations\n\t */\n\tpublic animations: {\n\t\tenabled: boolean;\n\t\thide: {\n\t\t\teasing: string;\n\t\t\toffset: number | false;\n\t\t\tpreset: string;\n\t\t\tspeed: number;\n\t\t};\n\t\toverlap: number | false;\n\t\tshift: {\n\t\t\teasing: string;\n\t\t\tspeed: number;\n\t\t};\n\t\tshow: {\n\t\t\teasing: string;\n\t\t\tpreset: string;\n\t\t\tspeed: number;\n\t\t};\n\t};\n\n\t/**\n\t * Customize behaviour\n\t */\n\tpublic behaviour: {\n\t\tautoHide: number | false;\n\t\tonClick: 'hide' | false;\n\t\tonMouseover: 'pauseAutoHide' | 'resetAutoHide' | false;\n\t\tshowDismissButton: boolean;\n\t\tstacking: number | false;\n\t};\n\n\t/**\n\t * Customize positioning\n\t */\n\tpublic position: {\n\t\thorizontal: {\n\t\t\tdistance: number;\n\t\t\tposition: 'left' | 'middle' | 'right';\n\t\t};\n\t\tvertical: {\n\t\t\tdistance: number;\n\t\t\tgap: number;\n\t\t\tposition: 'top' | 'bottom';\n\t\t};\n\t};\n\n\t/**\n\t * Customize theming\n\t */\n\tpublic theme: string;\n\n\t/**\n\t * Constructor\n\t *\n\t * @param [customOptions={}] Custom notifier options, optional\n\t */\n\tpublic constructor( customOptions: NotifierOptions = {} ) {\n\n\t\t// Set default values\n\t\tthis.animations = {\n\t\t\tenabled: true,\n\t\t\thide: {\n\t\t\t\teasing: 'ease',\n\t\t\t\toffset: 50,\n\t\t\t\tpreset: 'fade',\n\t\t\t\tspeed: 300\n\t\t\t},\n\t\t\toverlap: 150,\n\t\t\tshift: {\n\t\t\t\teasing: 'ease',\n\t\t\t\tspeed: 300\n\t\t\t},\n\t\t\tshow: {\n\t\t\t\teasing: 'ease',\n\t\t\t\tpreset: 'slide',\n\t\t\t\tspeed: 300\n\t\t\t}\n\t\t};\n\t\tthis.behaviour = {\n\t\t\tautoHide: 7000,\n\t\t\tonClick: false,\n\t\t\tonMouseover: 'pauseAutoHide',\n\t\t\tshowDismissButton: true,\n\t\t\tstacking: 4\n\t\t};\n\t\tthis.position = {\n\t\t\thorizontal: {\n\t\t\t\tdistance: 12,\n\t\t\t\tposition: 'left'\n\t\t\t},\n\t\t\tvertical: {\n\t\t\t\tdistance: 12,\n\t\t\t\tgap: 10,\n\t\t\t\tposition: 'bottom'\n\t\t\t}\n\t\t};\n\t\tthis.theme = 'material';\n\n\t\t// The following merges the custom options into the notifier config, respecting the already set default values\n\t\t// This linear, more explicit and code-sizy workflow is preferred here over a recursive one (because we know the object structure)\n\t\t// Technical sidenote: Objects are merged, other types of values simply overwritten / copied\n\t\tif ( customOptions.theme !== undefined ) {\n\t\t\tthis.theme = customOptions.theme;\n\t\t}\n\t\tif ( customOptions.animations !== undefined ) {\n\t\t\tif ( customOptions.animations.enabled !== undefined ) {\n\t\t\t\tthis.animations.enabled = customOptions.animations.enabled;\n\t\t\t}\n\t\t\tif ( customOptions.animations.overlap !== undefined ) {\n\t\t\t\tthis.animations.overlap = customOptions.animations.overlap;\n\t\t\t}\n\t\t\tif ( customOptions.animations.hide !== undefined ) {\n\t\t\t\tObject.assign( this.animations.hide, customOptions.animations.hide );\n\t\t\t}\n\t\t\tif ( customOptions.animations.shift !== undefined ) {\n\t\t\t\tObject.assign( this.animations.shift, customOptions.animations.shift );\n\t\t\t}\n\t\t\tif ( customOptions.animations.show !== undefined ) {\n\t\t\t\tObject.assign( this.animations.show, customOptions.animations.show );\n\t\t\t}\n\t\t}\n\t\tif ( customOptions.behaviour !== undefined ) {\n\t\t\tObject.assign( this.behaviour, customOptions.behaviour );\n\t\t}\n\t\tif ( customOptions.position !== undefined ) {\n\t\t\tif ( customOptions.position.horizontal !== undefined ) {\n\t\t\t\tObject.assign( this.position.horizontal, customOptions.position.horizontal );\n\t\t\t}\n\t\t\tif ( customOptions.position.vertical !== undefined ) {\n\t\t\t\tObject.assign( this.position.vertical, customOptions.position.vertical );\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n","import { NotifierConfig, NotifierOptions } from './models/notifier-config.model';\nimport { InjectionToken } from '@angular/core';\n\n// tslint:disable variable-name\n\n/**\n * Injection Token for notifier options\n */\nexport const NotifierOptionsToken: InjectionToken<NotifierOptions>\n\t= new InjectionToken<NotifierOptions>( '[angular-notifier] Notifier Options' );\n\n/**\n * Injection Token for notifier configuration\n */\nexport const NotifierConfigToken: InjectionToken<NotifierConfig>\n\t= new InjectionToken<NotifierConfig>( '[anuglar-notifier] Notifier Config' );\n\n// tslint:enable variable-name\n","import { Inject, Injectable, forwardRef } from '@angular/core';\n\nimport { NotifierConfig } from '../models/notifier-config.model';\nimport { NotifierNotificationOptions } from '../models/notifier-notification.model';\nimport { NotifierQueueService } from './notifier-queue.service';\nimport { NotifierConfigToken } from '../notifier.tokens';\n\n/**\n * Notifier service\n *\n * This service provides access to the public notifier API. Once injected into a component, directive, pipe, service, or any other building\n * block of an applications, it can be used to show new notifications, and hide existing ones. Internally, it transforms API calls into\n * actions, which then get thrown into the action queue - eventually being processed at the right moment.\n */\n@Injectable()\nexport class NotifierService {\n\n\t/**\n\t * Notifier queue service\n\t */\n\tprivate readonly queueService: NotifierQueueService;\n\n\t/**\n\t * Notifier configuration\n\t */\n\tprivate readonly config: NotifierConfig;\n\n\t/**\n\t * Constructor\n\t *\n\t * @param notifierQueueService Notifier queue service\n\t * @param config               Notifier configuration, optionally injected as a dependency\n\t */\n\tpublic constructor(\n\t\tnotifierQueueService: NotifierQueueService,\n\t\t@Inject(NotifierConfigToken) config: NotifierConfig\n\t) {\n\t\tthis.queueService = notifierQueueService;\n\t\tthis.config = config;\n\t}\n\n\t/**\n\t * Get the notifier configuration\n\t *\n\t * @returns Notifier configuration\n\t */\n\tpublic getConfig(): NotifierConfig {\n\t\treturn this.config;\n\t}\n\n\t/**\n\t * API: Show a new notification\n\t *\n\t * @param notificationOptions Notification options\n\t */\n\tpublic show( notificationOptions: NotifierNotificationOptions ): void {\n\t\tthis.queueService.push( {\n\t\t\tpayload: notificationOptions,\n\t\t\ttype: 'SHOW'\n\t\t} );\n\t}\n\n\t/**\n\t * API: Hide a specific notification, given its ID\n\t *\n\t * @param notificationId ID of the notification to hide\n\t */\n\tpublic hide( notificationId: string ): void {\n\t\tthis.queueService.push( {\n\t\t\tpayload: notificationId,\n\t\t\ttype: 'HIDE'\n\t\t} );\n\t}\n\n\t/**\n\t * API: Hide the newest notification\n\t */\n\tpublic hideNewest(): void {\n\t\tthis.queueService.push( {\n\t\t\ttype: 'HIDE_NEWEST'\n\t\t} );\n\t}\n\n\t/**\n\t * API: Hide the oldest notification\n\t */\n\tpublic hideOldest(): void {\n\t\tthis.queueService.push( {\n\t\t\ttype: 'HIDE_OLDEST'\n\t\t} );\n\t}\n\n\t/**\n\t * API: Hide all notifications at once\n\t */\n\tpublic hideAll(): void {\n\t\tthis.queueService.push( {\n\t\t\ttype: 'HIDE_ALL'\n\t\t} );\n\t}\n\n\t/**\n\t * API: Shortcut for showing a new notification\n\t *\n\t * @param type             Type of the notification\n\t * @param message          Message of the notification\n\t * @param [notificationId] Unique ID for the notification (optional)\n\t */\n\tpublic notify( type: string, message: string, notificationId?: string ): void {\n\t\tlet notificationOptions: NotifierNotificationOptions = {\n\t\t\tmessage,\n\t\t\ttype\n\t\t};\n\t\tif ( notificationId !== undefined ) {\n\t\t\tnotificationOptions.id = notificationId;\n\t\t}\n\t\tthis.show( notificationOptions );\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\n\nimport { NotifierAction } from '../models/notifier-action.model';\nimport { NotifierConfig } from '../models/notifier-config.model';\nimport { NotifierNotification } from '../models/notifier-notification.model';\nimport { NotifierQueueService } from '../services/notifier-queue.service';\nimport { NotifierService } from '../services/notifier.service';\nimport { NotifierNotificationComponent } from './notifier-notification.component';\n\n/**\n * Notifier container component\n * ----------------------------\n * This component acts as a wrapper for all notification components; consequently, it is responsible for creating a new notification\n * component and removing an existing notification component. Being more precicely, it also handles side effects of those actions, such as\n * shifting or even completely removing other notifications as well. Overall, this components handles actions coming from the queue service\n * by subscribing to its action stream.\n *\n * Technical sidenote:\n * This component has to be used somewhere in an application to work; it will not inject and create itself automatically, primarily in order\n * to not break the Angular AoT compilation. Moreover, this component (and also the notification components) set their change detection\n * strategy onPush, which means that we handle change detection manually in order to get the best performance. (#perfmatters)\n */\n@Component( {\n\tchangeDetection: ChangeDetectionStrategy.OnPush, // (#perfmatters)\n\thost: {\n\t\tclass: 'notifier__container'\n\t},\n\tselector: 'notifier-container',\n\ttemplateUrl: './notifier-container.component.html'\n} )\nexport class NotifierContainerComponent implements OnDestroy {\n\n\t/**\n\t * List of currently somewhat active notifications\n\t */\n\tpublic notifications: Array<NotifierNotification>;\n\n\t/**\n\t * Change detector\n\t */\n\tprivate readonly changeDetector: ChangeDetectorRef;\n\n\t/**\n\t * Notifier queue service\n\t */\n\tprivate readonly queueService: NotifierQueueService;\n\n\t/**\n\t * Notifier configuration\n\t */\n\tprivate readonly config: NotifierConfig;\n\n\t/**\n\t * Queue service observable subscription (saved for cleanup)\n\t */\n\tprivate queueServiceSubscription: Subscription;\n\n\t/**\n\t * Promise resolve function reference, temporarily used while the notification child component gets created\n\t */\n\tprivate tempPromiseResolver: () => void;\n\n\t/**\n\t * Constructor\n\t *\n\t * @param changeDetector       Change detector, used for manually triggering change detection runs\n\t * @param notifierQueueService Notifier queue service\n\t * @param notifierService      Notifier service\n\t */\n\tpublic constructor( changeDetector: ChangeDetectorRef, notifierQueueService: NotifierQueueService, notifierService: NotifierService ) {\n\t\tthis.changeDetector = changeDetector;\n\t\tthis.queueService = notifierQueueService;\n\t\tthis.config = notifierService.getConfig();\n\t\tthis.notifications = [];\n\n\t\t// Connects this component up to the action queue, then handle incoming actions\n\t\tthis.queueServiceSubscription = this.queueService.actionStream.subscribe( ( action: NotifierAction ) => {\n\t\t\tthis.handleAction( action ).then( () => {\n\t\t\t\tthis.queueService.continue();\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Component destroyment lifecycle hook, cleans up the observable subsciption\n\t */\n\tpublic ngOnDestroy(): void {\n\t\tif ( this.queueServiceSubscription ) {\n\t\t\tthis.queueServiceSubscription.unsubscribe();\n\t\t}\n\t}\n\n\t/**\n\t * Notification identifier, used as the ngFor trackby function\n\t *\n\t * @param   index        Index\n\t * @param   notification Notifier notification\n\t * @returns Notification ID as the unique identnfier\n\t */\n\tpublic identifyNotification( index: number, notification: NotifierNotification ): string {\n\t\treturn notification.id;\n\t}\n\n\t/**\n\t * Event handler, handles clicks on notification dismiss buttons\n\t *\n\t * @param notificationId ID of the notification to dismiss\n\t */\n\tpublic onNotificationDismiss( notificationId: string ): void {\n\t\tthis.queueService.push( {\n\t\t\tpayload: notificationId,\n\t\t\ttype: 'HIDE'\n\t\t} );\n\t}\n\n\t/**\n\t * Event handler, handles notification ready events\n\t *\n\t * @param notificationComponent Notification component reference\n\t */\n\tpublic onNotificationReady( notificationComponent: NotifierNotificationComponent ): void {\n\t\tlet currentNotification: NotifierNotification = this.notifications[ this.notifications.length - 1 ]; // Get the latest notification\n\t\tcurrentNotification.component = notificationComponent; // Save the new omponent reference\n\t\tthis.continueHandleShowAction( currentNotification ); // Continue with handling the show action\n\t}\n\n\t/**\n\t * Handle incoming actions by mapping action types to methods, and then running them\n\t *\n\t * @param   action Action object\n\t * @returns Promise, resolved when done\n\t */\n\tprivate handleAction( action: NotifierAction ): Promise<undefined> {\n\t\tswitch ( action.type ) { // TODO: Maybe a map (actionType -> class method) is a cleaner solution here?\n\t\t\tcase 'SHOW':\n\t\t\t\treturn this.handleShowAction( action );\n\t\t\tcase 'HIDE':\n\t\t\t\treturn this.handleHideAction( action );\n\t\t\tcase 'HIDE_OLDEST':\n\t\t\t\treturn this.handleHideOldestAction( action );\n\t\t\tcase 'HIDE_NEWEST':\n\t\t\t\treturn this.handleHideNewestAction( action );\n\t\t\tcase 'HIDE_ALL':\n\t\t\t\treturn this.handleHideAllAction( action );\n\t\t\tdefault:\n\t\t\t\treturn new Promise<undefined>( ( resolve: () => void, reject: () => void ) => {\n\t\t\t\t\tresolve(); // Ignore unknown action types\n\t\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Show a new notification\n\t *\n\t * We simply add the notification to the list, and then wait until its properly initialized / created / rendered.\n\t *\n\t * @param   action Action object\n\t * @returns Promise, resolved when done\n\t */\n\tprivate handleShowAction( action: NotifierAction ): Promise<undefined> {\n\t\treturn new Promise<undefined>( ( resolve: () => void, reject: () => void ) => {\n\t\t\tthis.tempPromiseResolver = resolve; // Save the promise resolve function so that it can be called later on by another method\n\t\t\tthis.addNotificationToList( new NotifierNotification( action.payload ) );\n\t\t} );\n\t}\n\n\t/**\n\t * Continue to show a new notification (after the notification components is initialized / created / rendered).\n\t *\n\t * If this is the first (and thus only) notification, we can simply show it. Otherwhise, if stacking is disabled (or a low value), we\n\t * switch out notifications, in particular we hide the existing one, and then show our new one. Yet, if stacking is enabled, we first\n\t * shift all older notifications, and then show our new notification. In addition, if there are too many notification on the screen,\n\t * we hide the oldest one first. Furthermore, if configured, animation overlapping is applied.\n\t *\n\t * @param notification New notification to show\n\t */\n\tprivate continueHandleShowAction( notification: NotifierNotification ): void {\n\n\t\t// First (which means only one) notification in the list?\n\t\tconst numberOfNotifications: number = this.notifications.length;\n\t\tif ( numberOfNotifications === 1 ) {\n\t\t\tnotification.component.show().then( this.tempPromiseResolver ); // Done\n\t\t} else {\n\n\t\t\tconst implicitStackingLimit: number = 2;\n\n\t\t\t// Stacking enabled? (stacking value below 2 means stacking is disabled)\n\t\t\tif ( this.config.behaviour.stacking === false || this.config.behaviour.stacking < implicitStackingLimit ) {\n\t\t\t\tthis.notifications[ 0 ].component.hide().then( () => {\n\t\t\t\t\tthis.removeNotificationFromList( this.notifications[ 0 ] );\n\t\t\t\t\tnotification.component.show().then( this.tempPromiseResolver ); // Done\n\t\t\t\t} );\n\t\t\t} else {\n\n\t\t\t\tconst stepPromises: Array<Promise<undefined>> = [];\n\n\t\t\t\t// Are there now too many notifications?\n\t\t\t\tif ( numberOfNotifications > this.config.behaviour.stacking ) {\n\n\t\t\t\t\tconst oldNotifications: Array<NotifierNotification> = this.notifications.slice( 1, numberOfNotifications - 1 );\n\n\t\t\t\t\t// Are animations enabled?\n\t\t\t\t\tif ( this.config.animations.enabled ) {\n\n\t\t\t\t\t\t// Is animation overlap enabled?\n\t\t\t\t\t\tif ( this.config.animations.overlap !== false && this.config.animations.overlap > 0 ) {\n\t\t\t\t\t\t\tstepPromises.push( this.notifications[ 0 ].component.hide() );\n\t\t\t\t\t\t\tsetTimeout( () => {\n\t\t\t\t\t\t\t\tstepPromises.push( this.shiftNotifications( oldNotifications, notification.component.getHeight(), true ) );\n\t\t\t\t\t\t\t}, this.config.animations.hide.speed - this.config.animations.overlap );\n\t\t\t\t\t\t\tsetTimeout( () => {\n\t\t\t\t\t\t\t\tstepPromises.push( notification.component.show() );\n\t\t\t\t\t\t\t}, this.config.animations.hide.speed + this.config.animations.shift.speed - this.config.animations.overlap );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstepPromises.push( new Promise<undefined>( ( resolve: () => void, reject: () => void ) => {\n\t\t\t\t\t\t\t\tthis.notifications[ 0 ].component.hide().then( () => {\n\t\t\t\t\t\t\t\t\tthis.shiftNotifications( oldNotifications, notification.component.getHeight(), true ).then( () => {\n\t\t\t\t\t\t\t\t\t\tnotification.component.show().then( resolve );\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} ) );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstepPromises.push( this.notifications[ 0 ].component.hide() );\n\t\t\t\t\t\tstepPromises.push( this.shiftNotifications( oldNotifications, notification.component.getHeight(), true ) );\n\t\t\t\t\t\tstepPromises.push( notification.component.show() );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst oldNotifications: Array<NotifierNotification> = this.notifications.slice( 0, numberOfNotifications - 1 );\n\n\t\t\t\t\t// Are animations enabled?\n\t\t\t\t\tif ( this.config.animations.enabled ) {\n\n\t\t\t\t\t\t// Is animation overlap enabled?\n\t\t\t\t\t\tif ( this.config.animations.overlap !== false && this.config.animations.overlap > 0 ) {\n\t\t\t\t\t\t\tstepPromises.push( this.shiftNotifications( oldNotifications, notification.component.getHeight(), true ) );\n\t\t\t\t\t\t\tsetTimeout( () => {\n\t\t\t\t\t\t\t\tstepPromises.push( notification.component.show() );\n\t\t\t\t\t\t\t}, this.config.animations.shift.speed - this.config.animations.overlap );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstepPromises.push( new Promise<undefined>( ( resolve: () => void, reject: () => void ) => {\n\t\t\t\t\t\t\t\tthis.shiftNotifications( oldNotifications, notification.component.getHeight(), true ).then( () => {\n\t\t\t\t\t\t\t\t\tnotification.component.show().then( resolve );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} ) );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstepPromises.push( this.shiftNotifications( oldNotifications, notification.component.getHeight(), true ) );\n\t\t\t\t\t\tstepPromises.push( notification.component.show() );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tPromise.all( stepPromises ).then( () => {\n\t\t\t\t\tif ( numberOfNotifications > this.config.behaviour.stacking ) {\n\t\t\t\t\t\tthis.removeNotificationFromList( this.notifications[ 0 ] );\n\t\t\t\t\t}\n\t\t\t\t\tthis.tempPromiseResolver();\n\t\t\t\t} ); // Done\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Hide an existing notification\n\t *\n\t * Fist, we skip everything if there are no notifications at all, or the given notification does not exist. Then, we hide the given\n\t * notification. If there exist older notifications, we then shift them around to fill the gap. Once both hiding the given notification\n\t * and shifting the older notificaitons is done, the given notification gets finally removed (from the DOM).\n\t *\n\t * @param   action Action object, payload contains the notification ID\n\t * @returns Promise, resolved when done\n\t */\n\tprivate handleHideAction( action: NotifierAction ): Promise<undefined> {\n\t\treturn new Promise<undefined>( ( resolve: () => void, reject: () => void ) => {\n\n\t\t\tconst stepPromises: Array<Promise<undefined>> = [];\n\n\t\t\t// Does the notification exist / are there even any notifications? (let's prevent accidential errors)\n\t\t\tconst notification: NotifierNotification | undefined = this.findNotificationById( action.payload );\n\t\t\tif ( notification === undefined ) {\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get older notifications\n\t\t\tconst notificationIndex: number | undefined = this.findNotificationIndexById( action.payload );\n\t\t\tif ( notificationIndex === undefined ) {\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst oldNotifications: Array<NotifierNotification> = this.notifications.slice( 0, notificationIndex );\n\n\t\t\t// Do older notifications exist, and thus do we need to shift other notifications as a consequence?\n\t\t\tif ( oldNotifications.length > 0 ) {\n\n\t\t\t\t// Are animations enabled?\n\t\t\t\tif ( this.config.animations.enabled && this.config.animations.hide.speed > 0 ) {\n\n\t\t\t\t\t// Is animation overlap enabled?\n\t\t\t\t\tif ( this.config.animations.overlap !== false && this.config.animations.overlap > 0 ) {\n\t\t\t\t\t\tstepPromises.push( notification.component.hide() );\n\t\t\t\t\t\tsetTimeout( () => {\n\t\t\t\t\t\t\tstepPromises.push( this.shiftNotifications( oldNotifications, notification.component.getHeight(), false ) );\n\t\t\t\t\t\t}, this.config.animations.hide.speed - this.config.animations.overlap );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnotification.component.hide().then( () => {\n\t\t\t\t\t\t\tstepPromises.push( this.shiftNotifications( oldNotifications, notification.component.getHeight(), false ) );\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstepPromises.push( notification.component.hide() );\n\t\t\t\t\tstepPromises.push( this.shiftNotifications( oldNotifications, notification.component.getHeight(), false ) );\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstepPromises.push( notification.component.hide() );\n\n\t\t\t}\n\n\t\t\t// Wait until both hiding and shifting is done, then remove the notification from the list\n\t\t\tPromise.all( stepPromises ).then( () => {\n\t\t\t\tthis.removeNotificationFromList( notification );\n\t\t\t\tresolve(); // Done\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Hide the oldest notification (bridge to handleHideAction)\n\t *\n\t * @param   action Action object\n\t * @returns Promise, resolved when done\n\t */\n\tprivate handleHideOldestAction( action: NotifierAction ): Promise<undefined> {\n\n\t\t// Are there any notifications? (prevent accidential errors)\n\t\tif ( this.notifications.length === 0 ) {\n\t\t\treturn new Promise<undefined>( ( resolve: () => void, reject: () => void ) => {\n\t\t\t\tresolve();\n\t\t\t} ); // Done\n\t\t} else {\n\t\t\taction.payload = this.notifications[ 0 ].id;\n\t\t\treturn this.handleHideAction( action );\n\t\t}\n\n\t}\n\n\t/**\n\t * Hide the newest notification (bridge to handleHideAction)\n\t *\n\t * @param   action Action object\n\t * @returns Promise, resolved when done\n\t */\n\tprivate handleHideNewestAction( action: NotifierAction ): Promise<undefined> {\n\n\t\t// Are there any notifications? (prevent accidential errors)\n\t\tif ( this.notifications.length === 0 ) {\n\t\t\treturn new Promise<undefined>( ( resolve: () => void, reject: () => void ) => {\n\t\t\t\tresolve();\n\t\t\t} ); // Done\n\t\t} else {\n\t\t\taction.payload = this.notifications[ this.notifications.length - 1 ].id;\n\t\t\treturn this.handleHideAction( action );\n\t\t}\n\n\t}\n\n\t/**\n\t * Hide all notifications at once\n\t *\n\t * @param   action Action object\n\t * @returns Promise, resolved when done\n\t */\n\tprivate handleHideAllAction( action: NotifierAction ): Promise<undefined> {\n\t\treturn new Promise<undefined>( ( resolve: () => void, reject: () => void ) => {\n\n\t\t\t// Are there any notifications? (prevent accidential errors)\n\t\t\tconst numberOfNotifications: number = this.notifications.length;\n\t\t\tif ( numberOfNotifications === 0 ) {\n\t\t\t\tresolve(); // Done\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Are animations enabled?\n\t\t\tif ( this.config.animations.enabled && this.config.animations.hide.speed > 0 && this.config.animations.hide.offset !== false &&\n\t\t\t\tthis.config.animations.hide.offset > 0 ) {\n\n\t\t\t\tfor ( let i: number = numberOfNotifications - 1; i >= 0; i-- ) {\n\t\t\t\t\tconst animationOffset: number = this.config.position.vertical.position === 'top' ? numberOfNotifications - 1 : i;\n\t\t\t\t\tsetTimeout( () => {\n\t\t\t\t\t\tthis.notifications[ i ].component.hide().then( () => {\n\n\t\t\t\t\t\t\t// Are we done here, was this the last notification to be hidden?\n\t\t\t\t\t\t\tif ( ( this.config.position.vertical.position === 'top' && i === 0 ) ||\n\t\t\t\t\t\t\t\t( this.config.position.vertical.position === 'bottom' && i === numberOfNotifications - 1 ) ) {\n\t\t\t\t\t\t\t\tthis.removeAllNotificationsFromList();\n\t\t\t\t\t\t\t\tresolve(); // Done\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\t\t\t\t\t}, this.config.animations.hide.offset * animationOffset );\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tlet stepPromises: Array<Promise<undefined>> = [];\n\t\t\t\tfor ( let i: number = numberOfNotifications - 1; i >= 0; i-- ) {\n\t\t\t\t\tstepPromises.push( this.notifications[ i ].component.hide() );\n\t\t\t\t}\n\t\t\t\tPromise.all( stepPromises ).then( () => {\n\t\t\t\t\tthis.removeAllNotificationsFromList();\n\t\t\t\t\tresolve(); // Done\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} );\n\t}\n\n\t/**\n\t * Shift multiple notifications at once\n\t *\n\t * @param   notifications List containing the notifications to be shifted\n\t * @param   distance      Distance to shift (in px)\n\t * @param   toMakePlace   Flag, defining in which direciton to shift\n\t * @returns Promise, resolved when done\n\t */\n\tprivate shiftNotifications( notifications: Array<NotifierNotification>, distance: number, toMakePlace: boolean ): Promise<undefined> {\n\t\treturn new Promise<undefined>( ( resolve: () => void, reject: () => void ) => {\n\n\t\t\t// Are there any notifications to shift?\n\t\t\tif ( notifications.length === 0 ) {\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet notificationPromises: Array<Promise<undefined>> = [];\n\t\t\tfor ( let i: number = notifications.length - 1; i >= 0; i-- ) {\n\t\t\t\tnotificationPromises.push( notifications[ i ].component.shift( distance, toMakePlace ) );\n\t\t\t}\n\t\t\tPromise.all( notificationPromises ).then( resolve ); // Done\n\n\t\t} );\n\t}\n\n\t/**\n\t * Add a new notification to the list of notifications (triggers change detection)\n\t *\n\t * @param notification Notification to add to the list of notifications\n\t */\n\tprivate addNotificationToList( notification: NotifierNotification ): void {\n\t\tthis.notifications.push( notification );\n\t\tthis.changeDetector.markForCheck(); // Run change detection because the notification list changed\n\t}\n\n\t/**\n\t * Remove an existing notification from the list of notifications (triggers change detection)\n\t *\n\t * @param notification Notification to be removed from the list of notifications\n\t */\n\tprivate removeNotificationFromList( notification: NotifierNotification ): void {\n\t\tthis.notifications =\n\t\t\tthis.notifications.filter( ( item: NotifierNotification ) => item.component !== notification.component );\n\t\tthis.changeDetector.markForCheck(); // Run change detection because the notification list changed\n\t}\n\n\t/**\n\t * Remove all notifications from the list (triggers change detection)\n\t */\n\tprivate removeAllNotificationsFromList(): void {\n\t\tthis.notifications = [];\n\t\tthis.changeDetector.markForCheck(); // Run change detection because the notification list changed\n\t}\n\n\t/**\n\t * Helper: Find a notification in the notification list by a given notification ID\n\t *\n\t * @param   notificationId Notification ID, used for finding notification\n\t * @returns Notification, undefined if not found\n\t */\n\tprivate findNotificationById( notificationId: string ): NotifierNotification | undefined {\n\t\treturn this.notifications.find( ( currentNotification: NotifierNotification ) => currentNotification.id === notificationId );\n\t}\n\n\t/**\n\t * Helper: Find a notification's index by a given notification ID\n\t *\n\t * @param   notificationId Notification ID, used for finding a notification's index\n\t * @returns Notification index, undefined if not found\n\t */\n\tprivate findNotificationIndexById( notificationId: string ): number | undefined {\n\t\tconst notificationIndex: number =\n\t\t\tthis.notifications.findIndex( ( currentNotification: NotifierNotification ) => currentNotification.id === notificationId );\n\t\treturn ( notificationIndex !== -1 ? notificationIndex : undefined );\n\t}\n\n}\n","import { NotifierAnimationPreset, NotifierAnimationPresetKeyframes } from '../models/notifier-animation.model';\n\n/**\n * Fade animation preset\n */\nexport const fade: NotifierAnimationPreset = {\n\thide: (): NotifierAnimationPresetKeyframes => {\n\t\treturn {\n\t\t\tfrom: {\n\t\t\t\topacity: '1'\n\t\t\t},\n\t\t\tto: {\n\t\t\t\topacity: '0'\n\t\t\t}\n\t\t};\n\t},\n\tshow: (): NotifierAnimationPresetKeyframes => {\n\t\treturn {\n\t\t\tfrom: {\n\t\t\t\topacity: '0'\n\t\t\t},\n\t\t\tto: {\n\t\t\t\topacity: '1'\n\t\t\t}\n\t\t};\n\t}\n};\n","import { NotifierAnimationPreset, NotifierAnimationPresetKeyframes } from '../models/notifier-animation.model';\nimport { NotifierConfig } from '../models/notifier-config.model';\nimport { NotifierNotification } from '../models/notifier-notification.model';\n\n/**\n * Slide animation preset\n */\nexport const slide: NotifierAnimationPreset = {\n\thide: ( notification: NotifierNotification ): NotifierAnimationPresetKeyframes => {\n\n\t\t// Prepare variables\n\t\tconst config: NotifierConfig = notification.component.getConfig();\n\t\tconst shift: number = notification.component.getShift();\n\t\tlet from: {\n\t\t\t[ animatablePropertyName: string ]: string;\n\t\t};\n\t\tlet to: {\n\t\t\t[ animatablePropertyName: string ]: string;\n\t\t};\n\n\t\t// Configure variables, depending on configuration and component\n\t\tif ( config.position.horizontal.position === 'left' ) {\n\t\t\tfrom = {\n\t\t\t\ttransform: `translate3d( 0, ${ shift }px, 0 )`\n\t\t\t};\n\t\t\tto = {\n\t\t\t\ttransform: `translate3d( calc( -100% - ${ config.position.horizontal.distance }px - 10px ), ${ shift }px, 0 )`\n\t\t\t};\n\t\t} else if ( config.position.horizontal.position === 'right' ) {\n\t\t\tfrom = {\n\t\t\t\ttransform: `translate3d( 0, ${ shift }px, 0 )`\n\t\t\t};\n\t\t\tto = {\n\t\t\t\ttransform: `translate3d( calc( 100% + ${ config.position.horizontal.distance }px + 10px ), ${ shift }px, 0 )`\n\t\t\t};\n\t\t} else {\n\t\t\tlet horizontalPosition: string;\n\t\t\tif ( config.position.vertical.position === 'top' ) {\n\t\t\t\thorizontalPosition = `calc( -100% - ${ config.position.horizontal.distance }px - 10px )`;\n\t\t\t} else {\n\t\t\t\thorizontalPosition = `calc( 100% + ${ config.position.horizontal.distance }px + 10px )`;\n\t\t\t}\n\t\t\tfrom = {\n\t\t\t\ttransform: `translate3d( -50%, ${ shift }px, 0 )`\n\t\t\t};\n\t\t\tto = {\n\t\t\t\ttransform: `translate3d( -50%, ${ horizontalPosition }, 0 )`\n\t\t\t};\n\t\t}\n\n\t\t// Done\n\t\treturn {\n\t\t\tfrom,\n\t\t\tto\n\t\t};\n\n\t},\n\tshow: ( notification: NotifierNotification ): NotifierAnimationPresetKeyframes => {\n\n\t\t// Prepare variables\n\t\tconst config: NotifierConfig = notification.component.getConfig();\n\t\tlet from: {\n\t\t\t[ animatablePropertyName: string ]: string;\n\t\t};\n\t\tlet to: {\n\t\t\t[ animatablePropertyName: string ]: string;\n\t\t};\n\n\t\t// Configure variables, depending on configuration and component\n\t\tif ( config.position.horizontal.position === 'left' ) {\n\t\t\tfrom = {\n\t\t\t\ttransform: `translate3d( calc( -100% - ${ config.position.horizontal.distance }px - 10px ), 0, 0 )`\n\t\t\t};\n\t\t\tto = {\n\t\t\t\ttransform: 'translate3d( 0, 0, 0 )'\n\t\t\t};\n\t\t} else if ( config.position.horizontal.position === 'right' ) {\n\t\t\tfrom = {\n\t\t\t\ttransform: `translate3d( calc( 100% + ${ config.position.horizontal.distance }px + 10px ), 0, 0 )`\n\t\t\t};\n\t\t\tto = {\n\t\t\t\ttransform: 'translate3d( 0, 0, 0 )'\n\t\t\t};\n\t\t} else {\n\t\t\tlet horizontalPosition: string;\n\t\t\tif ( config.position.vertical.position === 'top' ) {\n\t\t\t\thorizontalPosition = `calc( -100% - ${ config.position.horizontal.distance }px - 10px )`;\n\t\t\t} else {\n\t\t\t\thorizontalPosition = `calc( 100% + ${ config.position.horizontal.distance }px + 10px )`;\n\t\t\t}\n\t\t\tfrom = {\n\t\t\t\ttransform: `translate3d( -50%, ${ horizontalPosition }, 0 )`\n\t\t\t};\n\t\t\tto = {\n\t\t\t\ttransform: 'translate3d( -50%, 0, 0 )'\n\t\t\t};\n\t\t}\n\n\t\t// Done\n\t\treturn {\n\t\t\tfrom,\n\t\t\tto\n\t\t};\n\n\t}\n};\n","import { Injectable } from '@angular/core';\n\nimport { NotifierAnimationData, NotifierAnimationPreset, NotifierAnimationPresetKeyframes } from '../models/notifier-animation.model';\nimport { NotifierNotification } from '../models/notifier-notification.model';\nimport { fade } from '../animation-presets/fade.animation-preset';\nimport { slide } from '../animation-presets/slide.animation-preset';\n\n/**\n * Notifier animation service\n */\n@Injectable()\nexport class NotifierAnimationService {\n\n\t/**\n\t * List of animation presets (currently static)\n\t */\n\tprivate readonly animationPresets: {\n\t\t[ animationPresetName: string ]: NotifierAnimationPreset\n\t};\n\n\t/**\n\t * Constructor\n\t */\n\tpublic constructor() {\n\t\tthis.animationPresets = {\n\t\t\tfade,\n\t\t\tslide\n\t\t};\n\t}\n\n\t/**\n\t * Get animation data\n\t *\n\t * This method generates all data the Web Animations API needs to animate our notification. The result depends on both the animation\n\t * direction (either in or out) as well as the notifications (and its attributes) itself.\n\t *\n\t * @param   direction    Animation direction, either in or out\n\t * @param   notification Notification the animation data should be generated for\n\t * @returns Animation information\n\t */\n\tpublic getAnimationData( direction: 'show' | 'hide', notification: NotifierNotification ): NotifierAnimationData {\n\n\t\t// Get all necessary animation data\n\t\tlet keyframes: NotifierAnimationPresetKeyframes;\n\t\tlet duration: number;\n\t\tlet easing: string;\n\t\tif ( direction === 'show' ) {\n\t\t\tkeyframes = this.animationPresets[ notification.component.getConfig().animations.show.preset ].show( notification );\n\t\t\tduration = notification.component.getConfig().animations.show.speed;\n\t\t\teasing = notification.component.getConfig().animations.show.easing;\n\t\t} else {\n\t\t\tkeyframes = this.animationPresets[ notification.component.getConfig().animations.hide.preset ].hide( notification );\n\t\t\tduration = notification.component.getConfig().animations.hide.speed;\n\t\t\teasing = notification.component.getConfig().animations.hide.easing;\n\t\t}\n\n\t\t// Build and return animation data\n\t\treturn {\n\t\t\tkeyframes: [\n\t\t\t\tkeyframes.from,\n\t\t\t\tkeyframes.to\n\t\t\t],\n\t\t\toptions: {\n\t\t\t\tduration,\n\t\t\t\teasing,\n\t\t\t\tfill: 'forwards' // Keep the newly painted state after the animation finished\n\t\t\t}\n\t\t};\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Notifier timer service\n *\n * This service acts as a timer, needed due to the still rather limited setTimeout JavaScript API. The timer service can start and stop a\n * timer. Furthermore, it can also pause the timer at any time, and resume later on. The timer API workd promise-based.\n */\n@Injectable()\nexport class NotifierTimerService {\n\n\t/**\n\t * Timestamp (in ms), created in the moment the timer starts\n\t */\n\tprivate now: number;\n\n\t/**\n\t * Remaining time (in ms)\n\t */\n\tprivate remaining: number;\n\n\t/**\n\t * Timeout ID, used for clearing the timeout later on\n\t */\n\tprivate timerId: number;\n\n\t/**\n\t * Promise resolve function, eventually getting called once the timer finishes\n\t */\n\tprivate finishPromiseResolver: () => void;\n\n\t/**\n\t * Constructor\n\t */\n\tpublic constructor() {\n\t\tthis.now = 0;\n\t\tthis.remaining = 0;\n\t}\n\n\t/**\n\t * Start (or resume) the timer\n\t *\n\t * @param   duration Timer duration, in ms\n\t * @returns          Promise, resolved once the timer finishes\n\t */\n\tpublic start( duration: number ): Promise<undefined> {\n\t\treturn new Promise<undefined>( ( resolve: () => void, reject: () => void ) => {\n\n\t\t\t// For the first run ...\n\t\t\tthis.remaining = duration;\n\n\t\t\t// Setup, then start the timer\n\t\t\tthis.finishPromiseResolver = resolve;\n\t\t\tthis.continue();\n\n\t\t} );\n\t}\n\n\t/**\n\t * Pause the timer\n\t */\n\tpublic pause(): void {\n\t\tclearTimeout( this.timerId );\n\t\tthis.remaining -= new Date().getTime() - this.now;\n\t}\n\n\t/**\n\t * Continue the timer\n\t */\n\tpublic continue(): void {\n\t\tthis.now = new Date().getTime();\n\t\tthis.timerId = window.setTimeout( () => {\n\t\t\tthis.finish();\n\t\t}, this.remaining );\n\t}\n\n\t/**\n\t * Stop the timer\n\t */\n\tpublic stop(): void {\n\t\tclearTimeout( this.timerId );\n\t\tthis.remaining = 0;\n\t}\n\n\t/**\n\t * Finish up the timeout by resolving the timer promise\n\t */\n\tprivate finish(): void {\n\t\tthis.finishPromiseResolver();\n\t}\n\n}\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, Renderer2 } from '@angular/core';\n\nimport { NotifierAnimationData } from '../models/notifier-animation.model';\nimport { NotifierAnimationService } from '../services/notifier-animation.service';\nimport { NotifierConfig } from '../models/notifier-config.model';\nimport { NotifierNotification } from '../models/notifier-notification.model';\nimport { NotifierService } from '../services/notifier.service';\nimport { NotifierTimerService } from '../services/notifier-timer.service';\n\n/**\n * Notifier notification component\n * -------------------------------\n * This component is responsible for actually displaying the notification on screen. In addition, it's able to show and hide this\n * notification, in particular to animate this notification in and out, as well as shift (move) this notification vertically around.\n * Furthermore, the notification component handles all interactions the user has with this notification / component, such as clicks and\n * mouse movements.\n */\n@Component( {\n\tchangeDetection: ChangeDetectionStrategy.OnPush, // (#perfmatters)\n\thost: {\n\t\t'(click)': 'onNotificationClick()',\n\t\t'(mouseout)': 'onNotificationMouseout()',\n\t\t'(mouseover)': 'onNotificationMouseover()',\n\t\tclass: 'notifier__notification'\n\t},\n\tproviders: [\n\t\t// We provide the timer to the component's local injector, so that every notification components gets its own\n\t\t// instance of the timer service, thus running their timers independently from each other\n\t\tNotifierTimerService\n\t],\n\tselector: 'notifier-notification',\n\ttemplateUrl: './notifier-notification.component.html'\n} )\nexport class NotifierNotificationComponent implements AfterViewInit {\n\n\t/**\n\t * Input: Notification object, contains all details necessary to construct the notification\n\t */\n\t@Input()\n\tpublic notification: NotifierNotification;\n\n\t/**\n\t * Output: Ready event, handles the initialization success by emitting a reference to this notification component\n\t */\n\t@Output()\n\tpublic ready: EventEmitter<NotifierNotificationComponent>;\n\n\t/**\n\t * Output: Dismiss event, handles the click on the dismiss button by emitting the notification ID of this notification component\n\t */\n\t@Output()\n\tpublic dismiss: EventEmitter<string>;\n\n\t/**\n\t * Notifier configuration\n\t */\n\tpublic readonly config: NotifierConfig;\n\n\t/**\n\t * Notifier timer service\n\t */\n\tprivate readonly timerService: NotifierTimerService;\n\n\t/**\n\t * Notifier animation service\n\t */\n\tprivate readonly animationService: NotifierAnimationService;\n\n\t/**\n\t * Angular renderer, used to preserve the overall DOM abstraction & independence\n\t */\n\tprivate readonly renderer: Renderer2;\n\n\t/**\n\t * Native element reference, used for manipulating DOM properties\n\t */\n\tprivate readonly element: HTMLElement;\n\n\t/**\n\t * Current notification height, calculated and cached here (#perfmatters)\n\t */\n\tprivate elementHeight: number;\n\n\t/**\n\t * Current notification width, calculated and cached here (#perfmatters)\n\t */\n\tprivate elementWidth: number;\n\n\t/**\n\t * Current notification shift, calculated and cached here (#perfmatters)\n\t */\n\tprivate elementShift: number;\n\n\t/**\n\t * Constructor\n\t *\n\t * @param elementRef               Reference to the component's element\n\t * @param renderer                 Angular renderer\n\t * @param notifierService          Notifier service\n\t * @param notifierTimerService     Notifier timer service\n\t * @param notifierAnimationService Notifier animation service\n\t */\n\tpublic constructor( elementRef: ElementRef, renderer: Renderer2, notifierService: NotifierService,\n\t\tnotifierTimerService: NotifierTimerService, notifierAnimationService: NotifierAnimationService ) {\n\t\tthis.config = notifierService.getConfig();\n\t\tthis.ready = new EventEmitter<NotifierNotificationComponent>();\n\t\tthis.dismiss = new EventEmitter<string>();\n\t\tthis.timerService = notifierTimerService;\n\t\tthis.animationService = notifierAnimationService;\n\t\tthis.renderer = renderer;\n\t\tthis.element = elementRef.nativeElement;\n\t\tthis.elementShift = 0;\n\t}\n\n\t/**\n\t * Component after view init lifecycle hook, setts up the component and then emits the ready event\n\t */\n\tpublic ngAfterViewInit(): void {\n\t\tthis.setup();\n\t\tthis.elementHeight = this.element.offsetHeight;\n\t\tthis.elementWidth = this.element.offsetWidth;\n\t\tthis.ready.emit( this );\n\t}\n\n\t/**\n\t * Get the notifier config\n\t *\n\t * @returns Notifier configuration\n\t */\n\tpublic getConfig(): NotifierConfig {\n\t\treturn this.config;\n\t}\n\n\t/**\n\t * Get notification element height (in px)\n\t *\n\t * @returns Notification element height (in px)\n\t */\n\tpublic getHeight(): number {\n\t\treturn this.elementHeight;\n\t}\n\n\t/**\n\t * Get notification element width (in px)\n\t *\n\t * @returns Notification element height (in px)\n\t */\n\tpublic getWidth(): number {\n\t\treturn this.elementWidth;\n\t}\n\n\t/**\n\t * Get notification shift offset (in px)\n\t *\n\t * @returns Notification element shift offset (in px)\n\t */\n\tpublic getShift(): number {\n\t\treturn this.elementShift;\n\t}\n\n\t/**\n\t * Show (animate in) this notification\n\t *\n\t * @returns Promise, resolved when done\n\t */\n\tpublic show(): Promise<undefined> {\n\t\treturn new Promise<undefined>( ( resolve: () => void, reject: () => void ) => {\n\n\t\t\t// Are animations enabled?\n\t\t\tif ( this.config.animations.enabled && this.config.animations.show.speed > 0 ) {\n\n\t\t\t\t// Get animation data\n\t\t\t\tconst animationData: NotifierAnimationData = this.animationService.getAnimationData( 'show', this.notification );\n\n\t\t\t\t// Set initial styles (styles before animation), prevents quick flicker when animation starts\n\t\t\t\tconst animatedProperties: Array<string> = Object.keys( animationData.keyframes[ 0 ] );\n\t\t\t\tfor ( let i: number = animatedProperties.length - 1; i >= 0; i-- ) {\n\t\t\t\t\tthis.renderer.setStyle( this.element, animatedProperties[ i ],\n\t\t\t\t\t\tanimationData.keyframes[ 0 ][ animatedProperties[ i ] ] );\n\t\t\t\t}\n\n\t\t\t\t// Animate notification in\n\t\t\t\tthis.renderer.setStyle( this.element, 'visibility', 'visible' );\n\t\t\t\tconst animation: Animation = this.element.animate( animationData.keyframes, animationData.options );\n\t\t\t\tanimation.onfinish = () => {\n\t\t\t\t\tthis.startAutoHideTimer();\n\t\t\t\t\tresolve(); // Done\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\t// Show notification\n\t\t\t\tthis.renderer.setStyle( this.element, 'visibility', 'visible' );\n\t\t\t\tthis.startAutoHideTimer();\n\t\t\t\tresolve(); // Done\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Hide (animate out) this notification\n\t *\n\t * @returns Promise, resolved when done\n\t */\n\tpublic hide(): Promise<undefined> {\n\t\treturn new Promise<undefined>( ( resolve: () => void, reject: () => void ) => {\n\n\t\t\tthis.stopAutoHideTimer();\n\n\t\t\t// Are animations enabled?\n\t\t\tif ( this.config.animations.enabled && this.config.animations.hide.speed > 0 ) {\n\t\t\t\tconst animationData: NotifierAnimationData = this.animationService.getAnimationData( 'hide', this.notification );\n\t\t\t\tconst animation: Animation = this.element.animate( animationData.keyframes, animationData.options );\n\t\t\t\tanimation.onfinish = () => {\n\t\t\t\t\tresolve(); // Done\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tresolve(); // Done\n\t\t\t}\n\n\t\t} );\n\t}\n\n\t/**\n\t * Shift (move) this notification\n\t *\n\t * @param   distance         Distance to shift (in px)\n\t * @param   shiftToMakePlace Flag, defining in which direction to shift\n\t * @returns Promise, resolved when done\n\t */\n\tpublic shift( distance: number, shiftToMakePlace: boolean ): Promise<undefined> {\n\t\treturn new Promise<undefined>( ( resolve: () => void, reject: () => void ) => {\n\n\t\t\t// Calculate new position (position after the shift)\n\t\t\tlet newElementShift: number;\n\t\t\tif ( ( this.config.position.vertical.position === 'top' && shiftToMakePlace )\n\t\t\t\t|| ( this.config.position.vertical.position === 'bottom' && !shiftToMakePlace ) ) {\n\t\t\t\tnewElementShift = this.elementShift + distance + this.config.position.vertical.gap;\n\t\t\t} else {\n\t\t\t\tnewElementShift = this.elementShift - distance - this.config.position.vertical.gap;\n\t\t\t}\n\t\t\tconst horizontalPosition: string = this.config.position.horizontal.position === 'middle' ? '-50%' : '0';\n\n\t\t\t// Are animations enabled?\n\t\t\tif ( this.config.animations.enabled && this.config.animations.shift.speed > 0 ) {\n\t\t\t\tconst animationData: NotifierAnimationData = { // TODO: Extract into animation service\n\t\t\t\t\tkeyframes: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttransform: `translate3d( ${ horizontalPosition }, ${ this.elementShift }px, 0 )`\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttransform: `translate3d( ${ horizontalPosition }, ${ newElementShift }px, 0 )`\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tduration: this.config.animations.shift.speed,\n\t\t\t\t\t\teasing: this.config.animations.shift.easing,\n\t\t\t\t\t\tfill: 'forwards'\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tthis.elementShift = newElementShift;\n\t\t\t\tconst animation: Animation = this.element.animate( animationData.keyframes, animationData.options );\n\t\t\t\tanimation.onfinish = () => {\n\t\t\t\t\tresolve(); // Done\n\t\t\t\t};\n\n\t\t\t} else {\n\t\t\t\tthis.renderer.setStyle( this.element, 'transform', `translate3d( ${ horizontalPosition }, ${ newElementShift }px, 0 )` );\n\t\t\t\tthis.elementShift = newElementShift;\n\t\t\t\tresolve(); // Done\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Handle click on dismiss button\n\t */\n\tpublic onClickDismiss(): void {\n\t\tthis.dismiss.emit( this.notification.id );\n\t}\n\n\t/**\n\t * Handle mouseover over notification area\n\t */\n\tpublic onNotificationMouseover(): void {\n\t\tif ( this.config.behaviour.onMouseover === 'pauseAutoHide' ) {\n\t\t\tthis.pauseAutoHideTimer();\n\t\t} else if ( this.config.behaviour.onMouseover === 'resetAutoHide' ) {\n\t\t\tthis.stopAutoHideTimer();\n\t\t}\n\t}\n\n\t/**\n\t * Handle mouseout from notification area\n\t */\n\tpublic onNotificationMouseout(): void {\n\t\tif ( this.config.behaviour.onMouseover === 'pauseAutoHide' ) {\n\t\t\tthis.continueAutoHideTimer();\n\t\t} else if ( this.config.behaviour.onMouseover === 'resetAutoHide' ) {\n\t\t\tthis.startAutoHideTimer();\n\t\t}\n\t}\n\n\t/**\n\t * Handle click on notification area\n\t */\n\tpublic onNotificationClick(): void {\n\t\tif ( this.config.behaviour.onClick === 'hide' ) {\n\t\t\tthis.onClickDismiss();\n\t\t}\n\t}\n\n\t/**\n\t * Start the auto hide timer (if enabled)\n\t */\n\tprivate startAutoHideTimer(): void {\n\t\tif ( this.config.behaviour.autoHide !== false && this.config.behaviour.autoHide > 0 ) {\n\t\t\tthis.timerService.start( this.config.behaviour.autoHide ).then( () => {\n\t\t\t\tthis.onClickDismiss();\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Pause the auto hide timer (if enabled)\n\t */\n\tprivate pauseAutoHideTimer(): void {\n\t\tif ( this.config.behaviour.autoHide !== false && this.config.behaviour.autoHide > 0 ) {\n\t\t\tthis.timerService.pause();\n\t\t}\n\t}\n\n\t/**\n\t * Continue the auto hide timer (if enabled)\n\t */\n\tprivate continueAutoHideTimer(): void {\n\t\tif ( this.config.behaviour.autoHide !== false && this.config.behaviour.autoHide > 0 ) {\n\t\t\tthis.timerService.continue();\n\t\t}\n\t}\n\n\t/**\n\t * Stop the auto hide timer (if enabled)\n\t */\n\tprivate stopAutoHideTimer(): void {\n\t\tif ( this.config.behaviour.autoHide !== false && this.config.behaviour.autoHide > 0 ) {\n\t\t\tthis.timerService.stop();\n\t\t}\n\t}\n\n\t/**\n\t * Initial notification setup\n\t */\n\tprivate setup(): void {\n\n\t\t// Set start position (initially the exact same for every new notification)\n\t\tif ( this.config.position.horizontal.position === 'left' ) {\n\t\t\tthis.renderer.setStyle( this.element, 'left', `${ this.config.position.horizontal.distance }px` );\n\t\t} else if ( this.config.position.horizontal.position === 'right' ) {\n\t\t\tthis.renderer.setStyle( this.element, 'right', `${ this.config.position.horizontal.distance }px` );\n\t\t} else {\n\t\t\tthis.renderer.setStyle( this.element, 'left', '50%' );\n\t\t\t// Let's get the GPU handle some work as well (#perfmatters)\n\t\t\tthis.renderer.setStyle( this.element, 'transform', 'translate3d( -50%, 0, 0 )' );\n\t\t}\n\t\tif ( this.config.position.vertical.position === 'top' ) {\n\t\t\tthis.renderer.setStyle( this.element, 'top', `${ this.config.position.vertical.distance }px` );\n\t\t} else {\n\t\t\tthis.renderer.setStyle( this.element, 'bottom', `${ this.config.position.vertical.distance }px` );\n\t\t}\n\n\t\t// Add classes (responsible for visual design)\n\t\tthis.renderer.addClass( this.element, `notifier__notification--${ this.notification.type }` );\n\t\tthis.renderer.addClass( this.element, `notifier__notification--${ this.config.theme }` );\n\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { NotifierContainerComponent } from './components/notifier-container.component';\nimport { NotifierNotificationComponent } from './components/notifier-notification.component';\nimport { NotifierConfig, NotifierOptions } from './models/notifier-config.model';\nimport { NotifierAnimationService } from './services/notifier-animation.service';\nimport { NotifierQueueService } from './services/notifier-queue.service';\nimport { NotifierService } from './services/notifier.service';\nimport { NotifierConfigToken, NotifierOptionsToken } from './notifier.tokens';\n\n/**\n * Factory for a notifier configuration with custom options\n *\n * Sidenote:\n * Required as Angular AoT compilation cannot handle dynamic functions; see <https://github.com/angular/angular/issues/11262>.\n *\n * @param   options - Custom notifier options\n * @returns - Notifier configuration as result\n */\nexport function notifierCustomConfigFactory( options: NotifierOptions ): NotifierConfig {\n\treturn new NotifierConfig( options );\n}\n\n/**\n * Factory for a notifier configuration with default options\n *\n * Sidenote:\n * Required as Angular AoT compilation cannot handle dynamic functions; see <https://github.com/angular/angular/issues/11262>.\n *\n * @returns - Notifier configuration as result\n */\nexport function notifierDefaultConfigFactory(): NotifierConfig {\n\treturn new NotifierConfig( {} );\n}\n\n/**\n * Notifier module\n */\n@NgModule( {\n\tdeclarations: [\n\t\tNotifierContainerComponent,\n\t\tNotifierNotificationComponent\n\t],\n\texports: [\n\t\tNotifierContainerComponent\n\t],\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tNotifierAnimationService,\n\t\tNotifierService,\n\t\tNotifierQueueService,\n\n\t\t// Provide the default notifier configuration if just the module is imported\n\t\t{\n\t\t\tprovide: NotifierConfigToken,\n\t\t\tuseFactory: notifierDefaultConfigFactory\n\t\t}\n\n\t]\n} )\nexport class NotifierModule {\n\n\t/**\n\t * Setup the notifier module with custom providers, in this case with a custom configuration based on the givne options\n\t *\n\t * @param   [options={}] - Custom notifier options\n\t * @returns - Notifier module with custom providers\n\t */\n\tpublic static withConfig( options: NotifierOptions = {} ): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: NotifierModule,\n\t\t\tproviders: [\n\n\t\t\t\t// Provide the options itself upfront (as we need to inject them as dependencies -- see below)\n\t\t\t\t{\n\t\t\t\t\tprovide: NotifierOptionsToken,\n\t\t\t\t\tuseValue: options\n\t\t\t\t},\n\n\t\t\t\t// Provide a custom notifier configuration, based on the given notifier options\n\t\t\t\t{\n\t\t\t\t\tdeps: [\n\t\t\t\t\t\tNotifierOptionsToken\n\t\t\t\t\t],\n\t\t\t\t\tprovide: NotifierConfigToken,\n\t\t\t\t\tuseFactory: notifierCustomConfigFactory\n\t\t\t\t}\n\n\t\t\t]\n\t\t};\n\t}\n\n}\n"]}