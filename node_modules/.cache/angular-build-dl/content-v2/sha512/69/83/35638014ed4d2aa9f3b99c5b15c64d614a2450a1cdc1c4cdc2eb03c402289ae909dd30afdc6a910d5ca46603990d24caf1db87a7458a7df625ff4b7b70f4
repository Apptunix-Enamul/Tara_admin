{"version":3,"sources":["webpack:///src/app/pages/geofence/geofence-routing.module.ts","webpack:///src/app/pages/geofence/geofence.component.ts","webpack:///src/app/pages/geofence/geofence.component.html","webpack:///src/app/pages/geofence/geofence.module.ts","webpack:///src/app/pages/geofence/geofenceadd/geofenceadd.component.ts","webpack:///src/app/pages/geofence/geofenceadd/geofenceadd.component.html","webpack:///src/app/pages/geofence/geofenceedit/geofenceedit.component.ts","webpack:///src/app/pages/geofence/geofenceedit/geofenceedit.component.html","webpack:///src/app/pages/geofence/geofencelist/geofencelist.component.ts","webpack:///src/app/pages/geofence/geofencelist/geofencelist.component.html"],"names":["routes","path","component","children","data","title","urls","url","GeofenceRoutingModule","forChild","imports","exports","GeofenceComponent","selector","templateUrl","styleUrls","GeofenceModule","declarations","GeofenceaddComponent","toaster","mapsAPILoader","router","fb","apiService","lat","lng","latA","lngA","zoom","polyarray","submitted","styles","featureType","stylers","saturation","elementType","hue","visibility","setCurrentLocation","event","pattAlpha","resultAlpha","test","key","geofenceForm","group","geofenceName","required","maxLength","deliverycharges","load","then","geoCoder","google","maps","Geocoder","latitude","longitude","geocode","results","status","navigator","geolocation","getCurrentPosition","position","coords","getAddress","map","options","drawingControl","drawingControlOptions","drawingModes","drawing","OverlayType","POLYGON","polygonOptions","draggable","editable","drawingMode","drawingManager","DrawingManager","setMap","addListener","type","overlay","getPath","getArray","Map","initDrawingManager","valid","length","progress","geofenceData","get","value","postApi","subscribe","res","console","log","success","message","navigate","reset","error","invalid","AlphabetOnly","$event","preventDefault","NumberOnly","onMapReady","save","GeofenceeditComponent","act","service","addgeofence","fencingList","vacantDriversList","otherDriversList","vacantDriverView","vacantDrivers","params","id","patchValue","name","deliveryPrice","geoPoints","coordinates","geoFenceId","_id","locationPoints","onEdit","history","back","geoId","drawPolygonArr","forEach","element","push","constructTriangle","Polygon","paths","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","getPolygonCoordinates","draggablePolygon","len","getLength","polyArrayLatLng","i","vertex","getAt","vertexLatLng","put","onMapReady1","submitData","GeofencelistComponent","modalService","content3","open","backdropClass","centered","size","content4","editspeech"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,qEAFb;AAGEC,gBAAQ,EAAE,CACR;AACEF,cAAI,EAAE,EADR;AAEEC,mBAAS,EAAE,0FAFb;AAGEE,cAAI,EAAE;AACJC,iBAAK,EAAE,eADH;AAEJC,gBAAI,EAAE,CACJ;AAAED,mBAAK,EAAE,WAAT;AAAsBE,iBAAG,EAAE;AAA3B,aADI,EAEJ;AAAEF,mBAAK,EAAE;AAAT,aAFI;AAFF;AAHR,SADQ,EAYR;AACEJ,cAAI,EAAE,KADR;AAEEC,mBAAS,EAAE,uFAFb;AAGEE,cAAI,EAAE;AACJC,iBAAK,EAAE,cADH;AAEJC,gBAAI,EAAE,CACJ;AAAED,mBAAK,EAAE,WAAT;AAAsBE,iBAAG,EAAE;AAA3B,aADI,EAEJ;AAAEF,mBAAK,EAAE;AAAT,aAFI;AAFF;AAHR,SAZQ,EAuBR;AACEJ,cAAI,EAAE,MADR;AAEEC,mBAAS,EAAE,0FAFb;AAGEE,cAAI,EAAE;AACJC,iBAAK,EAAE,eADH;AAEJC,gBAAI,EAAE,CACJ;AAAED,mBAAK,EAAE,WAAT;AAAsBE,iBAAG,EAAE;AAA3B,aADI,EAEJ;AAAEF,mBAAK,EAAE;AAAT,aAFI;AAFF;AAHR,SAvBQ;AAHZ,OADqB,CAAvB;;UA8CaG,qB;;;;;cAAAA;;;;2BAAAA,qB;AAAqB,S;AAAA,kBAHvB,CAAC,6DAAaC,QAAb,CAAsBT,MAAtB,CAAD,CAGuB,EAFtB,4DAEsB;;;;4HAArBQ,qB,EAAqB;AAAA;AAAA,oBAFtB,4DAEsB;AAAA,S;AAFV,O;;;;;wEAEXA,qB,EAAqB;gBAJjC,sDAIiC;iBAJxB;AACRE,mBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBT,MAAtB,CAAD,CADD;AAERW,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAIwB,U;;;;;;;;;;;;;;;;;;ACrDlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,iB;AAEX,qCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,iB;AAAiB,O;;;cAAjBA,iB;AAAiB,qC;AAAA,gB;AAAA,e;AAAA;AAAA;ACP9B;;;;;;;;;wEDOaA,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACTC,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,0BAAD;AAHF,W;AAKmB,U;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,uE,CAOA;;;UAiBaC,c;;;;;cAAAA;;;;2BAAAA,c;AAAc,S;AAAA,kBAThB,CACP,4DADO,EAEP,8EAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,uDALO,CASgB;;;;4HAAdA,c,EAAc;AAAA,yBAVV,0FAUU,EAVa,0FAUb,EAVoC,qEAUpC,EAVsD,uFAUtD;AAV0E,oBAEjG,4DAFiG,EAGjG,8EAHiG,EAIjG,0DAJiG,EAKjG,kEALiG,EAMjG,uDANiG;AAU1E,S;AAJV,O;;;;;wEAIJA,c,EAAc;gBAX1B,sDAW0B;iBAXjB;AACRC,wBAAY,EAAE,CAAC,0FAAD,EAAwB,0FAAxB,EAA+C,qEAA/C,EAAiE,uFAAjE,CADN;AAERP,mBAAO,EAAE,CACP,4DADO,EAEP,8EAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,uDALO;AAFD,W;AAWiB,U;;;;;;;;;;;;;;;;;;ACxB1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACQuB;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AAKA;;AACI;;AACJ;;;;UDRXQ,oB;AA+CX,sCAAoBC,OAApB,EAAoDC,aAApD,EAA0FC,MAA1F,EAAkHC,EAAlH,EAA2IC,UAA3I,EAAsK;AAAA;;AAAlJ,eAAAJ,OAAA,GAAAA,OAAA;AAAgC,eAAAC,aAAA,GAAAA,aAAA;AAAsC,eAAAC,MAAA,GAAAA,MAAA;AAAwB,eAAAC,EAAA,GAAAA,EAAA;AAAyB,eAAAC,UAAA,GAAAA,UAAA;AA7C3I,eAAAC,GAAA,GAAM,CAAC,MAAP;AACA,eAAAC,GAAA,GAAM,OAAN;AACA,eAAAC,IAAA,GAAO,CAAC,SAAR;AACA,eAAAC,IAAA,GAAO,UAAP;AACA,eAAAC,IAAA,GAAO,CAAP;AAKA,eAAAC,SAAA,GAAiB,EAAjB;AAEA,eAAAC,SAAA,GAAoB,KAApB;AAGA,eAAAC,MAAA,GAAc,CACZ;AACEC,uBAAW,EAAE,KADf;AAEEC,mBAAO,EAAE,CACP;AACEC,wBAAU,EAAE,CAAC;AADf,aADO;AAFX,WADY,EASZ;AACEF,uBAAW,EAAE,eADf;AAEEG,uBAAW,EAAE,UAFf;AAGEF,mBAAO,EAAE,CACP;AACEG,iBAAG,EAAE;AADP,aADO,EAIP;AACEF,wBAAU,EAAE;AADd,aAJO;AAHX,WATY,EAqBZ;AACEF,uBAAW,EAAE,cADf;AAEEG,uBAAW,EAAE,QAFf;AAGEF,mBAAO,EAAE,CACP;AACEI,wBAAU,EAAE;AADd,aADO;AAHX,WArBY,CAAd;AAgCE,eAAKC,kBAAL;AACD;;;;uCAEYC,K,EAAK;AAChB,gBAAIC,SAAS,GAAG,gBAAhB;AACA,gBAAIC,WAAW,GAAGD,SAAS,CAACE,IAAV,CAAeH,KAAK,CAACI,GAArB,CAAlB;AACA,mBAAOF,WAAP;AACE;;;qCAEUF,K,EAAK;AACf,gBAAIC,SAAS,GAAG,YAAhB;AACA,gBAAIC,WAAW,GAAGD,SAAS,CAACE,IAAV,CAAeH,KAAK,CAACI,GAArB,CAAlB;AACA,mBAAOF,WAAP;AACE;;;qCAEE;AAAA;;AACN,iBAAKG,YAAL,GAAoB,KAAKtB,EAAL,CAAQuB,KAAR,CAAc;AAChCC,0BAAY,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWC,QAAZ,EAAqB,0DAAWC,SAAX,CAAqB,EAArB,CAArB,CAAL,CADkB;AAEhCC,6BAAe,EAAC,CAAC,EAAD,EAAI,0DAAWF,QAAf;AAFgB,aAAd,CAApB;AAIA,iBAAK3B,aAAL,CAAmB8B,IAAnB,GAA0BC,IAA1B,CAA+B,YAAM;AACnC,mBAAI,CAACC,QAAL,GAAgB,IAAIC,MAAM,CAACC,IAAP,CAAYC,QAAhB,EAAhB;AACD,aAFD;AAGD;;;qCACUC,Q,EAAUC,S,EAAW;AAC9B,iBAAKL,QAAL,CAAcM,OAAd,CAAsB;AAAE,0BAAY;AAAElC,mBAAG,EAAEgC,QAAP;AAAiB/B,mBAAG,EAAEgC;AAAtB;AAAd,aAAtB,EAAyE,UAACE,OAAD,EAAUC,MAAV,EAAqB,CAChG,CADE;AAED;;;+CACoB;AAAA;;AACnB,gBAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,uBAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAACC,QAAD,EAAc;AAErD,sBAAI,CAACxC,GAAL,GAAWwC,QAAQ,CAACC,MAAT,CAAgBT,QAA3B;AACA,sBAAI,CAAC/B,GAAL,GAAWuC,QAAQ,CAACC,MAAT,CAAgBR,SAA3B;AACA,sBAAI,CAAC7B,IAAL,GAAY,EAAZ;;AACA,sBAAI,CAACsC,UAAL,CAAgB,MAAI,CAAC1C,GAArB,EAA0B,MAAI,CAACC,GAA/B;AACD,eAND;AAOD;AACF;;;6CACkB0C,G,EAAU;AAAA;;AAE3B,gBAAMC,OAAO,GAAG;AACdC,4BAAc,EAAE,IADF;AAEdC,mCAAqB,EAAE;AAErBC,4BAAY,EAAE,CAAClB,MAAM,CAACC,IAAP,CAAYkB,OAAZ,CAAoBC,WAApB,CAAgCC,OAAjC;AAFO,eAFT;AAMdC,4BAAc,EAAE;AACdC,yBAAS,EAAE,IADG;AAEdC,wBAAQ,EAAE;AAFI,eANF;AAUdC,yBAAW,EAAEzB,MAAM,CAACC,IAAP,CAAYkB,OAAZ,CAAoBC,WAApB,CAAgCC;AAV/B,aAAhB;AAcA,iBAAKK,cAAL,GAAsB,IAAI1B,MAAM,CAACC,IAAP,CAAYkB,OAAZ,CAAoBQ,cAAxB,CAAuCZ,OAAvC,CAAtB;AACA,iBAAKW,cAAL,CAAoBE,MAApB,CAA2Bd,GAA3B;AAGAd,kBAAM,CAACC,IAAP,CAAYf,KAAZ,CAAkB2C,WAAlB,CAA8B,KAAKH,cAAnC,EAAmD,iBAAnD,EACE,UAACxC,KAAD,EAAW;AAET,kBAAIA,KAAK,CAAC4C,IAAN,KAAe9B,MAAM,CAACC,IAAP,CAAYkB,OAAZ,CAAoBC,WAApB,CAAgCC,OAAnD,EAA4D;AAAE;AAC5D,sBAAI,CAAC7C,SAAL,GAAiBU,KAAK,CAAC6C,OAAN,CAAcC,OAAd,GAAwBC,QAAxB,EAAjB;AACD;AACF,aANH;AAQD;;;qCACUnB,G,EAAK;AACd,iBAAKoB,GAAL,GAAWpB,GAAX;AACA,iBAAKqB,kBAAL,CAAwB,KAAKD,GAA7B;AACD;;;iCACM;AAAA;;AACL,iBAAKzD,SAAL,GAAiB,IAAjB;AACJ,gBAAIvB,GAAG,iBAAP;;AACI,gBAAI,KAAKqC,YAAL,CAAkB6C,KAAlB,IAA2B,KAAK5D,SAAL,CAAe6D,MAAf,GAAwB,CAAvD,EAA0D;AAC3D,mBAAKC,QAAL,GAAgB,IAAhB;AACG,kBAAIC,YAAY,GAAG;AACjB,wBAAQ,KAAKhD,YAAL,CAAkBiD,GAAlB,CAAsB,cAAtB,EAAsCC,KAD7B;AAEjB,iCAAgB,KAAKlD,YAAL,CAAkBiD,GAAlB,CAAsB,iBAAtB,EAAyCC,KAFxC;AAGjB,0BAAU,KAAKjE;AAHE,eAAnB;;AAKN,kBAAG,KAAKe,YAAL,CAAkB6C,KAArB,EAA2B;AACzB,qBAAKlE,UAAL,CAAgBwE,OAAhB,CAAwBxF,GAAxB,EAA4BqF,YAA5B,EAA0CI,SAA1C,CAAoD,UAACC,GAAD,EAAa;AAC/DC,yBAAO,CAACC,GAAR,CAAY,UAAZ;;AACA,sBAAIF,GAAG,CAACG,OAAR,EAAiB;AACf,0BAAI,CAACT,QAAL,GAAgB,KAAhB;;AACA,0BAAI,CAACxE,OAAL,CAAaiF,OAAb,CAAqBH,GAAG,CAACI,OAAzB;;AACA,0BAAI,CAAChF,MAAL,CAAYiF,QAAZ,CAAqB,CAAC,oBAAD,CAArB;;AACA,0BAAI,CAAC1D,YAAL,CAAkB2D,KAAlB;;AACA,0BAAI,CAACzE,SAAL,GAAiB,KAAjB;AACD,mBAND,MAMO;AACL,0BAAI,CAAC6D,QAAL,GAAgB,KAAhB;;AACA,0BAAI,CAACxE,OAAL,CAAaqF,KAAb,CAAmBP,GAAG,CAACI,OAAvB;AACD;AACF,iBAZD,EAaA,UAAAG,KAAK,EAAI;AACP,wBAAI,CAACrF,OAAL,CAAaqF,KAAb,CAAmB,sBAAnB;AACA,iBAfF;AAiBD,eAlBD,MAkBO;AACL,qBAAKrF,OAAL,CAAaqF,KAAb,CAAmB,yEAAnB;AAED;AACA,aA7BG,MA6BE,IAAG,KAAK5D,YAAL,CAAkB6D,OAArB,EAA6B;AACjC,mBAAKtF,OAAL,CAAaqF,KAAb,CAAmB,uBAAnB;AACD;AAAC;;;;;;;yBA1JWtF,oB,EAAoB,yH,EAAA,wH,EAAA,uH,EAAA,2H,EAAA,8I;AAAA,O;;;cAApBA,oB;AAAoB,wC;AAAA;AAAA;;;;;;;;;;;;;;;ACZjC;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAO;;AAAI;;AACX;;AAAmB;AAAA,qBAAY,IAAAwF,YAAA,QAAZ;AAAgC,aAAhC,EAAiC,eAAjC,EAAiC;AAAA,qBAAkBC,MAAM,CAACC,cAAP,EAAlB;AAAyC,aAA1E;;AAAnB;;AACA;;AAGA;;AAGJ;;AACA;;AACI;;AAAQ;;AAAsB;;AAC9B;;AAAwC;AAAA,qBAAY,IAAAC,UAAA,QAAZ;AAA8B,aAA9B,EAA+B,eAA/B,EAA+B;AAAA,qBAAkBF,MAAM,CAACC,cAAP,EAAlB;AAAyC,aAAxE;;AAAxC;;AACA;;AAGJ;;AACJ;;AACA;;AAAkF;AAAA,qBAAY,IAAAE,UAAA,QAAZ;AAA8B,aAA9B;;AAC9E;;AACJ;;AAEA;;AAAqC;AAAA,qBAAS,IAAAC,IAAA,EAAT;AAAe,aAAf;;AAAiB;;AAAI;;AAE9D;;AACJ;;AACJ;;AACJ;;;;AA5BsB;;AAAA;;AAIa;;AAAA;;AAGA;;AAAA;;AAOA;;AAAA;;AAKV;;AAAA,0FAAgB,WAAhB,EAAgB,OAAhB,EAAgB,MAAhB,EAAgB,QAAhB,EAAgB,QAAhB,EAAgB,UAAhB;;AACO;;AAAA,0FAAgB,WAAhB,EAAgB,OAAhB,EAAgB,iBAAhB,EAAgB,KAAhB;;;;;;;;;wEDZnB7F,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACTL,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKsB,U;;;;;;;;;;;;;;kBAC9B,uD;mBAAU,Q,EAAU;AAAE,wBAAQ;AAAV,a;;;;;;;;;;;;;;;;;;;;AEbvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;ACQwB;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AAMA;;AACI;;AACJ;;;;;;;;UDTXiG,qB;AAmFX,uCAAoBC,GAApB,EAA+C9F,OAA/C,EAA4E+F,OAA5E,EAA0G9F,aAA1G,EAAgJC,MAAhJ,EAAwKC,EAAxK,EAAyL;AAAA;;AAAA;;AAArK,eAAA2F,GAAA,GAAAA,GAAA;AAA2B,eAAA9F,OAAA,GAAAA,OAAA;AAA6B,eAAA+F,OAAA,GAAAA,OAAA;AAA8B,eAAA9F,aAAA,GAAAA,aAAA;AAAsC,eAAAC,MAAA,GAAAA,MAAA;AAAwB,eAAAC,EAAA,GAAAA,EAAA;AA/ExK,eAAAE,GAAA,GAAM,CAAC,MAAP;AACA,eAAAC,GAAA,GAAM,OAAN;AACA,eAAAC,IAAA,GAAO,CAAC,SAAR;AACA,eAAAC,IAAA,GAAO,UAAP;AAQA,eAAAC,IAAA,GAAe,EAAf;AAEA,eAAAC,SAAA,GAAiB,EAAjB;AAIA,eAAAsF,WAAA,GAAuB,IAAvB;AACA,eAAAC,WAAA,GAAmB,EAAnB;AAIA,eAAAC,iBAAA,GAAyB,EAAzB;AAEA,eAAAC,gBAAA,GAAwB,EAAxB;AACA,eAAAC,gBAAA,GAA4B,KAA5B;AAEA,eAAAC,aAAA,GAAqB,EAArB;AAkBA,eAAAzF,MAAA,GAAc,CACZ;AACEC,uBAAW,EAAE,KADf;AAEEC,mBAAO,EAAE,CACP;AACEC,wBAAU,EAAE,CAAC;AADf,aADO;AAFX,WADY,EASZ;AACEF,uBAAW,EAAE,eADf;AAEEG,uBAAW,EAAE,UAFf;AAGEF,mBAAO,EAAE,CACP;AACEG,iBAAG,EAAE;AADP,aADO,EAIP;AACEF,wBAAU,EAAE;AADd,aAJO;AAHX,WATY,EAqBZ;AACEF,uBAAW,EAAE,cADf;AAEEG,uBAAW,EAAE,QAFf;AAGEF,mBAAO,EAAE,CACP;AACEI,wBAAU,EAAE;AADd,aADO;AAHX,WArBY,CAAd;AAmCE,eAAK4E,GAAL,CAASQ,MAAT,CAAgBzB,SAAhB,CAA0B,UAACC,GAAD,EAAW;AACnC,kBAAI,CAACyB,EAAL,GAAUzB,GAAG,CAACyB,EAAd;AACD,WAFD;AAGD;;;;qCACO;AAAA;;AACN;AACA,iBAAK9E,YAAL,GAAoB,KAAKtB,EAAL,CAAQuB,KAAR,CAAc;AAChCC,0BAAY,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWC,QAAZ,EAAqB,0DAAWC,SAAX,CAAqB,EAArB,CAArB,CAAL,CADkB;AAEhCC,6BAAe,EAAC,CAAC,EAAD,EAAI,0DAAWF,QAAf;AAFgB,aAAd,CAApB;AAIA,iBAAK3B,aAAL,CAAmB8B,IAAnB,GAA0BC,IAA1B,CAA+B,YAAM;AACnC,oBAAI,CAACC,QAAL,GAAgB,IAAIC,MAAM,CAACC,IAAP,CAAYC,QAAhB,EAAhB;AACD,aAFD;AAGD;;;wCACU;AAAA;;AACT,gBAAIhD,GAAG,8BAAsB,KAAKmH,EAA3B,CAAP;AACA,iBAAKR,OAAL,CAAarB,GAAb,CAAiBtF,GAAjB,EAAsByF,SAAtB,CAAgC,UAACC,GAAD,EAAW;AAC1C,kBAAIA,GAAG,CAACI,OAAJ,IAAa,SAAjB,EAA4B;AAC3B;AACAH,uBAAO,CAACC,GAAR,CAAYF,GAAZ;;AACC,sBAAI,CAACrD,YAAL,CAAkB+E,UAAlB,CAA6B;AAC5B7E,8BAAY,EAAEmD,GAAG,CAAC7F,IAAJ,CAAS,CAAT,EAAYwH,IADE;AAE5B3E,iCAAe,EAACgD,GAAG,CAAC7F,IAAJ,CAAS,CAAT,EAAYyH;AAFA,iBAA7B;;AAIA3B,uBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BF,GAAG,CAAC7F,IAAJ,CAAS,CAAT,EAAY0H,SAAZ,CAAsBC,WAApD;AACA,sBAAI,CAACC,UAAL,GAAkB/B,GAAG,CAAC7F,IAAJ,CAAS,CAAT,EAAY6H,GAA9B;AACA,sBAAI,CAACC,cAAL,GAAsBjC,GAAG,CAAC7F,IAAJ,CAAS,CAAT,EAAY0H,SAAZ,CAAsBC,WAAtB,CAAkC,CAAlC,CAAtB;AACA7B,uBAAO,CAACC,GAAR,CAAY,WAAZ,EAAwB,MAAI,CAAC+B,cAA7B;;AACA,sBAAI,CAACC,MAAL,CAAY,MAAI,CAACD,cAAjB,EAAiC,MAAI,CAACF,UAAtC;AACD,eAZD,MAYO,CACN;AACA;AACD,aAhBD,EAgBG,UAAAxB,KAAK,EAAI,CACZ;AACC,aAlBD;AAmBD;;;iCAEM;AACL4B,mBAAO,CAACC,IAAR;AACD;;;iCAEMH,c,EAAgBI,K,EAAO;AAAA;;AAE5B,iBAAKN,UAAL,GAAkB,EAAlB,CAF4B,CAG5B;;AAEA,iBAAKA,UAAL,GAAkBM,KAAlB;AACA,gBAAIC,cAAc,GAAG,EAArB;AACAL,0BAAc,CAACM,OAAf,CAAuB,UAAAC,OAAO,EAAI;AAChCF,4BAAc,CAACG,IAAf,CAAoB;AAClBlH,mBAAG,EAAEiH,OAAO,CAAC,CAAD,CADM;AAElBhH,mBAAG,EAAEgH,OAAO,CAAC,CAAD;AAFM,eAApB;AAIA,oBAAI,CAACjF,QAAL,GAAgBiF,OAAO,CAAC,CAAD,CAAvB;AACA,oBAAI,CAAChF,SAAL,GAAiBgF,OAAO,CAAC,CAAD,CAAxB;AACD,aAPD;AAQAvC,mBAAO,CAACC,GAAR,CAAYoC,cAAZ;;AACA,gBAAI,KAAKI,iBAAT,EAA4B;AAC1B,mBAAKA,iBAAL,CAAuB1D,MAAvB,CAA8B,IAA9B;AACD,aAlB2B,CAmB5B;;;AACA,iBAAK0D,iBAAL,GAAyB,IAAItF,MAAM,CAACC,IAAP,CAAYsF,OAAhB,CAAwB;AAC/CC,mBAAK,EAAEN,cADwC;AAE/CO,yBAAW,EAAE,SAFkC;AAG/CC,2BAAa,EAAE,GAHgC;AAI/CC,0BAAY,EAAE,CAJiC;AAK/CC,uBAAS,EAAE,SALoC;AAM/CC,yBAAW,EAAE,IANkC;AAO/CrE,sBAAQ,EAAE,IAPqC;AAQ/CD,uBAAS,EAAE;AARoC,aAAxB,CAAzB;AAUA,iBAAK+D,iBAAL,CAAuB1D,MAAvB,CAA8B,IAA9B;AAEA,iBAAK0D,iBAAL,CAAuB1D,MAAvB,CAA8B,KAAKM,GAAnC;AAIAW,mBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,KAAKtE,SAApC;AAED;;;iCAEM;AACL,iBAAKsH,qBAAL,CAA2B,KAAKR,iBAAhC;AACD;;;qCAEUnF,Q,EAAUC,S,EAAW;AAC9B,iBAAKL,QAAL,CAAcM,OAAd,CAAsB;AAAE,0BAAY;AAAElC,mBAAG,EAAEgC,QAAP;AAAiB/B,mBAAG,EAAEgC;AAAtB;AAAd,aAAtB,EAAyE,UAACE,OAAD,EAAUC,MAAV,EAAqB,CAE7F,CAFD;AAGD;;;qCAEUO,G,EAAK;AACd,iBAAKoB,GAAL,GAAWpB,GAAX,CADc,CAEd;AACD;;;sCACWA,G,EAAK;AACf,iBAAKoB,GAAL,GAAWpB,GAAX;AACA,iBAAKqB,kBAAL,CAAwB,KAAKD,GAA7B;AAED;;;6CAGkBpB,G,EAAU;AAAA;;AAC3B,iBAAKY,cAAL,GAAsB,IAAI1B,MAAM,CAACC,IAAP,CAAYkB,OAAZ,CAAoBQ,cAAxB,CAAuC;AAC3DX,4BAAc,EAAE,IAD2C;AAE3DC,mCAAqB,EAAE;AAErBC,4BAAY,EAAE,CAAClB,MAAM,CAACC,IAAP,CAAYkB,OAAZ,CAAoBC,WAApB,CAAgCC,OAAjC;AAFO,eAFoC;AAM3DC,4BAAc,EAAE;AACdC,yBAAS,EAAE,IADG;AAEdC,wBAAQ,EAAE;AAFI,eAN2C;AAU3DC,yBAAW,EAAEzB,MAAM,CAACC,IAAP,CAAYkB,OAAZ,CAAoBC,WAApB,CAAgCC;AAVc,aAAvC,CAAtB;AAaA,iBAAKK,cAAL,CAAoBE,MAApB,CAA2Bd,GAA3B;AAGAd,kBAAM,CAACC,IAAP,CAAYf,KAAZ,CAAkB2C,WAAlB,CAA8B,KAAKH,cAAnC,EAAmD,iBAAnD,EACE,UAACxC,KAAD,EAAW;AACT,kBAAIA,KAAK,CAAC4C,IAAN,KAAe9B,MAAM,CAACC,IAAP,CAAYkB,OAAZ,CAAoBC,WAApB,CAAgCC,OAAnD,EAA4D;AAAE;AAE5D,sBAAI,CAAC7C,SAAL,GAAiBU,KAAK,CAAC6C,OAAN,CAAcC,OAAd,GAAwBC,QAAxB,EAAjB;AACD;AACF,aANH;AAQD;;;uCAES;AAER,iBAAKxD,SAAL,GAAe,IAAf;AACA,iBAAKqH,qBAAL,CAA2B,KAAKR,iBAAhC;AACD;;;gDAGqBS,gB,EAAkB;AAAA;;AAEtC,gBAAMC,GAAG,GAAGD,gBAAgB,CAAC/D,OAAjB,GAA2BiE,SAA3B,EAAZ;AACA,gBAAMC,eAAe,GAAG,EAAxB;;AAEA,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAApB,EAAyBG,CAAC,EAA1B,EAA8B;AAC5B,kBAAMC,MAAM,GAAGL,gBAAgB,CAAC/D,OAAjB,GAA2BqE,KAA3B,CAAiCF,CAAjC,CAAf;AACA,kBAAMG,YAAY,GAAG;AAAEnI,mBAAG,EAAEiI,MAAM,CAACjI,GAAP,EAAP;AAAqBC,mBAAG,EAAEgI,MAAM,CAAChI,GAAP;AAA1B,eAArB;AACA8H,6BAAe,CAACb,IAAhB,CAAqBiB,YAArB;AACD;;AAED,gBAAI,KAAK/G,YAAL,CAAkB6C,KAAlB,IAA2B8D,eAAe,CAAC7D,MAA/C,EAAuD;AACrD,mBAAKyB,WAAL,GAAmB,KAAnB;AACA,kBAAIvB,YAAY,GAAG;AACjB,wBAAQ,KAAKhD,YAAL,CAAkBiD,GAAlB,CAAsB,cAAtB,EAAsCC,KAD7B;AAEjB,iCAAiB,KAAKlD,YAAL,CAAkBiD,GAAlB,CAAsB,iBAAtB,EAAyCC,KAFzC;AAIjB,0BAAUyD;AAJO,eAAnB,CAFqD,CAQrD;;AACC,mBAAKrC,OAAL,CAAa0C,GAAb,CAAiB,KAAK5B,UAAtB,EAAiCpC,YAAjC,EAA+CI,SAA/C,CAAyD,UAACC,GAAD,EAAa;AAErE,oBAAIA,GAAG,CAAC,SAAD,CAAH,IAAkB,IAAtB,EAA4B;AAC1B,yBAAI,CAACkB,WAAL,GAAmB,KAAnB;;AACA,yBAAI,CAAChG,OAAL,CAAaiF,OAAb,CAAqBH,GAAG,CAACI,OAAzB;;AAEA,yBAAI,CAAChF,MAAL,CAAYiF,QAAZ,CAAqB,CAAC,qBAAD,CAArB;AACD,iBALD,MAKO;AACL,yBAAI,CAACnF,OAAL,CAAaqF,KAAb,CAAmBP,GAAG,CAACI,OAAvB;AACD;AAEF,eAXA;AAYF,aArBD,MAqBO,CACL;AACD;AAGF;;;;;;;yBAjQUW,qB,EAAqB,+H,EAAA,yH,EAAA,8I,EAAA,wH,EAAA,uH,EAAA,2H;AAAA,O;;;cAArBA,qB;AAAqB,yC;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACZlC;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAO;;AAAI;;AACX;;AAAwC;AAAA,qBAAiBL,MAAM,CAACC,cAAP,EAAjB;AAAwC,aAAxC;;AAAxC;;AACA;;AAGA;;AAIJ;;AACA;;AACI;;AAAQ;;AAAsB;;AAC9B;;AAAwC;AAAA,qBAAiBD,MAAM,CAACC,cAAP,EAAjB;AAAwC,aAAxC;;AAAxC;;AACA;;AAGJ;;AACJ;;AACA;;AAAmE;AAAA,qBAAY,IAAAiD,WAAA,QAAZ;AAA+B,aAA/B;;AACnE;;AAEA;;AAAwE;AAAA,qBAAS,IAAAC,UAAA,EAAT;AAAqB,aAArB;;AAAuB;;AAAM;;AACrG;;AAAyH;;AAAI;;AAEjI;;AACJ;;AACJ;;AACJ;;;;AA7BsB;;AAAA;;AAIa;;AAAA;;AAGA;;AAAA;;AAQA;;AAAA;;AAKV;;AAAA,+FAAqB,WAArB,EAAqB,aAArB,EAAqB,MAArB,EAAqB,EAArB;;AAG4B;;AAAA;;AACM;;AAAA;;;;;;;;;wEDhB9C9C,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACTnG,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKuB,U;;;;;;;;;;;;;;;;kBAC/B,uD;mBAAU,M,EAAQ;AAAE,wBAAQ;AAAV,a;;;kBAuBlB,uD;mBAAU,Q,EAAU;AAAE,wBAAQ;AAAV,a;;;;;;;;;;;;;;;;;;;;AEpCvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC2CI;;AACI;;AAAwB;;AAAY;;AACpC;;AAAuD;AAAA;AAAA,mBAAS,iBAAc,aAAd,CAAT;AAAqC,WAArC;;AAAuC;;AAAyB;;AAAO;;AAAO;;AACzI;;AACA;;AACI;;AACI;;AACI;;AAAO;;AAAI;;AACX;;AACJ;;AACJ;;AACA;;AACA;;AAAoB;;AAAmC;;AAAI;;AAAS;;AACxE;;;;;;AAFa;;AAAA,2FAAgB,WAAhB,EAAgB,UAAhB,EAAgB,MAAhB,EAAgB,WAAhB,EAAgB,QAAhB,EAAgB,aAAhB;;;;;;AAMb;;AACI;;AAAwB;;AAAa;;AACrC;;AAAuD;AAAA;AAAA,mBAAS,iBAAc,aAAd,CAAT;AAAqC,WAArC;;AAC3D;;AAAyB;;AAAO;;AAClC;;AACE;;AACA;;AACI;;AACI;;AACI;;AAAO;;AAAI;;AACX;;AACJ;;AACJ;;AACA;;AACA;;AAAoB;;AAAmC;;AAAI;;AAAS;;AACxE;;;;;;AAFa;;AAAA,2FAAgB,WAAhB,EAAgB,UAAhB,EAAgB,MAAhB,EAAgB,WAAhB,EAAgB,QAAhB,EAAgB,aAAhB;;;;UDjEJgJ,qB;AA0CX,uCAAoBC,YAApB,EAA4C;AAAA;;AAAxB,eAAAA,YAAA,GAAAA,YAAA;AAtCpB,eAAAxI,GAAA,GAAM,CAAC,MAAP;AACA,eAAAC,GAAA,GAAM,OAAN;AACA,eAAAC,IAAA,GAAO,CAAC,SAAR;AACA,eAAAC,IAAA,GAAO,UAAP;AACA,eAAAC,IAAA,GAAO,CAAP;AAEA,eAAAG,MAAA,GAAc,CACZ;AACEC,uBAAW,EAAE,KADf;AAEEC,mBAAO,EAAE,CACP;AACEC,wBAAU,EAAE,CAAC;AADf,aADO;AAFX,WADY,EASZ;AACEF,uBAAW,EAAE,eADf;AAEEG,uBAAW,EAAE,UAFf;AAGEF,mBAAO,EAAE,CACP;AACEG,iBAAG,EAAE;AADP,aADO,EAIP;AACEF,wBAAU,EAAE;AADd,aAJO;AAHX,WATY,EAqBZ;AACEF,uBAAW,EAAE,cADf;AAEEG,uBAAW,EAAE,QAFf;AAGEF,mBAAO,EAAE,CACP;AACEI,wBAAU,EAAE;AADd,aADO;AAHX,WArBY,CAAd;AAgC+C;;;;qCAEvC,CACP;;;oCACS4H,Q,EAAU;AAClB,iBAAKD,YAAL,CAAkBE,IAAlB,CAAuBD,QAAvB,EAAiC;AAACE,2BAAa,EAAE,qBAAhB;AAAsCC,sBAAQ,EAAE,IAAhD;AAAqDC,kBAAI,EAAE;AAA3D,aAAjC;AACD;;;qCACUC,Q,EAAU;AACnB,iBAAKN,YAAL,CAAkBE,IAAlB,CAAuBI,QAAvB,EAAiC;AAACH,2BAAa,EAAE,qBAAhB;AAAsCC,sBAAQ,EAAE,IAAhD;AAAqDC,kBAAI,EAAE;AAA3D,aAAjC;AACD;;;;;;;yBAnDUN,qB,EAAqB,oI;AAAA,O;;;cAArBA,qB;AAAqB,yC;AAAA;AAAA;;;;;;;;;;;;;;;;;ACRlC;;AACI;;AACI;;AACI;;AAEI;;AAA4E;;AAAY;;AAE5F;;AACA;;AACI;;AACI;;AACI;;AAGI;;AAAmB;;AAAY;;AAAsB;;AAA6D;;AAAiC;;AAAI;;AAAyC;;AAA4B;;AAAI;;AAAO;;AAE3O;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAmB;;AAAY;;AAAsB;;AAA0B;AAAA;;AAAA;;AAAA,qBAAS,IAAAQ,UAAA,KAAT;AAA6B,aAA7B;;AAA+B;;AAAiC;;AAAI;;AAAyC;;AAA4B;;AAAI;;AAAO;;AACvO;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAmB;;AAAY;;AAAsB;;AAA0B;AAAA;;AAAA;;AAAA,qBAAS,IAAAA,UAAA,KAAT;AAA6B,aAA7B;;AAA+B;;AAAiC;;AAAI;;AAAyC;;AAA4B;;AAAI;;AAAO;;AACvO;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AAiBA;;;;;;;;;wEDnDaR,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACTlJ,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKuB,U;;;;;;kBAC/B,uD;mBAAU,M,EAAQ;AAAE,wBAAQ;AAAV,a","file":"geofence-geofence-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GeofenceComponent } from './geofence.component';\nimport { GeofenceaddComponent } from './geofenceadd/geofenceadd.component';\nimport { GeofenceeditComponent } from './geofenceedit/geofenceedit.component';\nimport { GeofencelistComponent } from './geofencelist/geofencelist.component';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: GeofenceComponent,\n    children: [\n      {\n        path: \"\",\n        component: GeofencelistComponent,\n        data: {\n          title: 'Geofence List',\n          urls: [\n            { title: 'Dashboard', url: '/dashboard' },\n            { title: 'Geofence' }\n          ]\n        }\n      },\n      {\n        path: \"add\",\n        component: GeofenceaddComponent,\n        data: {\n          title: 'Add Geofence',\n          urls: [\n            { title: 'Dashboard', url: '/dashboard' },\n            { title: 'Geofence' }\n          ]\n        }\n      },\n      {\n        path: \"edit\",\n        component: GeofenceeditComponent,\n        data: {\n          title: 'Edit Geofence',\n          urls: [\n            { title: 'Dashboard', url: '/dashboard' },\n            { title: 'Geofence' }\n          ]\n        }\n      },\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GeofenceRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-geofence',\n  templateUrl: './geofence.component.html',\n  styleUrls: ['./geofence.component.css']\n})\nexport class GeofenceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GeofenceComponent } from './geofence.component';\n\nimport { GeofenceRoutingModule } from './geofence-routing.module';\nimport { GeofencelistComponent } from './geofencelist/geofencelist.component';\nimport { GeofenceeditComponent } from './geofenceedit/geofenceedit.component';\n// import { GeofenceaddComponent } from './geofenceadd/geofenceadd.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AgmCoreModule } from '@agm/core';\nimport { GeofenceaddComponent } from './geofenceadd/geofenceadd.component';\n\n\n@NgModule({\n  declarations: [GeofencelistComponent, GeofenceeditComponent, GeofenceComponent,GeofenceaddComponent],\n  imports: [\n    CommonModule,\n    GeofenceRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AgmCoreModule,\n\n  ]\n})\nexport class GeofenceModule { }\n"," import { MapsAPILoader } from '@agm/core';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { CommonService } from 'src/app/_services/common.service';\nimport {Loader, LoaderOptions} from 'google-maps';\n@Component({\n  selector: 'app-geofenceadd',\n  templateUrl: './geofenceadd.component.html',\n  styleUrls: ['./geofenceadd.component.css']\n})\nexport class GeofenceaddComponent implements OnInit {\n  @ViewChild(\"AgmMap\", { static: true }) Map: any;\n  lat = -34.397;\n  lng = 150.644;\n  latA = -34.754764;\n  lngA = 149.736246;\n  zoom = 8;\n  longitude: number;\n  //zoom: number;\n  geoCoder: google.maps.Geocoder;\n  drawingManager: google.maps.drawing.DrawingManager;\n  polyarray: any = [];\n  geofenceForm: FormGroup\n  submitted:boolean = false\n  progress: boolean;\n  sub: any;\n  styles: any = [\n    {\n      featureType: 'all',\n      stylers: [\n        {\n          saturation: -80\n        }\n      ]\n    },\n    {\n      featureType: 'road.arterial',\n      elementType: 'geometry',\n      stylers: [\n        {\n          hue: '#00ffee'\n        },\n        {\n          saturation: 50\n        }\n      ]\n    },\n    {\n      featureType: 'poi.business',\n      elementType: 'labels',\n      stylers: [\n        {\n          visibility: 'off'\n        }\n      ]\n    }\n  ];\n  constructor(private toaster: ToastrService, private mapsAPILoader: MapsAPILoader, private router: Router, private fb: FormBuilder, private apiService: CommonService) { \n    this.setCurrentLocation()\n  }\n\n  AlphabetOnly(event){\n    let pattAlpha = /^([a-zA-Z ])*$/;\n    let resultAlpha = pattAlpha.test(event.key);\n    return resultAlpha;\n     }\n  \n     NumberOnly(event){\n      let pattAlpha = /^([0-9])*$/;\n      let resultAlpha = pattAlpha.test(event.key);\n      return resultAlpha;\n       }\n\n  ngOnInit(): void {\n    this.geofenceForm = this.fb.group({\n      geofenceName: ['', [Validators.required,Validators.maxLength(30)]],\n      deliverycharges:['',Validators.required]\n    })\n    this.mapsAPILoader.load().then(() => {\n      this.geoCoder = new google.maps.Geocoder;\n    });\n  }\n  getAddress(latitude, longitude) {\n    this.geoCoder.geocode({ 'location': { lat: latitude, lng: longitude } }, (results, status) => {\n });\n  }\n  setCurrentLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n\n        this.lat = position.coords.latitude;\n        this.lng = position.coords.longitude;\n        this.zoom = 11;\n        this.getAddress(this.lat, this.lng);\n      });\n    }\n  }\n  initDrawingManager(map: any) { // method is used to create POLYGON\n\n    const options = {\n      drawingControl: true,\n      drawingControlOptions: {\n\n        drawingModes: [google.maps.drawing.OverlayType.POLYGON]\n      },\n      polygonOptions: {\n        draggable: true,\n        editable: true\n      },\n      drawingMode: google.maps.drawing.OverlayType.POLYGON\n    };\n\n\n    this.drawingManager = new google.maps.drawing.DrawingManager(options);\n    this.drawingManager.setMap(map);\n\n\n    google.maps.event.addListener(this.drawingManager, 'overlaycomplete',\n      (event) => {\n\n        if (event.type === google.maps.drawing.OverlayType.POLYGON) { //this is the coordinate, you can assign it to a variable or pass into another function. \n          this.polyarray = event.overlay.getPath().getArray();\n        }\n      });\n\n  }\n  onMapReady(map) {\n    this.Map = map;\n    this.initDrawingManager(this.Map);\n  }\n  save() {\n    this.submitted = true\nlet url = `/addGeofence`\n    if (this.geofenceForm.valid && this.polyarray.length > 0) {\n   this.progress = true\n      var geofenceData = {\n        \"name\": this.geofenceForm.get('geofenceName').value,\n        \"deliveryPrice\":this.geofenceForm.get('deliverycharges').value,\n        \"points\": this.polyarray\n      }\nif(this.geofenceForm.valid){\n  this.apiService.postApi(url,geofenceData).subscribe((res:any) => {\n    console.log('This is ')\n    if (res.success) {\n      this.progress = false\n      this.toaster.success(res.message)\n      this.router.navigate(['pages/geofencelist'])\n      this.geofenceForm.reset()\n      this.submitted = false\n    } else {\n      this.progress = false\n      this.toaster.error(res.message)\n    }\n  },\n  error => {\n    this.toaster.error('Something went wrong');\n   });\n  \n} else {\n  this.toaster.error('Make Sure you have typed in the name and selected the area for geofence')\n\n}\n}else if(this.geofenceForm.invalid){\n  this.toaster.error('Please fill all field')\n}}\n\n}     \n\n  \n\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <form [formGroup]=\"geofenceForm\" class=\"row\">\n                    <div class=\"form-group col-md-6\">\n                        <label>Name</label>\n                        <input type=\"text\" (keypress)=\"AlphabetOnly($event)\" (keydown.space)=\"$event.preventDefault()\" class=\"form-control\" formControlName=\"geofenceName\" placeholder=\"Geofence Name\">\n                        <mat-error *ngIf=\"submitted && geofenceForm.get('geofenceName').hasError('required')\">\n                            Please enter name\n                        </mat-error>\n                        <mat-error *ngIf=\"submitted && geofenceForm.get('geofenceName').hasError('maxlength')\">\n                            Maximum 30 character allowed\n                        </mat-error>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label> Insert delivery price </label>\n                        <input type=\"text\" class=\"form-control\" (keypress)=\"NumberOnly($event)\" (keydown.space)=\"$event.preventDefault()\" placeholder=\"Insert delivery price\" formControlName=\"deliverycharges\">\n                        <mat-error *ngIf=\"submitted && geofenceForm.get('deliverycharges').hasError('required')\">\n                            Please insert delivery price\n                        </mat-error>\n                    </div>\n                </form>\n                <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\" [styles]=\"styles\" #map2 (mapReady)=\"onMapReady($event)\">\n                    <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [markerDraggable]=\"false\"></agm-marker>\n                </agm-map>\n\n                <button class=\"btn btn-primary mt-3\" (click)=\"save()\">Save</button>\n                <!-- <a routerLink=\"/pages/geofenceList\" class=\"btn btn-primary mt-3\">Veiw</a> -->\n            </div>\n        </div>\n    </div>\n</div>","import { MapsAPILoader } from '@agm/core';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { CommonService } from 'src/app/_services/common.service';\n\n@Component({\n  selector: 'app-geofenceedit',\n  templateUrl: './geofenceedit.component.html',\n  styleUrls: ['./geofenceedit.component.css']\n})\nexport class GeofenceeditComponent implements OnInit {\n  @ViewChild('map2', { static: true }) map1;\n \n\n  lat = -34.397;\n  lng = 150.644;\n  latA = -34.754764;\n  lngA = 149.736246;\n  \n\n  address: string;\n  driverName: any;\n  selectedZoom: number;\n  latitude: number;\n  longitude: number;\n  zoom: number = 11;\n  searchString: any;\n  polyarray: any = [];\n  geoId: any\n  driverId: any\n  drawingManager: any;\n  addgeofence: boolean = true;\n  fencingList: any = [];\n  constructTriangle: any;\n  @ViewChild(\"AgmMap\", { static: true }) Map: any;\n  adminId: any;\n  vacantDriversList: any = [];\n  selected: any[];\n  otherDriversList: any = [];\n  vacantDriverView: boolean = false;\n  fancingDriverName: any;\n  vacantDrivers: any = [];\n  fencingDrivers: any;\n  geoFenceId: any;\n  fencingDriversList: any;\n  geoFenceList: any;\n  formGroup: any;\n  list: any;\n  multiple: any;\n  usersession: any;\n  permissions: any;\n  locationPoints: any;\n  progress: any;\n  sub: any;\n  \n  //zoom: number;\n  geoCoder: google.maps.Geocoder;\n  geofenceForm: FormGroup\n\n  styles: any = [\n    {\n      featureType: 'all',\n      stylers: [\n        {\n          saturation: -80\n        }\n      ]\n    },\n    {\n      featureType: 'road.arterial',\n      elementType: 'geometry',\n      stylers: [\n        {\n          hue: '#00ffee'\n        },\n        {\n          saturation: 50\n        }\n      ]\n    },\n    {\n      featureType: 'poi.business',\n      elementType: 'labels',\n      stylers: [\n        {\n          visibility: 'off'\n        }\n      ]\n    }\n  ];\n  id: any;\n  UserList: any;\n  submitted: any;\n  constructor(private act:ActivatedRoute,private toaster:ToastrService,public service:CommonService,private mapsAPILoader: MapsAPILoader, private router: Router, private fb: FormBuilder) { \n    this.act.params.subscribe((res:any)=>{\n      this.id = res.id\n    })\n  }\n  ngOnInit(): void {\n    // this.getCustomer()\n    this.geofenceForm = this.fb.group({\n      geofenceName: ['', [Validators.required,Validators.maxLength(30)]],\n      deliverycharges:['',Validators.required]\n    })\n    this.mapsAPILoader.load().then(() => {\n      this.geoCoder = new google.maps.Geocoder;\n    });\n  }\n  getCustomer(){\n    let url= `/getGeofencebyid/${this.id}`\n    this.service.get(url).subscribe((res:any)=>{\n     if (res.message=='SUCCESS') {\n      //  this.UserList = res.data.find(ele=>ele._id=this.id)\n      console.log(res);\n       this.geofenceForm.patchValue({\n        geofenceName: res.data[0].name,\n        deliverycharges:res.data[0].deliveryPrice\n       })\n       console.log(\"this is geo obj\",res.data[0].geoPoints.coordinates)\n       this.geoFenceId = res.data[0]._id;\n       this.locationPoints = res.data[0].geoPoints.coordinates[0];\n       console.log(\"hoi there\",this.locationPoints);\n       this.onEdit(this.locationPoints, this.geoFenceId);\n     } else {\n      //  this.toaster.error(res.message);\n     }\n    }, error => {\n    //  this.toaster.error('Something went wrong');\n    })\n  }\n\n  back() {\n    history.back()\n  }\n\n  onEdit(locationPoints, geoId) {\n\n    this.geoFenceId = '';\n    // console.log('geoId', geoId);\n\n    this.geoFenceId = geoId;\n    var drawPolygonArr = [];\n    locationPoints.forEach(element => {\n      drawPolygonArr.push({\n        lat: element[1],\n        lng: element[0]\n      })\n      this.latitude = element[1];\n      this.longitude = element[0];\n    });\n    console.log(drawPolygonArr);\n    if (this.constructTriangle) {\n      this.constructTriangle.setMap(null)\n    }\n    // Construct the polygon.\n    this.constructTriangle = new google.maps.Polygon({\n      paths: drawPolygonArr,\n      strokeColor: '#FF0000',\n      strokeOpacity: 0.8,\n      strokeWeight: 3,\n      fillColor: '#FF0000',\n      fillOpacity: 0.35,\n      editable: true,\n      draggable: true\n    })\n    this.constructTriangle.setMap(null);\n\n    this.constructTriangle.setMap(this.Map);\n\n\n\n    console.log(\"this.polyarray \", this.polyarray)\n   \n  }\n\n  save() {\n    this.getPolygonCoordinates(this.constructTriangle);\n  }\n\n  getAddress(latitude, longitude) {\n    this.geoCoder.geocode({ 'location': { lat: latitude, lng: longitude } }, (results, status) => {\n\n    });\n  }\n\n  onMapReady(map) {\n    this.Map = map;\n    // this.initDrawingManager(this.Map);\n  }\n  onMapReady1(map) {\n    this.Map = map;\n    this.initDrawingManager(this.Map);\n\n  }\n\n\n  initDrawingManager(map: any) {\n    this.drawingManager = new google.maps.drawing.DrawingManager({\n      drawingControl: true,\n      drawingControlOptions: {\n\n        drawingModes: [google.maps.drawing.OverlayType.POLYGON]\n      },\n      polygonOptions: {\n        draggable: true,\n        editable: true\n      },\n      drawingMode: google.maps.drawing.OverlayType.POLYGON\n    });\n\n    this.drawingManager.setMap(map);\n\n\n    google.maps.event.addListener(this.drawingManager, 'overlaycomplete',\n      (event) => {\n        if (event.type === google.maps.drawing.OverlayType.POLYGON) { //this is the coordinate, you can assign it to a variable or pass into another function. \n\n          this.polyarray = event.overlay.getPath().getArray();\n        }\n      });\n\n  }\n\n  submitData()\n  {\n    this.submitted=true\n    this.getPolygonCoordinates(this.constructTriangle);\n  }\n\n\n  getPolygonCoordinates(draggablePolygon) {\n\n    const len = draggablePolygon.getPath().getLength();\n    const polyArrayLatLng = [];\n\n    for (let i = 0; i < len; i++) {\n      const vertex = draggablePolygon.getPath().getAt(i);\n      const vertexLatLng = { lat: vertex.lat(), lng: vertex.lng() };\n      polyArrayLatLng.push(vertexLatLng);\n    }\n\n    if (this.geofenceForm.valid && polyArrayLatLng.length) {\n      this.addgeofence = false;\n      var geofenceData = {\n        \"name\": this.geofenceForm.get('geofenceName').value,\n        \"deliveryPrice\": this.geofenceForm.get('deliverycharges').value,\n\n        \"points\": polyArrayLatLng\n      }\n      // this.service.UpdateGeo(this.geoFenceId,geofenceData).subscribe((res:any) => {  change this by required api\n       this.service.put(this.geoFenceId,geofenceData).subscribe((res:any) => {\n\n        if (res['success'] == true) {\n          this.addgeofence = false;\n          this.toaster.success(res.message);\n\n          this.router.navigate(['/pages/geofencelist'])\n        } else {\n          this.toaster.error(res.message);\n        }\n\n      });\n    } else {\n      // this.commonService.errorToast('Please Select a region')\n    }\n\n    \n  }\n\n\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <form [formGroup]=\"geofenceForm\" class=\"row\">\n                    <div class=\"form-group col-md-6\">\n                        <label>Name</label>\n                        <input type=\"text\" class=\"form-control\" (keydown.space)=\"$event.preventDefault()\" formControlName=\"geofenceName\" placeholder=\"Geofence Name\">\n                        <mat-error *ngIf=\"submitted && geofenceForm.get('geofenceName').hasError('required')\">\n                            Please enter name\n                        </mat-error>\n                        <mat-error *ngIf=\"submitted && geofenceForm.get('geofenceName').hasError('maxlength')\">\n                            Maximum 30 character allowed\n                        </mat-error>\n\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <label> Insert delivery price </label>\n                        <input type=\"text\" class=\"form-control\" (keydown.space)=\"$event.preventDefault()\" placeholder=\"Insert delivery price\" formControlName=\"deliverycharges\">\n                        <mat-error *ngIf=\"submitted && geofenceForm.get('deliverycharges').hasError('required')\">\n                            Please enter delivery charges\n                        </mat-error>\n                    </div>\n                </form>\n                <agm-map [latitude]=\"latitude\" [longitude]=\"longitude\" [zoom]=\"14\" (mapReady)=\"onMapReady1($event)\">\n                </agm-map>\n\n                <button class=\"btn btn-primary mt-3\" [disabled]=\"geofenceForm.invalid\"  (click)=\"submitData()\">Update</button>\n                <button class=\"btn btn-warning mt-3 ml-3\"  [routerLink]=\"['/pages/geofencelist']\" routerLinkActive=\"router-link-active\" >Back</button>\n                <!-- <a routerLink=\"/pages/geofenceList\" class=\"btn btn-primary mt-3\">Veiw</a> -->\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild} from '@angular/core';\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-geofencelist',\n  templateUrl: './geofencelist.component.html',\n  styleUrls: ['./geofencelist.component.css']\n})\nexport class GeofencelistComponent implements OnInit {\n  @ViewChild('map2', { static: true }) map1;\n \n\n  lat = -34.397;\n  lng = 150.644;\n  latA = -34.754764;\n  lngA = 149.736246;\n  zoom = 8;\n\n  styles: any = [\n    {\n      featureType: 'all',\n      stylers: [\n        {\n          saturation: -80\n        }\n      ]\n    },\n    {\n      featureType: 'road.arterial',\n      elementType: 'geometry',\n      stylers: [\n        {\n          hue: '#00ffee'\n        },\n        {\n          saturation: 50\n        }\n      ]\n    },\n    {\n      featureType: 'poi.business',\n      elementType: 'labels',\n      stylers: [\n        {\n          visibility: 'off'\n        }\n      ]\n    }\n  ];\n\n  constructor(private modalService: NgbModal) { }\n\n  ngOnInit(): void {\n  }\n  addspeech(content3) {\n    this.modalService.open(content3, {backdropClass: 'light-blue-backdrop',centered: true,size: 'lg'});\n  }\n  editspeech(content4) {\n    this.modalService.open(content4, {backdropClass: 'light-blue-backdrop',centered: true,size: 'lg'});\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-md-12 text-right\">\n                <!-- <a (click)=\"addspeech(content3)\" class=\"btn btn-primary text-white mb-3\">Add Geofence</a> -->\n                <a routerLink=\"/pages/geofence/add\" class=\"btn btn-primary text-white mb-3\">Add Geofence</a>\n            \n            </div>\n            <div class=\"col-md-3\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <ul class=\"mb-0\">\n                           \n                            <!-- <li class=\"d-flex\">Geo Fencing <span class=\"ml-auto\"><a class=\"cursor_pointer\" (click)=\"editspeech(content4)\"><i class=\"fas fa-pencil-alt\"></i></a><a href=\"javascript:void()\" class=\"ml-2\"><i class=\"fas fa-trash\"></i></a></span></li> -->\n                            <li class=\"d-flex\">Geo Fencing <span class=\"ml-auto\"><a class=\"cursor_pointer\"  routerLink=\"/pages/geofence/edit\"><i class=\"fas fa-pencil-alt\"></i></a><a href=\"javascript:void()\" class=\"ml-2\"><i class=\"fas fa-trash\"></i></a></span></li>\n                        \n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-3\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <ul class=\"mb-0\">\n                            <li class=\"d-flex\">Geo Fencing <span class=\"ml-auto\"><a class=\"cursor_pointer\" (click)=\"editspeech(content4)\"><i class=\"fas fa-pencil-alt\"></i></a><a href=\"javascript:void()\" class=\"ml-2\"><i class=\"fas fa-trash\"></i></a></span></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-3\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <ul class=\"mb-0\">\n                            <li class=\"d-flex\">Geo Fencing <span class=\"ml-auto\"><a class=\"cursor_pointer\" (click)=\"editspeech(content4)\"><i class=\"fas fa-pencil-alt\"></i></a><a href=\"javascript:void()\" class=\"ml-2\"><i class=\"fas fa-trash\"></i></a></span></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #content3 let-modal>\n    <div class=\"modal-header p-2\">\n        <h4 class=\"modal-title\">Add Geofence</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\"><span aria-hidden=\"true\">&times;</span></button>\n    </div>\n    <div class=\"modal-body\">\n        <form action=\"\">\n            <div class=\"form-group\">\n                <label>Name</label>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Add Geofence Name\">\n            </div>\n        </form>\n        <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\" [styles]=\"styles\" #map2></agm-map>\n        <div class=\"col-12\"><button class=\"btn theme_btn mt-3\">Save</button></div>\n    </div>\n</ng-template>\n\n<ng-template #content4 let-modal>\n    <div class=\"modal-header p-2\">\n        <h4 class=\"modal-title\">Edit Geofence</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n    </div>\n    <div class=\"modal-body\">\n        <form action=\"\">\n            <div class=\"form-group\">\n                <label>Name</label>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Edit Geofence Name\">\n            </div>\n        </form>\n        <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\" [styles]=\"styles\" #map2></agm-map>\n        <div class=\"col-12\"><button class=\"btn theme_btn mt-3\">Save</button></div>\n    </div>\n</ng-template>\n"]}